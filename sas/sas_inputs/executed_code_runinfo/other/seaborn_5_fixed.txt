# Executed Cells:
## Cell 1:

import numpy as np
import pandas as pd
%matplotlib inline
import seaborn as sns
import matplotlib.pyplot as plt
import cv2
import os
import warnings
warnings.filterwarnings('ignore')
import tensorflow as tf
import random
import albumentations as A
from tensorflow.keras.preprocessing.image import ImageDataGenerator
from tensorflow.keras.layers import Dense,Activation,Flatten, Conv2D, MaxPooling2D
from tensorflow.keras.models import Sequential
from tensorflow.keras.callbacks import ModelCheckpoint,EarlyStopping

## Cell 2:

train_image_path = '../input/plant-pathology-2021-fgvc8/train_images'
test_image_path = '../input/plant-pathology-2021-fgvc8/test_images'
train_df_path = 'data/train.csv'
test_df_path = 'data/sample_submission.csv'

## Cell 3:

df_train = pd.read_csv(train_df_path)
df_test=pd.read_csv(test_df_path)

# Annotated Target Code:
df_train: pd.DataFrame


plt.figure(figsize=(15,12))



labels = sns.barplot(x=df_train.labels.value_counts().index, y=df_train.labels.value_counts())

for item in labels.get_xticklabels():
    item.set_rotation(45)