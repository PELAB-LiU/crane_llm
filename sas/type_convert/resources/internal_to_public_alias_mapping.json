{
    "numpy": {
        "numpy.DataSource": "numpy.lib.npyio.DataSource",
        "numpy.RankWarning": "numpy.lib.polynomial.RankWarning",
        "numpy.core._multiarray_umath.add_docstring": "numpy.lib.function_base.add_docstring",
        "numpy.core.function_base.add_newdoc": "numpy.lib.function_base.add_newdoc",
        "numpy.core._multiarray_umath._add_newdoc_ufunc": "numpy.lib.function_base.add_newdoc_ufunc",
        "numpy.all": "numpy.linalg.linalg.all",
        "numpy.allclose": "numpy.core.numeric.allclose",
        "numpy.alltrue": "numpy.core.fromnumeric.alltrue",
        "numpy.amax": "numpy.ma.core.amax",
        "numpy.amin": "numpy.ma.core.amin",
        "numpy.angle": "numpy.lib.function_base.angle",
        "numpy.any": "numpy.lib.function_base.any",
        "numpy.append": "numpy.lib.function_base.append",
        "numpy.apply_along_axis": "numpy.lib.shape_base.apply_along_axis",
        "numpy.apply_over_axes": "numpy.lib.shape_base.apply_over_axes",
        "numpy.arange": "numpy.lib.twodim_base.arange",
        "numpy.argmax": "numpy.core.fromnumeric.argmax",
        "numpy.argmin": "numpy.core.fromnumeric.argmin",
        "numpy.argpartition": "numpy.core.fromnumeric.argpartition",
        "numpy.argsort": "numpy.linalg.linalg.argsort",
        "numpy.argwhere": "numpy.core.numeric.argwhere",
        "numpy.around": "numpy.core.fromnumeric.around",
        "numpy.array": "numpy.ma.extras.nxarray",
        "numpy.array2string": "numpy.core.arrayprint.array2string",
        "numpy.array_equal": "numpy.core.numeric.array_equal",
        "numpy.array_equiv": "numpy.core.numeric.array_equiv",
        "numpy.array_repr": "numpy.core.arrayprint.array_repr",
        "numpy.array_split": "numpy.lib.shape_base.array_split",
        "numpy.array_str": "numpy.core.arrayprint.array_str",
        "numpy.asanyarray": "numpy.linalg.linalg.asanyarray",
        "numpy.asarray": "numpy.linalg.linalg.asarray",
        "numpy.asarray_chkfinite": "numpy.lib.function_base.asarray_chkfinite",
        "numpy.ascontiguousarray": "numpy.core.umath.ascontiguousarray",
        "numpy.asfarray": "numpy.lib.type_check.asfarray",
        "numpy.asfortranarray": "numpy.core.umath.asfortranarray",
        "numpy.asmatrix": "numpy.mat",
        "numpy.atleast_1d": "numpy.lib.polynomial.atleast_1d",
        "numpy.atleast_2d": "numpy.linalg.linalg.atleast_2d",
        "numpy.atleast_3d": "numpy.lib.shape_base.atleast_3d",
        "numpy.average": "numpy.lib.function_base.average",
        "numpy.bartlett": "numpy.lib.function_base.bartlett",
        "numpy.base_repr": "numpy.core.numeric.base_repr",
        "numpy.binary_repr": "numpy.core.numeric.binary_repr",
        "numpy.bincount": "numpy.lib.function_base.bincount",
        "numpy.blackman": "numpy.lib.function_base.blackman",
        "numpy.block": "numpy.core.shape_base.block",
        "numpy.bmat": "numpy.matrixlib.defmatrix.bmat",
        "numpy.bool_": "numpy.ma.core.bool_",
        "numpy.broadcast": "numpy.core.umath.broadcast",
        "numpy.broadcast_arrays": "numpy.lib.stride_tricks.broadcast_arrays",
        "numpy.broadcast_shapes": "numpy.lib.stride_tricks.broadcast_shapes",
        "numpy.broadcast_to": "numpy.lib.twodim_base.broadcast_to",
        "numpy.busday_count": "numpy.core.numeric.busday_count",
        "numpy.busday_offset": "numpy.core.numeric.busday_offset",
        "numpy.busdaycalendar": "numpy.core.umath.busdaycalendar",
        "numpy.int8": "numpy.int8",
        "numpy.lib.utils.byte_bounds": "numpy.lib.utils.byte_bounds",
        "numpy.bytes_": "numpy.string_",
        "numpy.can_cast": "numpy.core.numeric.can_cast",
        "numpy.complex128": "numpy.complex_",
        "numpy.char.add": "numpy.core.defchararray.add",
        "numpy.char.array": "numpy.core.defchararray.array",
        "numpy.char.asarray": "numpy.core.defchararray.asarray",
        "numpy.compat.py3k.asbytes": "numpy.lib.npyio.asbytes",
        "numpy.char.capitalize": "numpy.core.defchararray.capitalize",
        "numpy.char.center": "numpy.core.defchararray.center",
        "numpy.character": "numpy.character",
        "numpy.chararray": "numpy.chararray",
        "numpy.core._multiarray_umath.compare_chararrays": "numpy.compare_chararrays",
        "numpy.char.count": "numpy.core.defchararray.count",
        "numpy.char.decode": "numpy.core.defchararray.decode",
        "numpy.char.encode": "numpy.core.defchararray.encode",
        "numpy.char.endswith": "numpy.core.defchararray.endswith",
        "numpy.char.equal": "numpy.core.defchararray.equal",
        "numpy.char.expandtabs": "numpy.core.defchararray.expandtabs",
        "numpy.char.find": "numpy.core.defchararray.find",
        "numpy.char.greater": "numpy.core.defchararray.greater",
        "numpy.char.greater_equal": "numpy.core.defchararray.greater_equal",
        "numpy.char.index": "numpy.core.defchararray.index",
        "numpy.int64": "numpy.intp",
        "numpy.integer": "numpy.integer",
        "numpy.char.isalnum": "numpy.core.defchararray.isalnum",
        "numpy.char.isalpha": "numpy.core.defchararray.isalpha",
        "numpy.char.isdecimal": "numpy.core.defchararray.isdecimal",
        "numpy.char.isdigit": "numpy.core.defchararray.isdigit",
        "numpy.char.islower": "numpy.core.defchararray.islower",
        "numpy.char.isnumeric": "numpy.core.defchararray.isnumeric",
        "numpy.char.isspace": "numpy.core.defchararray.isspace",
        "numpy.char.istitle": "numpy.core.defchararray.istitle",
        "numpy.char.isupper": "numpy.core.defchararray.isupper",
        "numpy.char.join": "numpy.core.defchararray.join",
        "numpy.char.less": "numpy.core.defchararray.less",
        "numpy.char.less_equal": "numpy.core.defchararray.less_equal",
        "numpy.char.ljust": "numpy.core.defchararray.ljust",
        "numpy.char.lower": "numpy.core.defchararray.lower",
        "numpy.char.lstrip": "numpy.core.defchararray.lstrip",
        "numpy.char.mod": "numpy.core.defchararray.mod",
        "numpy.char.multiply": "numpy.core.defchararray.multiply",
        "numpy.ndarray": "numpy.ndarray",
        "numpy.char.not_equal": "numpy.core.defchararray.not_equal",
        "numpy.choose": "numpy.choose",
        "numpy.clip": "numpy.clip",
        "numpy.clongdouble": "numpy.longcomplex",
        "numpy.column_stack": "numpy.column_stack",
        "numpy.common_type": "numpy.common_type",
        "numpy.compat.py3k.asbytes_nested": "numpy.compat.py3k.asbytes_nested",
        "numpy.compat.py3k.asstr": "numpy.lib.npyio.asstr",
        "numpy.compat.py3k.asunicode": "numpy.lib.npyio.asunicode",
        "numpy.compat.py3k.asunicode_nested": "numpy.compat.py3k.asunicode_nested",
        "numpy.compat.py3k.contextlib_nullcontext": "numpy.compat.py3k.contextlib_nullcontext",
        "numpy._utils._inspect.formatargspec": "numpy.ma.core.formatargspec",
        "numpy._utils._inspect.getargspec": "numpy.ma.core.getargspec",
        "numpy.compat.py3k.getexception": "numpy.compat.py3k.getexception",
        "numpy.compat.py3k.is_pathlib_path": "numpy.compat.py3k.is_pathlib_path",
        "numpy.compat.py3k.isfileobj": "numpy.lib.format.isfileobj",
        "numpy.compat.py3k.npy_load_module": "numpy.compat.py3k.npy_load_module",
        "numpy.compat.py3k.open_latin1": "numpy.compat.py3k.open_latin1",
        "numpy.compat.py3k.sixu": "numpy.compat.sixu",
        "numpy.complex64": "numpy.singlecomplex",
        "numpy.complexfloating": "numpy.complexfloating",
        "numpy.compress": "numpy.compress",
        "numpy.concatenate": "numpy.concatenate",
        "numpy.convolve": "numpy.convolve",
        "numpy.copy": "numpy.copy",
        "numpy.copyto": "numpy.copyto",
        "numpy.corrcoef": "numpy.corrcoef",
        "numpy.correlate": "numpy.correlate",
        "numpy.count_nonzero": "numpy.count_nonzero",
        "numpy.cov": "numpy.cov",
        "numpy.cross": "numpy.cross",
        "numpy.ctypeslib.as_array": "numpy.ctypeslib.as_array",
        "numpy.ctypeslib.as_ctypes": "numpy.ctypeslib.as_ctypes",
        "numpy.ctypeslib.as_ctypes_type": "numpy.ctypeslib.as_ctypes_type",
        "numpy.core.multiarray.flagsobj": "numpy.core.umath.flagsobj",
        "numpy.frombuffer": "numpy.frombuffer",
        "numpy.ctypeslib.load_library": "numpy.ctypeslib.load_library",
        "numpy.ctypeslib.ndpointer": "numpy.ctypeslib.ndpointer",
        "numpy.cumprod": "numpy.cumprod",
        "numpy.cumproduct": "numpy.cumproduct",
        "numpy.cumsum": "numpy.cumsum",
        "numpy.datetime64": "numpy.datetime64",
        "numpy.datetime_as_string": "numpy.datetime_as_string",
        "numpy.datetime_data": "numpy.datetime_data",
        "numpy.delete": "numpy.delete",
        "numpy.lib.utils.deprecate": "numpy.deprecate",
        "numpy.lib.utils.deprecate_with_doc": "numpy.deprecate_with_doc",
        "numpy.diag": "numpy.diag",
        "numpy.diag_indices": "numpy.diag_indices",
        "numpy.diag_indices_from": "numpy.diag_indices_from",
        "numpy.diagflat": "numpy.diagflat",
        "numpy.diagonal": "numpy.diagonal",
        "numpy.diff": "numpy.diff",
        "numpy.digitize": "numpy.digitize",
        "numpy.lib.function_base.disp": "numpy.disp",
        "numpy.dot": "numpy.dot",
        "numpy.float64": "numpy.float_",
        "numpy.dsplit": "numpy.dsplit",
        "numpy.dstack": "numpy.dstack",
        "numpy.dtype": "numpy.dtype",
        "numpy.dtypes.BoolDType": "numpy.dtypes.BoolDType",
        "numpy.dtypes.Int8DType": "numpy.dtypes.Int8DType",
        "numpy.dtypes.BytesDType": "numpy.dtypes.BytesDType",
        "numpy.dtypes.CLongDoubleDType": "numpy.dtypes.CLongDoubleDType",
        "numpy.dtypes.Complex128DType": "numpy.dtypes.Complex128DType",
        "numpy.dtypes.Complex64DType": "numpy.dtypes.Complex64DType",
        "numpy.dtypes.DateTime64DType": "numpy.dtypes.DateTime64DType",
        "numpy.dtypes.Float16DType": "numpy.dtypes.Float16DType",
        "numpy.dtypes.Float32DType": "numpy.dtypes.Float32DType",
        "numpy.dtypes.Float64DType": "numpy.dtypes.Float64DType",
        "numpy.dtypes.Int16DType": "numpy.dtypes.ShortDType",
        "numpy.dtypes.Int32DType": "numpy.dtypes.IntDType",
        "numpy.dtypes.Int64DType": "numpy.dtypes.LongDType",
        "numpy.dtypes.LongDoubleDType": "numpy.dtypes.LongDoubleDType",
        "numpy.dtypes.LongLongDType": "numpy.dtypes.LongLongDType",
        "numpy.dtypes.ObjectDType": "numpy.dtypes.ObjectDType",
        "numpy.dtypes.StrDType": "numpy.dtypes.StrDType",
        "numpy.dtypes.TimeDelta64DType": "numpy.dtypes.TimeDelta64DType",
        "numpy.dtypes.UInt8DType": "numpy.dtypes.UInt8DType",
        "numpy.dtypes.UInt16DType": "numpy.dtypes.UShortDType",
        "numpy.dtypes.UInt32DType": "numpy.dtypes.UIntDType",
        "numpy.dtypes.UInt64DType": "numpy.dtypes.ULongDType",
        "numpy.dtypes.ULongLongDType": "numpy.dtypes.ULongLongDType",
        "numpy.dtypes.VoidDType": "numpy.dtypes.VoidDType",
        "numpy.ediff1d": "numpy.ediff1d",
        "numpy.einsum": "numpy.einsum",
        "numpy.einsum_path": "numpy.einsum_path",
        "numpy.lib.scimath.arccos": "numpy.lib.scimath.arccos",
        "numpy.lib.scimath.arcsin": "numpy.lib.scimath.arcsin",
        "numpy.lib.scimath.arctanh": "numpy.lib.scimath.arctanh",
        "numpy.core.overrides.array_function_dispatch": "numpy.lib.ufunclike.array_function_dispatch",
        "numpy.isreal": "numpy.isreal",
        "numpy.lib.scimath.log": "numpy.lib.scimath.log",
        "numpy.lib.scimath.log10": "numpy.lib.scimath.log10",
        "numpy.lib.scimath.log2": "numpy.lib.scimath.log2",
        "numpy.lib.scimath.logn": "numpy.lib.scimath.logn",
        "numpy.core._type_aliases.bitname": "numpy.core.numerictypes.bitname",
        "numpy.core._string_helpers.english_capitalize": "numpy.core.numerictypes.english_capitalize",
        "numpy.core._string_helpers.english_lower": "numpy.core.numerictypes.english_lower",
        "numpy.core._string_helpers.english_upper": "numpy.core.numerictypes.english_upper",
        "numpy.find_common_type": "numpy.find_common_type",
        "numpy.flexible": "numpy.flexible",
        "numpy.longdouble": "numpy.longfloat",
        "numpy.float16": "numpy.half",
        "numpy.float32": "numpy.single",
        "numpy.floating": "numpy.floating",
        "numpy.generic": "numpy.generic",
        "numpy.inexact": "numpy.inexact",
        "numpy.int16": "numpy.short",
        "numpy.int32": "numpy.intc",
        "numpy.is_busday": "numpy.is_busday",
        "numpy.issctype": "numpy.issctype",
        "numpy.issubclass_": "numpy.issubclass_",
        "numpy.issubdtype": "numpy.issubdtype",
        "numpy.issubsctype": "numpy.issubsctype",
        "numpy.longlong": "numpy.longlong",
        "numpy.maximum_sctype": "numpy.maximum_sctype",
        "numpy.number": "numpy.number",
        "numpy.obj2sctype": "numpy.obj2sctype",
        "numpy.object_": "numpy.object_",
        "numpy.sctype2char": "numpy.sctype2char",
        "numpy._utils.set_module": "numpy.core.defchararray.set_module",
        "numpy.signedinteger": "numpy.signedinteger",
        "numpy.str_": "numpy.unicode_",
        "numpy.timedelta64": "numpy.timedelta64",
        "numpy.uint8": "numpy.uint8",
        "numpy.uint64": "numpy.uintp",
        "numpy.uint16": "numpy.ushort",
        "numpy.uint32": "numpy.uintc",
        "numpy.ulonglong": "numpy.ulonglong",
        "numpy.unsignedinteger": "numpy.unsignedinteger",
        "numpy.void": "numpy.void",
        "numpy.exceptions.AxisError": "numpy.exceptions.AxisError",
        "numpy.exceptions.ComplexWarning": "numpy.exceptions.ComplexWarning",
        "numpy.exceptions.TooHardError": "numpy.exceptions.TooHardError",
        "numpy.core.arrayprint.BoolFormat": "numpy.core.arrayprint.BoolFormat",
        "numpy.core.arrayprint.ComplexFloatingFormat": "numpy.core.arrayprint.ComplexFloatingFormat",
        "numpy.core.arrayprint.DatetimeFormat": "numpy.core.arrayprint.DatetimeFormat",
        "numpy.core.arrayprint.FloatingFormat": "numpy.core.arrayprint.FloatingFormat",
        "numpy.core.arrayprint.IntegerFormat": "numpy.core.arrayprint.IntegerFormat",
        "numpy.core.arrayprint.StructuredVoidFormat": "numpy.core.arrayprint.StructuredVoidFormat",
        "numpy.core.arrayprint.SubArrayFormat": "numpy.core.arrayprint.SubArrayFormat",
        "numpy.core.arrayprint.TimedeltaFormat": "numpy.core.arrayprint.TimedeltaFormat",
        "numpy.core._multiarray_umath.dragon4_positional": "numpy.polynomial.polyutils.dragon4_positional",
        "numpy.core._multiarray_umath.dragon4_scientific": "numpy.polynomial.polyutils.dragon4_scientific",
        "numpy.core.arrayprint.dtype_is_implied": "numpy.core.arrayprint.dtype_is_implied",
        "numpy.core.arrayprint.dtype_short_repr": "numpy.core.arrayprint.dtype_short_repr",
        "numpy.errstate": "numpy.errstate",
        "numpy.format_float_positional": "numpy.format_float_positional",
        "numpy.format_float_scientific": "numpy.format_float_scientific",
        "numpy.get_printoptions": "numpy.get_printoptions",
        "numpy.core._multiarray_umath.c_einsum": "numpy.core.umath.c_einsum",
        "numpy.core._multiarray_umath.correlate": "numpy.core.umath.correlate",
        "numpy.core._multiarray_umath.correlate2": "numpy.core.umath.correlate2",
        "numpy.core._multiarray_umath.count_nonzero": "numpy.core.umath.count_nonzero",
        "numpy.empty": "numpy.empty",
        "numpy.empty_like": "numpy.empty_like",
        "numpy.core._multiarray_umath.fastCopyAndTranspose": "numpy.fastCopyAndTranspose",
        "numpy.flatiter": "numpy.flatiter",
        "numpy.core._multiarray_umath.format_longfloat": "numpy.core.umath.format_longfloat",
        "numpy.from_dlpack": "numpy.from_dlpack",
        "numpy.fromfile": "numpy.fromfile",
        "numpy.fromiter": "numpy.fromiter",
        "numpy.frompyfunc": "numpy.frompyfunc",
        "numpy.fromstring": "numpy.fromstring",
        "numpy.core._multiarray_umath.get_handler_name": "numpy.core.umath.get_handler_name",
        "numpy.core._multiarray_umath.get_handler_version": "numpy.core.umath.get_handler_version",
        "numpy.geterrobj": "numpy.geterrobj",
        "numpy.inner": "numpy.inner",
        "numpy.core._multiarray_umath.interp": "numpy.lib.function_base.compiled_interp",
        "numpy.core._multiarray_umath.interp_complex": "numpy.lib.function_base.compiled_interp_complex",
        "numpy.lexsort": "numpy.lexsort",
        "numpy.may_share_memory": "numpy.may_share_memory",
        "numpy.min_scalar_type": "numpy.min_scalar_type",
        "numpy.nditer": "numpy.nditer",
        "numpy.nested_iters": "numpy.nested_iters",
        "numpy.core._multiarray_umath.normalize_axis_index": "numpy.polynomial.polynomial.normalize_axis_index",
        "numpy.core.overrides.ArgSpec": "numpy.core.overrides.ArgSpec",
        "numpy.core.overrides.array_function_from_dispatcher": "numpy.core.overrides.array_function_from_dispatcher",
        "numpy.core.overrides.set_array_function_like_doc": "numpy.lib.twodim_base.set_array_function_like_doc",
        "numpy.core.overrides.verify_matching_signatures": "numpy.core.overrides.verify_matching_signatures",
        "numpy.packbits": "numpy.packbits",
        "numpy.promote_types": "numpy.promote_types",
        "numpy.putmask": "numpy.putmask",
        "numpy.ravel_multi_index": "numpy.ravel_multi_index",
        "numpy.result_type": "numpy.result_type",
        "numpy.core.multiarray.scalar": "numpy.core.umath.scalar",
        "numpy.core._multiarray_umath.set_datetimeparse_function": "numpy.core.umath.set_datetimeparse_function",
        "numpy.core._multiarray_umath.set_legacy_print_mode": "numpy.core.umath.set_legacy_print_mode",
        "numpy.set_numeric_ops": "numpy.set_numeric_ops",
        "numpy.core._multiarray_umath.set_string_function": "numpy.core.umath.set_string_function",
        "numpy.core._multiarray_umath.set_typeDict": "numpy.core.umath.set_typeDict",
        "numpy.seterrobj": "numpy.seterrobj",
        "numpy.shares_memory": "numpy.shares_memory",
        "numpy.core.multiarray.typeinforanged": "numpy.core.umath.typeinforanged",
        "numpy.unpackbits": "numpy.unpackbits",
        "numpy.unravel_index": "numpy.unravel_index",
        "numpy.vdot": "numpy.vdot",
        "numpy.where": "numpy.where",
        "numpy.zeros": "numpy.zeros",
        "numpy.printoptions": "numpy.printoptions",
        "numpy.core.arrayprint.repr_format": "numpy.core.arrayprint.repr_format",
        "numpy.set_printoptions": "numpy.set_printoptions",
        "numpy.core.arrayprint.set_string_function": "numpy.set_string_function",
        "numpy.core.arrayprint.str_format": "numpy.core.arrayprint.str_format",
        "numpy.core.numeric.extend_all": "numpy.core.numeric.extend_all",
        "numpy.flatnonzero": "numpy.flatnonzero",
        "numpy.fromfunction": "numpy.fromfunction",
        "numpy.max": "numpy.max",
        "numpy.mean": "numpy.mean",
        "numpy.min": "numpy.min",
        "numpy.ndim": "numpy.ndim",
        "numpy.nonzero": "numpy.nonzero",
        "numpy.partition": "numpy.partition",
        "numpy.prod": "numpy.prod",
        "numpy.product": "numpy.product",
        "numpy.ptp": "numpy.ptp",
        "numpy.put": "numpy.put",
        "numpy.ravel": "numpy.ravel",
        "numpy.repeat": "numpy.repeat",
        "numpy.reshape": "numpy.reshape",
        "numpy.resize": "numpy.resize",
        "numpy.round": "numpy.round",
        "numpy.round_": "numpy.round_",
        "numpy.searchsorted": "numpy.searchsorted",
        "numpy.shape": "numpy.shape",
        "numpy.size": "numpy.size",
        "numpy.sometrue": "numpy.sometrue",
        "numpy.sort": "numpy.sort",
        "numpy.squeeze": "numpy.squeeze",
        "numpy.std": "numpy.std",
        "numpy.sum": "numpy.sum",
        "numpy.swapaxes": "numpy.swapaxes",
        "numpy.take": "numpy.take",
        "numpy.trace": "numpy.trace",
        "numpy.transpose": "numpy.transpose",
        "numpy.core._multiarray_umath.bincount": "numpy.core.umath.bincount",
        "numpy.core._multiarray_umath.busday_count": "numpy.core.umath.busday_count",
        "numpy.core._multiarray_umath.busday_offset": "numpy.core.umath.busday_offset",
        "numpy.core._multiarray_umath.can_cast": "numpy.core.umath.can_cast",
        "numpy.core._multiarray_umath.concatenate": "numpy.core.umath.concatenate",
        "numpy.core._multiarray_umath.copyto": "numpy.core.umath.copyto",
        "numpy.core._multiarray_umath.datetime_as_string": "numpy.core.umath.datetime_as_string",
        "numpy.core._multiarray_umath.dot": "numpy.core.umath.dot",
        "numpy.core._multiarray_umath.empty_like": "numpy.core.umath.empty_like",
        "numpy.core._multiarray_umath.inner": "numpy.core.umath.inner",
        "numpy.core._multiarray_umath.is_busday": "numpy.core.umath.is_busday",
        "numpy.core._multiarray_umath.lexsort": "numpy.core.umath.lexsort",
        "numpy.core._multiarray_umath.min_scalar_type": "numpy.core.umath.min_scalar_type",
        "numpy.core._multiarray_umath.packbits": "numpy.core.umath.packbits",
        "numpy.core._multiarray_umath.putmask": "numpy.core.umath.putmask",
        "numpy.core._multiarray_umath.ravel_multi_index": "numpy.core.umath.ravel_multi_index",
        "numpy.core._multiarray_umath.result_type": "numpy.core.umath.result_type",
        "numpy.core._multiarray_umath.shares_memory": "numpy.core.umath.shares_memory",
        "numpy.core._multiarray_umath.unpackbits": "numpy.core.umath.unpackbits",
        "numpy.core._multiarray_umath.unravel_index": "numpy.core.umath.unravel_index",
        "numpy.core._multiarray_umath.vdot": "numpy.core.umath.vdot",
        "numpy.core._multiarray_umath.where": "numpy.core.umath.where",
        "numpy.var": "numpy.var",
        "numpy.full": "numpy.full",
        "numpy.full_like": "numpy.full_like",
        "numpy.getbufsize": "numpy.getbufsize",
        "numpy.geterr": "numpy.geterr",
        "numpy.geterrcall": "numpy.geterrcall",
        "numpy.identity": "numpy.identity",
        "numpy.indices": "numpy.indices",
        "numpy.isclose": "numpy.isclose",
        "numpy.isfortran": "numpy.isfortran",
        "numpy.isscalar": "numpy.isscalar",
        "numpy.moveaxis": "numpy.moveaxis",
        "numpy.core.numeric.normalize_axis_tuple": "numpy.ma.extras.normalize_axis_tuple",
        "numpy.ones": "numpy.ones",
        "numpy.ones_like": "numpy.ones_like",
        "numpy.outer": "numpy.outer",
        "numpy.require": "numpy.require",
        "numpy.roll": "numpy.roll",
        "numpy.rollaxis": "numpy.rollaxis",
        "numpy.setbufsize": "numpy.setbufsize",
        "numpy.seterr": "numpy.seterr",
        "numpy.seterrcall": "numpy.seterrcall",
        "numpy.hstack": "numpy.hstack",
        "numpy.stack": "numpy.stack",
        "numpy.vstack": "numpy.vstack",
        "numpy.tensordot": "numpy.tensordot",
        "numpy.ufunc": "numpy.ufunc",
        "numpy.zeros_like": "numpy.zeros_like",
        "numpy.lib.scimath.power": "numpy.lib.scimath.power",
        "numpy.lib.scimath.sqrt": "numpy.lib.scimath.sqrt",
        "numpy.exceptions.DTypePromotionError": "numpy.exceptions.DTypePromotionError",
        "numpy.exceptions.ModuleDeprecationWarning": "numpy.exceptions.ModuleDeprecationWarning",
        "numpy.exceptions.VisibleDeprecationWarning": "numpy.exceptions.VisibleDeprecationWarning",
        "numpy.expand_dims": "numpy.expand_dims",
        "numpy.extract": "numpy.extract",
        "numpy.eye": "numpy.eye",
        "numpy.fft.fft": "numpy.fft.fft",
        "numpy.fft.fft2": "numpy.fft.fft2",
        "numpy.fft.fftfreq": "numpy.fft.helper.fftfreq",
        "numpy.fft.fftn": "numpy.fft.fftn",
        "numpy.fft.fftshift": "numpy.fft.helper.fftshift",
        "numpy.fft.ifftshift": "numpy.fft.ifftshift",
        "numpy.fft.rfftfreq": "numpy.fft.rfftfreq",
        "numpy.fft.hfft": "numpy.fft.hfft",
        "numpy.fft.ifft": "numpy.fft.ifft",
        "numpy.fft.ifft2": "numpy.fft.ifft2",
        "numpy.fft.ifftn": "numpy.fft.ifftn",
        "numpy.fft.ihfft": "numpy.fft.ihfft",
        "numpy.fft.irfft": "numpy.fft.irfft",
        "numpy.fft.irfft2": "numpy.fft.irfft2",
        "numpy.fft.irfftn": "numpy.fft.irfftn",
        "numpy.fft.rfft": "numpy.fft.rfft",
        "numpy.fft.rfft2": "numpy.fft.rfft2",
        "numpy.fft.rfftn": "numpy.fft.rfftn",
        "numpy.fill_diagonal": "numpy.fill_diagonal",
        "numpy.finfo": "numpy.finfo",
        "numpy.fix": "numpy.fix",
        "numpy.flip": "numpy.flip",
        "numpy.fliplr": "numpy.fliplr",
        "numpy.flipud": "numpy.flipud",
        "numpy.format_parser": "numpy.format_parser",
        "numpy.fromregex": "numpy.fromregex",
        "numpy.genfromtxt": "numpy.genfromtxt",
        "numpy.geomspace": "numpy.geomspace",
        "numpy.lib.shape_base.get_array_wrap": "numpy.get_array_wrap",
        "numpy.lib.utils.get_include": "numpy.get_include",
        "numpy.gradient": "numpy.gradient",
        "numpy.hamming": "numpy.hamming",
        "numpy.hanning": "numpy.hanning",
        "numpy.histogram": "numpy.histogram",
        "numpy.histogram2d": "numpy.histogram2d",
        "numpy.histogram_bin_edges": "numpy.histogram_bin_edges",
        "numpy.histogramdd": "numpy.histogramdd",
        "numpy.hsplit": "numpy.hsplit",
        "numpy.i0": "numpy.i0",
        "numpy.iinfo": "numpy.iinfo",
        "numpy.imag": "numpy.imag",
        "numpy.in1d": "numpy.in1d",
        "numpy.info": "numpy.info",
        "numpy.insert": "numpy.insert",
        "numpy.interp": "numpy.interp",
        "numpy.intersect1d": "numpy.intersect1d",
        "numpy.iscomplex": "numpy.iscomplex",
        "numpy.iscomplexobj": "numpy.iscomplexobj",
        "numpy.isin": "numpy.isin",
        "numpy.isneginf": "numpy.isneginf",
        "numpy.isposinf": "numpy.isposinf",
        "numpy.isrealobj": "numpy.isrealobj",
        "numpy.iterable": "numpy.iterable",
        "numpy.ix_": "numpy.ix_",
        "numpy.kaiser": "numpy.kaiser",
        "numpy.kron": "numpy.kron",
        "numpy.lib.arrayterator.Arrayterator": "numpy.lib.arrayterator.Arrayterator",
        "numpy.lib._version.NumpyVersion": "numpy.lib.NumpyVersion",
        "numpy.ndindex": "numpy.ndindex",
        "numpy.pad": "numpy.pad",
        "numpy.setdiff1d": "numpy.setdiff1d",
        "numpy.setxor1d": "numpy.setxor1d",
        "numpy.union1d": "numpy.union1d",
        "numpy.unique": "numpy.unique",
        "numpy.lib.format.descr_to_dtype": "numpy.lib.format.descr_to_dtype",
        "numpy.lib.utils.drop_metadata": "numpy.lib.utils.drop_metadata",
        "numpy.lib.format.dtype_to_descr": "numpy.lib.format.dtype_to_descr",
        "numpy.lib.format.header_data_from_array_1_0": "numpy.lib.format.header_data_from_array_1_0",
        "numpy.lib.format.magic": "numpy.lib.format.magic",
        "numpy.lib.format.open_memmap": "numpy.lib.format.open_memmap",
        "numpy.lib.format.read_array": "numpy.lib.format.read_array",
        "numpy.lib.format.read_array_header_1_0": "numpy.lib.format.read_array_header_1_0",
        "numpy.lib.format.read_array_header_2_0": "numpy.lib.format.read_array_header_2_0",
        "numpy.lib.format.read_magic": "numpy.lib.format.read_magic",
        "numpy.lib.utils.safe_eval": "numpy.safe_eval",
        "numpy.lib.format.write_array": "numpy.lib.format.write_array",
        "numpy.lib.format.write_array_header_1_0": "numpy.lib.format.write_array_header_1_0",
        "numpy.lib.format.write_array_header_2_0": "numpy.lib.format.write_array_header_2_0",
        "numpy.median": "numpy.median",
        "numpy.meshgrid": "numpy.meshgrid",
        "numpy.msort": "numpy.msort",
        "numpy.percentile": "numpy.percentile",
        "numpy.piecewise": "numpy.piecewise",
        "numpy.place": "numpy.place",
        "numpy.quantile": "numpy.quantile",
        "numpy.rot90": "numpy.rot90",
        "numpy.select": "numpy.select",
        "numpy.sinc": "numpy.sinc",
        "numpy.sort_complex": "numpy.sort_complex",
        "numpy.trapz": "numpy.trapz",
        "numpy.trim_zeros": "numpy.trim_zeros",
        "numpy.unwrap": "numpy.unwrap",
        "numpy.vectorize": "numpy.vectorize",
        "numpy.lib.index_tricks.AxisConcatenator": "numpy.ma.extras.AxisConcatenator",
        "numpy.lib.index_tricks.CClass": "numpy.lib.index_tricks.CClass",
        "numpy.lib.index_tricks.IndexExpression": "numpy.lib.index_tricks.IndexExpression",
        "numpy.lib.index_tricks.MGridClass": "numpy.lib.index_tricks.MGridClass",
        "numpy.lib.index_tricks.OGridClass": "numpy.lib.index_tricks.OGridClass",
        "numpy.lib.index_tricks.RClass": "numpy.lib.index_tricks.RClass",
        "numpy.lib.stride_tricks.as_strided": "numpy.lib.stride_tricks.as_strided",
        "numpy.linspace": "numpy.linspace",
        "numpy.matrix": "numpy.matrix",
        "numpy.linalg.matrix_power": "numpy.linalg.matrix_power",
        "numpy.lib.index_tricks.nd_grid": "numpy.lib.index_tricks.nd_grid",
        "numpy.ndenumerate": "numpy.ndenumerate",
        "numpy.load": "numpy.load",
        "numpy.loadtxt": "numpy.loadtxt",
        "numpy.lookfor": "numpy.lookfor",
        "numpy.mask_indices": "numpy.mask_indices",
        "numpy.mintypecode": "numpy.mintypecode",
        "numpy.lib.mixins.NDArrayOperatorsMixin": "numpy.lib.mixins.NDArrayOperatorsMixin",
        "numpy.nan_to_num": "numpy.nan_to_num",
        "numpy.nanargmax": "numpy.nanargmax",
        "numpy.nanargmin": "numpy.nanargmin",
        "numpy.nancumprod": "numpy.nancumprod",
        "numpy.nancumsum": "numpy.nancumsum",
        "numpy.nanmax": "numpy.nanmax",
        "numpy.nanmean": "numpy.nanmean",
        "numpy.nanmedian": "numpy.nanmedian",
        "numpy.nanmin": "numpy.nanmin",
        "numpy.nanpercentile": "numpy.nanpercentile",
        "numpy.nanprod": "numpy.nanprod",
        "numpy.nanquantile": "numpy.nanquantile",
        "numpy.nanstd": "numpy.nanstd",
        "numpy.nansum": "numpy.nansum",
        "numpy.nanvar": "numpy.nanvar",
        "numpy.lib.npyio.BagObj": "numpy.lib.npyio.BagObj",
        "numpy.lib._iotools.ConversionWarning": "numpy.lib.npyio.ConversionWarning",
        "numpy.lib._iotools.ConverterError": "numpy.lib.npyio.ConverterError",
        "numpy.lib._iotools.ConverterLockError": "numpy.lib.npyio.ConverterLockError",
        "numpy.lib._iotools.LineSplitter": "numpy.lib.npyio.LineSplitter",
        "numpy.lib._iotools.NameValidator": "numpy.lib.npyio.NameValidator",
        "numpy.lib.npyio.NpzFile": "numpy.lib.npyio.NpzFile",
        "numpy.lib._iotools.StringConverter": "numpy.lib.npyio.StringConverter",
        "numpy.lib._iotools.easy_dtype": "numpy.lib.npyio.easy_dtype",
        "numpy.lib._iotools.flatten_dtype": "numpy.lib.npyio.flatten_dtype",
        "numpy.lib._iotools.has_nested_fields": "numpy.lib.npyio.has_nested_fields",
        "numpy.lib.npyio.recfromcsv": "numpy.recfromcsv",
        "numpy.lib.npyio.recfromtxt": "numpy.recfromtxt",
        "numpy.save": "numpy.save",
        "numpy.savetxt": "numpy.savetxt",
        "numpy.savez": "numpy.savez",
        "numpy.savez_compressed": "numpy.savez_compressed",
        "numpy.lib.npyio.zipfile_factory": "numpy.lib.npyio.zipfile_factory",
        "numpy.poly": "numpy.poly",
        "numpy.poly1d": "numpy.poly1d",
        "numpy.polyadd": "numpy.polyadd",
        "numpy.polyder": "numpy.polyder",
        "numpy.polydiv": "numpy.polydiv",
        "numpy.polyfit": "numpy.polyfit",
        "numpy.polyint": "numpy.polyint",
        "numpy.polymul": "numpy.polymul",
        "numpy.linalg.eigvals": "numpy.linalg.linalg.eigvals",
        "numpy.linalg.inv": "numpy.linalg.linalg.inv",
        "numpy.linalg.lstsq": "numpy.linalg.lstsq",
        "numpy.polysub": "numpy.polysub",
        "numpy.polyval": "numpy.polyval",
        "numpy.real": "numpy.real",
        "numpy.roots": "numpy.roots",
        "numpy.vander": "numpy.vander",
        "numpy.put_along_axis": "numpy.put_along_axis",
        "numpy.real_if_close": "numpy.real_if_close",
        "numpy.lib.shape_base.get_array_prepare": "numpy.lib.shape_base.get_array_prepare",
        "numpy.split": "numpy.split",
        "numpy.take_along_axis": "numpy.take_along_axis",
        "numpy.tile": "numpy.tile",
        "numpy.vsplit": "numpy.vsplit",
        "numpy.lib.utils.show_runtime": "numpy.show_runtime",
        "numpy.source": "numpy.source",
        "numpy.lib.stride_tricks.DummyArray": "numpy.lib.stride_tricks.DummyArray",
        "numpy.lib.stride_tricks.sliding_window_view": "numpy.lib.stride_tricks.sliding_window_view",
        "numpy.tri": "numpy.tri",
        "numpy.tril": "numpy.tril",
        "numpy.tril_indices": "numpy.tril_indices",
        "numpy.tril_indices_from": "numpy.tril_indices_from",
        "numpy.triu": "numpy.triu",
        "numpy.triu_indices": "numpy.triu_indices",
        "numpy.triu_indices_from": "numpy.triu_indices_from",
        "numpy.core._machar.MachAr": "numpy.core.getlimits.MachAr",
        "numpy.core.getlimits.MachArLike": "numpy.core.getlimits.MachArLike",
        "numpy.typename": "numpy.typename",
        "numpy.lib.utils.who": "numpy.who",
        "numpy.linalg.LinAlgError": "numpy.linalg.linalg.LinAlgError",
        "numpy.linalg.cholesky": "numpy.linalg.linalg.cholesky",
        "numpy.linalg.cond": "numpy.linalg.linalg.cond",
        "numpy.linalg.det": "numpy.linalg.linalg.det",
        "numpy.linalg.eig": "numpy.linalg.linalg.eig",
        "numpy.linalg.eigh": "numpy.linalg.linalg.eigh",
        "numpy.linalg.eigvalsh": "numpy.linalg.linalg.eigvalsh",
        "numpy.linalg.linalg.EigResult": "numpy.linalg.linalg.EigResult",
        "numpy.linalg.linalg.EighResult": "numpy.linalg.linalg.EighResult",
        "numpy.linalg.linalg.QRResult": "numpy.linalg.linalg.QRResult",
        "numpy.linalg.linalg.SVDResult": "numpy.linalg.linalg.SVDResult",
        "numpy.linalg.linalg.SlogdetResult": "numpy.linalg.linalg.SlogdetResult",
        "numpy.linalg.linalg.get_linalg_error_extobj": "numpy.linalg.linalg.get_linalg_error_extobj",
        "numpy.linalg.linalg.isComplexType": "numpy.linalg.linalg.isComplexType",
        "numpy.linalg.matrix_rank": "numpy.linalg.matrix_rank",
        "numpy.linalg.multi_dot": "numpy.linalg.multi_dot",
        "numpy.linalg.norm": "numpy.linalg.norm",
        "numpy.linalg.pinv": "numpy.linalg.pinv",
        "numpy.linalg.qr": "numpy.linalg.qr",
        "numpy.linalg.slogdet": "numpy.linalg.slogdet",
        "numpy.linalg.solve": "numpy.linalg.solve",
        "numpy.linalg.svd": "numpy.linalg.svd",
        "numpy.linalg.tensorinv": "numpy.linalg.tensorinv",
        "numpy.linalg.tensorsolve": "numpy.linalg.tensorsolve",
        "numpy.linalg.linalg.transpose": "numpy.linalg.linalg.transpose",
        "numpy.logspace": "numpy.logspace",
        "numpy.ma.core.MAError": "numpy.ma.extras.MAError",
        "numpy.ma.core.MaskError": "numpy.ma.core.MaskError",
        "numpy.ma.core.MaskedArray": "numpy.ma.masked_array",
        "numpy.ma.core.allclose": "numpy.ma.core.allclose",
        "numpy.ma.core.allequal": "numpy.ma.core.allequal",
        "numpy.ma.core._MaskedBinaryOperation.reduce": "numpy.ma.sometrue",
        "numpy.ma.core.append": "numpy.ma.core.append",
        "numpy.ma.extras.apply_along_axis": "numpy.ma.extras.apply_along_axis",
        "numpy.ma.extras.apply_over_axes": "numpy.ma.extras.apply_over_axes",
        "numpy.ma.core.argsort": "numpy.ma.core.argsort",
        "numpy.ma.core.array": "numpy.ma.extras.array",
        "numpy.ma.core.asanyarray": "numpy.ma.core.asanyarray",
        "numpy.ma.core.asarray": "numpy.ma.extras.asarray",
        "numpy.ma.extras.average": "numpy.ma.extras.average",
        "numpy.ma.core.choose": "numpy.ma.core.choose",
        "numpy.ma.extras.clump_masked": "numpy.ma.extras.clump_masked",
        "numpy.ma.extras.clump_unmasked": "numpy.ma.extras.clump_unmasked",
        "numpy.ma.core.common_fill_value": "numpy.ma.core.common_fill_value",
        "numpy.ma.extras.compress_cols": "numpy.ma.extras.compress_cols",
        "numpy.ma.extras.compress_nd": "numpy.ma.extras.compress_nd",
        "numpy.ma.extras.compress_rowcols": "numpy.ma.extras.compress_rowcols",
        "numpy.ma.extras.compress_rows": "numpy.ma.extras.compress_rows",
        "numpy.ma.core.compressed": "numpy.ma.core.compressed",
        "numpy.ma.core.concatenate": "numpy.ma.extras.concatenate",
        "numpy.ma.core.convolve": "numpy.ma.core.convolve",
        "numpy.ma.core.MaskedArrayFutureWarning": "numpy.ma.core.MaskedArrayFutureWarning",
        "numpy.ma.core.MaskedConstant": "numpy.ma.core.MaskedConstant",
        "numpy.ma.core.MaskedIterator": "numpy.ma.core.MaskedIterator",
        "numpy.ma.core.correlate": "numpy.ma.correlate",
        "numpy.ma.core.default_fill_value": "numpy.ma.default_fill_value",
        "numpy.ma.core.diag": "numpy.ma.diag",
        "numpy.ma.core.diff": "numpy.ma.diff",
        "numpy.ma.core.doc_note": "numpy.ma.core.doc_note",
        "numpy.ma.core.dot": "numpy.ma.extras.dot",
        "numpy.ma.core.filled": "numpy.ma.filled",
        "numpy.ma.core.fix_invalid": "numpy.ma.fix_invalid",
        "numpy.ma.core.flatten_mask": "numpy.ma.flatten_mask",
        "numpy.ma.core.flatten_structured_array": "numpy.ma.flatten_structured_array",
        "numpy.ma.core.fromfile": "numpy.ma.core.fromfile",
        "numpy.ma.core.fromflex": "numpy.ma.fromflex",
        "numpy.ma.core.getdata": "numpy.ma.getdata",
        "numpy.ma.core.get_fill_value": "numpy.ma.core.get_fill_value",
        "numpy.ma.core.getmask": "numpy.ma.getmask",
        "numpy.ma.core.get_masked_subclass": "numpy.ma.extras.get_masked_subclass",
        "numpy.ma.core.get_object_signature": "numpy.ma.core.get_object_signature",
        "numpy.ma.core.getmaskarray": "numpy.ma.getmaskarray",
        "numpy.ma.core.inner": "numpy.ma.innerproduct",
        "numpy.ma.core.isMaskedArray": "numpy.ma.isarray",
        "numpy.ma.core.is_mask": "numpy.ma.is_mask",
        "numpy.ma.core.is_masked": "numpy.ma.is_masked",
        "numpy.ma.core.is_string_or_list_of_strings": "numpy.ma.core.is_string_or_list_of_strings",
        "numpy.ma.core.left_shift": "numpy.ma.left_shift",
        "numpy.ma.core.make_mask": "numpy.ma.make_mask",
        "numpy.ma.core.make_mask_descr": "numpy.ma.make_mask_descr",
        "numpy.ma.core.make_mask_none": "numpy.ma.make_mask_none",
        "numpy.ma.core.mask_or": "numpy.ma.mask_or",
        "numpy.ma.core.masked_equal": "numpy.ma.masked_equal",
        "numpy.ma.core.masked_greater": "numpy.ma.masked_greater",
        "numpy.ma.core.masked_greater_equal": "numpy.ma.masked_greater_equal",
        "numpy.ma.core.masked_inside": "numpy.ma.masked_inside",
        "numpy.ma.core.masked_invalid": "numpy.ma.masked_invalid",
        "numpy.ma.core.masked_less": "numpy.ma.masked_less",
        "numpy.ma.core.masked_less_equal": "numpy.ma.masked_less_equal",
        "numpy.ma.core.masked_not_equal": "numpy.ma.masked_not_equal",
        "numpy.ma.core.masked_object": "numpy.ma.masked_object",
        "numpy.ma.core.masked_outside": "numpy.ma.masked_outside",
        "numpy.ma.core.masked_values": "numpy.ma.masked_values",
        "numpy.ma.core.masked_where": "numpy.ma.masked_where",
        "numpy.ma.core.max": "numpy.ma.max",
        "numpy.ma.core.maximum_fill_value": "numpy.ma.maximum_fill_value",
        "numpy.ma.core.min": "numpy.ma.min",
        "numpy.ma.core.minimum_fill_value": "numpy.ma.minimum_fill_value",
        "numpy.ma.core.mvoid": "numpy.ma.mvoid",
        "numpy.ma.core.ndim": "numpy.ma.ndim",
        "numpy.ma.core.outer": "numpy.ma.outerproduct",
        "numpy.ma.core.power": "numpy.ma.power",
        "numpy.ma.core.ptp": "numpy.ma.ptp",
        "numpy.ma.core.put": "numpy.ma.put",
        "numpy.ma.core.putmask": "numpy.ma.putmask",
        "numpy.ma.core.reshape": "numpy.ma.reshape",
        "numpy.ma.core.resize": "numpy.ma.resize",
        "numpy.ma.core.right_shift": "numpy.ma.right_shift",
        "numpy.ma.core.round_": "numpy.ma.round_",
        "numpy.ma.core.set_fill_value": "numpy.ma.set_fill_value",
        "numpy.ma.core.shape": "numpy.ma.shape",
        "numpy.ma.core.size": "numpy.ma.size",
        "numpy.ma.core.sort": "numpy.ma.sort",
        "numpy.ma.core.take": "numpy.ma.take",
        "numpy.ma.core.transpose": "numpy.ma.transpose",
        "numpy.ma.core.where": "numpy.ma.where",
        "numpy.ma.extras.corrcoef": "numpy.ma.extras.corrcoef",
        "numpy.ma.extras.count_masked": "numpy.ma.extras.count_masked",
        "numpy.ma.extras.cov": "numpy.ma.extras.cov",
        "numpy.ma.extras.ediff1d": "numpy.ma.extras.ediff1d",
        "numpy.ma.extras.MAxisConcatenator": "numpy.ma.extras.MAxisConcatenator",
        "numpy.ma.extras.flatnotmasked_contiguous": "numpy.ma.flatnotmasked_contiguous",
        "numpy.ma.extras.flatnotmasked_edges": "numpy.ma.flatnotmasked_edges",
        "numpy.ma.extras.flatten_inplace": "numpy.ma.extras.flatten_inplace",
        "numpy.ma.extras.in1d": "numpy.ma.in1d",
        "numpy.ma.extras.intersect1d": "numpy.ma.intersect1d",
        "numpy.ma.extras.isin": "numpy.ma.isin",
        "numpy.ma.extras.issequence": "numpy.ma.extras.issequence",
        "numpy.ma.extras.mask_cols": "numpy.ma.mask_cols",
        "numpy.ma.extras.mask_rowcols": "numpy.ma.mask_rowcols",
        "numpy.ma.extras.mask_rows": "numpy.ma.mask_rows",
        "numpy.ma.extras.masked_all": "numpy.ma.masked_all",
        "numpy.ma.extras.masked_all_like": "numpy.ma.masked_all_like",
        "numpy.ma.extras.median": "numpy.ma.median",
        "numpy.ma.extras.mr_class": "numpy.ma.extras.mr_class",
        "numpy.ma.extras.ndenumerate": "numpy.ma.ndenumerate",
        "numpy.ma.extras.notmasked_contiguous": "numpy.ma.notmasked_contiguous",
        "numpy.ma.extras.notmasked_edges": "numpy.ma.notmasked_edges",
        "numpy.ma.extras.polyfit": "numpy.ma.polyfit",
        "numpy.ma.extras.setdiff1d": "numpy.ma.setdiff1d",
        "numpy.ma.extras.setxor1d": "numpy.ma.setxor1d",
        "numpy.ma.extras.union1d": "numpy.ma.union1d",
        "numpy.ma.extras.unique": "numpy.ma.unique",
        "numpy.ma.extras.vander": "numpy.ma.vander",
        "numpy.memmap": "numpy.memmap",
        "numpy.polynomial.chebyshev.Chebyshev": "numpy.polynomial.chebyshev.Chebyshev",
        "numpy.polynomial.hermite.Hermite": "numpy.polynomial.hermite.Hermite",
        "numpy.polynomial.hermite_e.HermiteE": "numpy.polynomial.hermite_e.HermiteE",
        "numpy.polynomial.laguerre.Laguerre": "numpy.polynomial.laguerre.Laguerre",
        "numpy.polynomial.legendre.Legendre": "numpy.polynomial.legendre.Legendre",
        "numpy.polynomial.polynomial.Polynomial": "numpy.polynomial.polynomial.Polynomial",
        "numpy.polynomial._polybase.ABCPolyBase": "numpy.polynomial.polynomial.ABCPolyBase",
        "numpy.polynomial.chebyshev.cheb2poly": "numpy.polynomial.chebyshev.cheb2poly",
        "numpy.polynomial.chebyshev.chebadd": "numpy.polynomial.chebyshev.chebadd",
        "numpy.polynomial.chebyshev.chebcompanion": "numpy.polynomial.chebyshev.chebcompanion",
        "numpy.polynomial.chebyshev.chebder": "numpy.polynomial.chebyshev.chebder",
        "numpy.polynomial.chebyshev.chebdiv": "numpy.polynomial.chebyshev.chebdiv",
        "numpy.polynomial.chebyshev.chebfit": "numpy.polynomial.chebyshev.chebfit",
        "numpy.polynomial.chebyshev.chebfromroots": "numpy.polynomial.chebyshev.chebfromroots",
        "numpy.polynomial.chebyshev.chebgauss": "numpy.polynomial.chebyshev.chebgauss",
        "numpy.polynomial.chebyshev.chebgrid2d": "numpy.polynomial.chebyshev.chebgrid2d",
        "numpy.polynomial.chebyshev.chebgrid3d": "numpy.polynomial.chebyshev.chebgrid3d",
        "numpy.polynomial.chebyshev.chebint": "numpy.polynomial.chebyshev.chebint",
        "numpy.polynomial.chebyshev.chebinterpolate": "numpy.polynomial.chebyshev.chebinterpolate",
        "numpy.polynomial.chebyshev.chebline": "numpy.polynomial.chebyshev.chebline",
        "numpy.polynomial.chebyshev.chebmul": "numpy.polynomial.chebyshev.chebmul",
        "numpy.polynomial.chebyshev.chebmulx": "numpy.polynomial.chebyshev.chebmulx",
        "numpy.polynomial.chebyshev.chebpow": "numpy.polynomial.chebyshev.chebpow",
        "numpy.polynomial.chebyshev.chebpts1": "numpy.polynomial.chebyshev.chebpts1",
        "numpy.polynomial.chebyshev.chebpts2": "numpy.polynomial.chebyshev.chebpts2",
        "numpy.polynomial.chebyshev.chebroots": "numpy.polynomial.chebyshev.chebroots",
        "numpy.polynomial.chebyshev.chebsub": "numpy.polynomial.chebyshev.chebsub",
        "numpy.polynomial.polyutils.trimcoef": "numpy.polynomial.polynomial.polytrim",
        "numpy.polynomial.chebyshev.chebval": "numpy.polynomial.chebyshev.chebval",
        "numpy.polynomial.chebyshev.chebval2d": "numpy.polynomial.chebyshev.chebval2d",
        "numpy.polynomial.chebyshev.chebval3d": "numpy.polynomial.chebyshev.chebval3d",
        "numpy.polynomial.chebyshev.chebvander": "numpy.polynomial.chebyshev.chebvander",
        "numpy.polynomial.chebyshev.chebvander2d": "numpy.polynomial.chebyshev.chebvander2d",
        "numpy.polynomial.chebyshev.chebvander3d": "numpy.polynomial.chebyshev.chebvander3d",
        "numpy.polynomial.chebyshev.chebweight": "numpy.polynomial.chebyshev.chebweight",
        "numpy.polynomial.chebyshev.poly2cheb": "numpy.polynomial.chebyshev.poly2cheb",
        "numpy.polynomial.polyutils.RankWarning": "numpy.polynomial.polyutils.RankWarning",
        "numpy.polynomial.polyutils.as_series": "numpy.polynomial.polyutils.as_series",
        "numpy.polynomial.polyutils.format_float": "numpy.polynomial.polyutils.format_float",
        "numpy.polynomial.polyutils.getdomain": "numpy.polynomial.polyutils.getdomain",
        "numpy.polynomial.polyutils.mapdomain": "numpy.polynomial.polyutils.mapdomain",
        "numpy.polynomial.polyutils.mapparms": "numpy.polynomial.polyutils.mapparms",
        "numpy.polynomial.polyutils.trimseq": "numpy.polynomial.polyutils.trimseq",
        "numpy.polynomial.hermite.herm2poly": "numpy.polynomial.hermite.herm2poly",
        "numpy.polynomial.hermite.hermadd": "numpy.polynomial.hermite.hermadd",
        "numpy.polynomial.hermite.hermcompanion": "numpy.polynomial.hermite.hermcompanion",
        "numpy.polynomial.hermite.hermder": "numpy.polynomial.hermite.hermder",
        "numpy.polynomial.hermite.hermdiv": "numpy.polynomial.hermite.hermdiv",
        "numpy.polynomial.hermite.hermfit": "numpy.polynomial.hermite.hermfit",
        "numpy.polynomial.hermite.hermfromroots": "numpy.polynomial.hermite.hermfromroots",
        "numpy.polynomial.hermite.hermgauss": "numpy.polynomial.hermite.hermgauss",
        "numpy.polynomial.hermite.hermgrid2d": "numpy.polynomial.hermite.hermgrid2d",
        "numpy.polynomial.hermite.hermgrid3d": "numpy.polynomial.hermite.hermgrid3d",
        "numpy.polynomial.hermite.hermint": "numpy.polynomial.hermite.hermint",
        "numpy.polynomial.hermite.hermline": "numpy.polynomial.hermite.hermline",
        "numpy.polynomial.hermite.hermmul": "numpy.polynomial.hermite.hermmul",
        "numpy.polynomial.hermite.hermmulx": "numpy.polynomial.hermite.hermmulx",
        "numpy.polynomial.hermite.hermpow": "numpy.polynomial.hermite.hermpow",
        "numpy.polynomial.hermite.hermroots": "numpy.polynomial.hermite.hermroots",
        "numpy.polynomial.hermite.hermsub": "numpy.polynomial.hermite.hermsub",
        "numpy.polynomial.hermite.hermval": "numpy.polynomial.hermite.hermval",
        "numpy.polynomial.hermite.hermval2d": "numpy.polynomial.hermite.hermval2d",
        "numpy.polynomial.hermite.hermval3d": "numpy.polynomial.hermite.hermval3d",
        "numpy.polynomial.hermite.hermvander": "numpy.polynomial.hermite.hermvander",
        "numpy.polynomial.hermite.hermvander2d": "numpy.polynomial.hermite.hermvander2d",
        "numpy.polynomial.hermite.hermvander3d": "numpy.polynomial.hermite.hermvander3d",
        "numpy.polynomial.hermite.hermweight": "numpy.polynomial.hermite.hermweight",
        "numpy.polynomial.hermite.poly2herm": "numpy.polynomial.hermite.poly2herm",
        "numpy.polynomial.hermite_e.herme2poly": "numpy.polynomial.hermite_e.herme2poly",
        "numpy.polynomial.hermite_e.hermeadd": "numpy.polynomial.hermite_e.hermeadd",
        "numpy.polynomial.hermite_e.hermecompanion": "numpy.polynomial.hermite_e.hermecompanion",
        "numpy.polynomial.hermite_e.hermeder": "numpy.polynomial.hermite_e.hermeder",
        "numpy.polynomial.hermite_e.hermediv": "numpy.polynomial.hermite_e.hermediv",
        "numpy.polynomial.hermite_e.hermefit": "numpy.polynomial.hermite_e.hermefit",
        "numpy.polynomial.hermite_e.hermefromroots": "numpy.polynomial.hermite_e.hermefromroots",
        "numpy.polynomial.hermite_e.hermegauss": "numpy.polynomial.hermite_e.hermegauss",
        "numpy.polynomial.hermite_e.hermegrid2d": "numpy.polynomial.hermite_e.hermegrid2d",
        "numpy.polynomial.hermite_e.hermegrid3d": "numpy.polynomial.hermite_e.hermegrid3d",
        "numpy.polynomial.hermite_e.hermeint": "numpy.polynomial.hermite_e.hermeint",
        "numpy.polynomial.hermite_e.hermeline": "numpy.polynomial.hermite_e.hermeline",
        "numpy.polynomial.hermite_e.hermemul": "numpy.polynomial.hermite_e.hermemul",
        "numpy.polynomial.hermite_e.hermemulx": "numpy.polynomial.hermite_e.hermemulx",
        "numpy.polynomial.hermite_e.hermepow": "numpy.polynomial.hermite_e.hermepow",
        "numpy.polynomial.hermite_e.hermeroots": "numpy.polynomial.hermite_e.hermeroots",
        "numpy.polynomial.hermite_e.hermesub": "numpy.polynomial.hermite_e.hermesub",
        "numpy.polynomial.hermite_e.hermeval": "numpy.polynomial.hermite_e.hermeval",
        "numpy.polynomial.hermite_e.hermeval2d": "numpy.polynomial.hermite_e.hermeval2d",
        "numpy.polynomial.hermite_e.hermeval3d": "numpy.polynomial.hermite_e.hermeval3d",
        "numpy.polynomial.hermite_e.hermevander": "numpy.polynomial.hermite_e.hermevander",
        "numpy.polynomial.hermite_e.hermevander2d": "numpy.polynomial.hermite_e.hermevander2d",
        "numpy.polynomial.hermite_e.hermevander3d": "numpy.polynomial.hermite_e.hermevander3d",
        "numpy.polynomial.hermite_e.hermeweight": "numpy.polynomial.hermite_e.hermeweight",
        "numpy.polynomial.hermite_e.poly2herme": "numpy.polynomial.hermite_e.poly2herme",
        "numpy.polynomial.laguerre.lag2poly": "numpy.polynomial.laguerre.lag2poly",
        "numpy.polynomial.laguerre.lagadd": "numpy.polynomial.laguerre.lagadd",
        "numpy.polynomial.laguerre.lagcompanion": "numpy.polynomial.laguerre.lagcompanion",
        "numpy.polynomial.laguerre.lagder": "numpy.polynomial.laguerre.lagder",
        "numpy.polynomial.laguerre.lagdiv": "numpy.polynomial.laguerre.lagdiv",
        "numpy.polynomial.laguerre.lagfit": "numpy.polynomial.laguerre.lagfit",
        "numpy.polynomial.laguerre.lagfromroots": "numpy.polynomial.laguerre.lagfromroots",
        "numpy.polynomial.laguerre.laggauss": "numpy.polynomial.laguerre.laggauss",
        "numpy.polynomial.laguerre.laggrid2d": "numpy.polynomial.laguerre.laggrid2d",
        "numpy.polynomial.laguerre.laggrid3d": "numpy.polynomial.laguerre.laggrid3d",
        "numpy.polynomial.laguerre.lagint": "numpy.polynomial.laguerre.lagint",
        "numpy.polynomial.laguerre.lagline": "numpy.polynomial.laguerre.lagline",
        "numpy.polynomial.laguerre.lagmul": "numpy.polynomial.laguerre.lagmul",
        "numpy.polynomial.laguerre.lagmulx": "numpy.polynomial.laguerre.lagmulx",
        "numpy.polynomial.laguerre.lagpow": "numpy.polynomial.laguerre.lagpow",
        "numpy.polynomial.laguerre.lagroots": "numpy.polynomial.laguerre.lagroots",
        "numpy.polynomial.laguerre.lagsub": "numpy.polynomial.laguerre.lagsub",
        "numpy.polynomial.laguerre.lagval": "numpy.polynomial.laguerre.lagval",
        "numpy.polynomial.laguerre.lagval2d": "numpy.polynomial.laguerre.lagval2d",
        "numpy.polynomial.laguerre.lagval3d": "numpy.polynomial.laguerre.lagval3d",
        "numpy.polynomial.laguerre.lagvander": "numpy.polynomial.laguerre.lagvander",
        "numpy.polynomial.laguerre.lagvander2d": "numpy.polynomial.laguerre.lagvander2d",
        "numpy.polynomial.laguerre.lagvander3d": "numpy.polynomial.laguerre.lagvander3d",
        "numpy.polynomial.laguerre.lagweight": "numpy.polynomial.laguerre.lagweight",
        "numpy.polynomial.laguerre.poly2lag": "numpy.polynomial.laguerre.poly2lag",
        "numpy.polynomial.legendre.leg2poly": "numpy.polynomial.legendre.leg2poly",
        "numpy.polynomial.legendre.legadd": "numpy.polynomial.legendre.legadd",
        "numpy.polynomial.legendre.legcompanion": "numpy.polynomial.legendre.legcompanion",
        "numpy.polynomial.legendre.legder": "numpy.polynomial.legendre.legder",
        "numpy.polynomial.legendre.legdiv": "numpy.polynomial.legendre.legdiv",
        "numpy.polynomial.legendre.legfit": "numpy.polynomial.legendre.legfit",
        "numpy.polynomial.legendre.legfromroots": "numpy.polynomial.legendre.legfromroots",
        "numpy.polynomial.legendre.leggauss": "numpy.polynomial.legendre.leggauss",
        "numpy.polynomial.legendre.leggrid2d": "numpy.polynomial.legendre.leggrid2d",
        "numpy.polynomial.legendre.leggrid3d": "numpy.polynomial.legendre.leggrid3d",
        "numpy.polynomial.legendre.legint": "numpy.polynomial.legendre.legint",
        "numpy.polynomial.legendre.legline": "numpy.polynomial.legendre.legline",
        "numpy.polynomial.legendre.legmul": "numpy.polynomial.legendre.legmul",
        "numpy.polynomial.legendre.legmulx": "numpy.polynomial.legendre.legmulx",
        "numpy.polynomial.legendre.legpow": "numpy.polynomial.legendre.legpow",
        "numpy.polynomial.legendre.legroots": "numpy.polynomial.legendre.legroots",
        "numpy.polynomial.legendre.legsub": "numpy.polynomial.legendre.legsub",
        "numpy.polynomial.legendre.legval": "numpy.polynomial.legendre.legval",
        "numpy.polynomial.legendre.legval2d": "numpy.polynomial.legendre.legval2d",
        "numpy.polynomial.legendre.legval3d": "numpy.polynomial.legendre.legval3d",
        "numpy.polynomial.legendre.legvander": "numpy.polynomial.legendre.legvander",
        "numpy.polynomial.legendre.legvander2d": "numpy.polynomial.legendre.legvander2d",
        "numpy.polynomial.legendre.legvander3d": "numpy.polynomial.legendre.legvander3d",
        "numpy.polynomial.legendre.legweight": "numpy.polynomial.legendre.legweight",
        "numpy.polynomial.legendre.poly2leg": "numpy.polynomial.legendre.poly2leg",
        "numpy.polynomial.polynomial.polyadd": "numpy.polynomial.polynomial.polyadd",
        "numpy.polynomial.polynomial.polycompanion": "numpy.polynomial.polynomial.polycompanion",
        "numpy.polynomial.polynomial.polyder": "numpy.polynomial.polynomial.polyder",
        "numpy.polynomial.polynomial.polydiv": "numpy.polynomial.polynomial.polydiv",
        "numpy.polynomial.polynomial.polyfit": "numpy.polynomial.polynomial.polyfit",
        "numpy.polynomial.polynomial.polyfromroots": "numpy.polynomial.polynomial.polyfromroots",
        "numpy.polynomial.polynomial.polygrid2d": "numpy.polynomial.polynomial.polygrid2d",
        "numpy.polynomial.polynomial.polygrid3d": "numpy.polynomial.polynomial.polygrid3d",
        "numpy.polynomial.polynomial.polyint": "numpy.polynomial.polynomial.polyint",
        "numpy.polynomial.polynomial.polyline": "numpy.polynomial.polynomial.polyline",
        "numpy.polynomial.polynomial.polymul": "numpy.polynomial.polynomial.polymul",
        "numpy.polynomial.polynomial.polymulx": "numpy.polynomial.polynomial.polymulx",
        "numpy.polynomial.polynomial.polypow": "numpy.polynomial.polynomial.polypow",
        "numpy.polynomial.polynomial.polyroots": "numpy.polynomial.polynomial.polyroots",
        "numpy.polynomial.polynomial.polysub": "numpy.polynomial.polynomial.polysub",
        "numpy.polynomial.polynomial.polyval": "numpy.polynomial.polynomial.polyval",
        "numpy.polynomial.polynomial.polyval2d": "numpy.polynomial.polynomial.polyval2d",
        "numpy.polynomial.polynomial.polyval3d": "numpy.polynomial.polynomial.polyval3d",
        "numpy.polynomial.polynomial.polyvalfromroots": "numpy.polynomial.polynomial.polyvalfromroots",
        "numpy.polynomial.polynomial.polyvander": "numpy.polynomial.polynomial.polyvander",
        "numpy.polynomial.polynomial.polyvander2d": "numpy.polynomial.polynomial.polyvander2d",
        "numpy.polynomial.polynomial.polyvander3d": "numpy.polynomial.polynomial.polyvander3d",
        "numpy.polynomial.set_default_printstyle": "numpy.polynomial.set_default_printstyle",
        "numpy.random.bit_generator.BitGenerator": "numpy.random.bit_generator.BitGenerator",
        "numpy.random._generator.Generator": "numpy.random.Generator",
        "numpy.random._mt19937.MT19937": "numpy.random.MT19937",
        "numpy.random._pcg64.PCG64": "numpy.random.PCG64",
        "numpy.random._pcg64.PCG64DXSM": "numpy.random.PCG64DXSM",
        "numpy.random._philox.Philox": "numpy.random.Philox",
        "numpy.random.mtrand.RandomState": "numpy.random.mtrand.RandomState",
        "numpy.random._sfc64.SFC64": "numpy.random.SFC64",
        "numpy.random.bit_generator.SeedSequence": "numpy.random.bit_generator.SeedSequence",
        "numpy.random.bit_generator.ISeedSequence": "numpy.random.bit_generator.ISeedSequence",
        "numpy.random.bit_generator.ISpawnableSeedSequence": "numpy.random.bit_generator.ISpawnableSeedSequence",
        "numpy.random.bit_generator.SeedlessSeedSequence": "numpy.random.bit_generator.SeedlessSeedSequence",
        "numpy.random.bit_generator.SeedlessSequence": "numpy.random.bit_generator.SeedlessSequence",
        "numpy.random._generator.default_rng": "numpy.random.default_rng",
        "numpy.random.mtrand.get_bit_generator": "numpy.random.mtrand.get_bit_generator",
        "numpy.random.mtrand.ranf": "numpy.random.ranf",
        "numpy.random.mtrand.sample": "numpy.random.sample",
        "numpy.random.mtrand.seed": "numpy.random.seed",
        "numpy.random.mtrand.set_bit_generator": "numpy.random.set_bit_generator",
        "numpy.rec.array": "numpy.core.records.array",
        "numpy.core.records.find_duplicate": "numpy.core.records.find_duplicate",
        "numpy.rec.fromarrays": "numpy.core.records.fromarrays",
        "numpy.rec.fromfile": "numpy.core.records.fromfile",
        "numpy.rec.fromrecords": "numpy.core.records.fromrecords",
        "numpy.rec.fromstring": "numpy.core.records.fromstring",
        "numpy.core.records.get_remaining_size": "numpy.core.records.get_remaining_size",
        "numpy.recarray": "numpy.recarray",
        "numpy.record": "numpy.record",
        "numpy.__config__.show": "numpy.show_config",
        "numpy.testing._private.utils.IgnoreException": "numpy.testing.IgnoreException",
        "numpy.testing._private.utils.KnownFailureException": "numpy.testing.KnownFailureException",
        "numpy.testing._private.utils.assert_": "numpy.testing.assert_",
        "numpy.testing._private.utils.assert_allclose": "numpy.testing.assert_allclose",
        "numpy.testing._private.utils.assert_almost_equal": "numpy.testing.assert_almost_equal",
        "numpy.testing._private.utils.assert_approx_equal": "numpy.testing.assert_approx_equal",
        "numpy.testing._private.utils.assert_array_almost_equal": "numpy.testing.assert_array_almost_equal",
        "numpy.testing._private.utils.assert_array_almost_equal_nulp": "numpy.testing.assert_array_almost_equal_nulp",
        "numpy.testing._private.utils.assert_array_compare": "numpy.testing.assert_array_compare",
        "numpy.testing._private.utils.assert_array_equal": "numpy.testing.assert_array_equal",
        "numpy.testing._private.utils.assert_array_less": "numpy.testing.assert_array_less",
        "numpy.testing._private.utils.assert_array_max_ulp": "numpy.testing.assert_array_max_ulp",
        "numpy.testing._private.utils.assert_equal": "numpy.testing.assert_equal",
        "numpy.testing._private.utils.assert_no_gc_cycles": "numpy.testing.assert_no_gc_cycles",
        "numpy.testing._private.utils.assert_no_warnings": "numpy.testing.assert_no_warnings",
        "numpy.testing._private.utils.assert_raises": "numpy.testing.assert_raises",
        "numpy.testing._private.utils.assert_raises_regex": "numpy.testing.assert_raises_regex",
        "numpy.testing._private.utils.assert_string_equal": "numpy.testing.assert_string_equal",
        "numpy.testing._private.utils.assert_warns": "numpy.testing.assert_warns",
        "numpy.testing._private.utils.break_cycles": "numpy.testing.break_cycles",
        "numpy.testing._private.utils.build_err_msg": "numpy.testing.build_err_msg",
        "numpy.testing._private.utils.clear_and_catch_warnings": "numpy.testing.clear_and_catch_warnings",
        "numpy.testing._private.utils.decorate_methods": "numpy.testing.decorate_methods",
        "numpy.testing._private.extbuild.build": "numpy.testing._private.extbuild.build",
        "numpy.testing._private.extbuild.build_and_import_extension": "numpy.testing._private.extbuild.build_and_import_extension",
        "numpy.testing._private.extbuild.compile_extension_module": "numpy.testing._private.extbuild.compile_extension_module",
        "numpy.testing._private.extbuild.get_so_suffix": "numpy.testing._private.extbuild.get_so_suffix",
        "numpy.testing._private.utils.jiffies": "numpy.testing.jiffies",
        "numpy.testing._private.utils.measure": "numpy.testing.measure",
        "numpy.testing._private.utils.memusage": "numpy.testing.memusage",
        "numpy.testing.overrides.allows_array_function_override": "numpy.testing.overrides.allows_array_function_override",
        "numpy.testing.overrides.allows_array_ufunc_override": "numpy.testing.overrides.allows_array_ufunc_override",
        "numpy.testing.overrides.get_overridable_numpy_array_functions": "numpy.testing.overrides.get_overridable_numpy_array_functions",
        "numpy.testing.overrides.get_overridable_numpy_ufuncs": "numpy.testing.overrides.get_overridable_numpy_ufuncs",
        "numpy.testing._private.utils.print_assert_equal": "numpy.testing.print_assert_equal",
        "numpy.testing._private.utils.rundocs": "numpy.testing.rundocs",
        "numpy.testing._private.utils.runstring": "numpy.testing.runstring",
        "numpy.testing._private.utils.suppress_warnings": "numpy.testing.suppress_warnings",
        "numpy.testing._private.utils.tempdir": "numpy.testing.tempdir",
        "numpy.testing._private.utils.temppath": "numpy.testing.temppath",
        "numpy.typing.NBitBase": "numpy.typing.NBitBase",
        "numpy.char.partition": "numpy.core.defchararray.partition",
        "numpy.char.replace": "numpy.core.defchararray.replace",
        "numpy.char.rfind": "numpy.core.defchararray.rfind",
        "numpy.char.rindex": "numpy.core.defchararray.rindex",
        "numpy.char.rjust": "numpy.core.defchararray.rjust",
        "numpy.char.rpartition": "numpy.core.defchararray.rpartition",
        "numpy.char.rsplit": "numpy.core.defchararray.rsplit",
        "numpy.char.rstrip": "numpy.core.defchararray.rstrip",
        "numpy.char.split": "numpy.core.defchararray.split",
        "numpy.char.splitlines": "numpy.core.defchararray.splitlines",
        "numpy.char.startswith": "numpy.core.defchararray.startswith",
        "numpy.char.str_len": "numpy.core.defchararray.str_len",
        "numpy.char.strip": "numpy.core.defchararray.strip",
        "numpy.char.swapcase": "numpy.core.defchararray.swapcase",
        "numpy.char.title": "numpy.core.defchararray.title",
        "numpy.char.translate": "numpy.core.defchararray.translate",
        "numpy.char.upper": "numpy.core.defchararray.upper",
        "numpy.char.zfill": "numpy.core.defchararray.zfill"
    },
    "pandas": {
        "pandas.core.dtypes.dtypes.ArrowDtype": "pandas.io.parsers.base_parser.ArrowDtype",
        "pandas.core.arrays.boolean.BooleanDtype": "pandas.io.stata.BooleanDtype",
        "pandas.core.arrays.categorical.Categorical": "pandas.io.stata.Categorical",
        "pandas.core.dtypes.dtypes.CategoricalDtype": "pandas.io.stata.CategoricalDtype",
        "pandas.core.indexes.category.CategoricalIndex": "pandas.core.indexes.category.CategoricalIndex",
        "pandas.core.frame.DataFrame": "pandas.io.stata.DataFrame",
        "pandas._libs.tslibs.offsets.DateOffset": "pandas.tseries.offsets.DateOffset",
        "pandas.core.indexes.datetimes.DatetimeIndex": "pandas.io.stata.DatetimeIndex",
        "pandas.core.dtypes.dtypes.DatetimeTZDtype": "pandas.io.sql.DatetimeTZDtype",
        "pandas.io.excel._base.ExcelFile": "pandas.io.excel.ExcelFile",
        "pandas.io.excel._base.ExcelWriter": "pandas.io.excel.ExcelWriter",
        "pandas.core.flags.Flags": "pandas.core.generic.Flags",
        "pandas.core.arrays.floating.Float32Dtype": "pandas.core.arrays.floating.Float32Dtype",
        "pandas.core.arrays.floating.Float64Dtype": "pandas.core.methods.describe.Float64Dtype",
        "pandas.core.groupby.grouper.Grouper": "pandas.core.reshape.pivot.Grouper",
        "pandas.io.pytables.HDFStore": "pandas.io.pytables.HDFStore",
        "pandas.core.indexes.base.Index": "pandas.io.stata.Index",
        "pandas.core.arrays.integer.Int16Dtype": "pandas.core.arrays.integer.Int16Dtype",
        "pandas.core.arrays.integer.Int32Dtype": "pandas.core.arrays.integer.Int32Dtype",
        "pandas.core.arrays.integer.Int64Dtype": "pandas.core.arrays.string_arrow.Int64Dtype",
        "pandas.core.arrays.integer.Int8Dtype": "pandas.core.arrays.integer.Int8Dtype",
        "pandas._libs.interval.Interval": "pandas.core.indexes.interval.Interval",
        "pandas.core.dtypes.dtypes.IntervalDtype": "pandas.io.orc.IntervalDtype",
        "pandas.core.indexes.interval.IntervalIndex": "pandas.core.reshape.tile.IntervalIndex",
        "pandas.core.indexes.multi.MultiIndex": "pandas.io.pytables.MultiIndex",
        "pandas.core.groupby.generic.NamedAgg": "pandas.core.groupby.generic.NamedAgg",
        "pandas._libs.tslibs.period.Period": "pandas.core.resample.Period",
        "pandas.core.dtypes.dtypes.PeriodDtype": "pandas.io.pytables.PeriodDtype",
        "pandas.core.indexes.period.PeriodIndex": "pandas.io.pytables.PeriodIndex",
        "pandas.core.indexes.range.RangeIndex": "pandas.io.pytables.RangeIndex",
        "pandas.core.series.Series": "pandas.io.stata.Series",
        "pandas.core.dtypes.dtypes.SparseDtype": "pandas.core.internals.concat.SparseDtype",
        "pandas.core.arrays.string_.StringDtype": "pandas._libs.parsers.StringDtype",
        "pandas._libs.tslibs.timedeltas.Timedelta": "pandas.core.window.rolling.Timedelta",
        "pandas.core.indexes.timedeltas.TimedeltaIndex": "pandas.io.pytables.TimedeltaIndex",
        "pandas._libs.tslibs.timestamps.Timestamp": "pandas.io.stata.Timestamp",
        "pandas.core.arrays.integer.UInt16Dtype": "pandas.core.arrays.integer.UInt16Dtype",
        "pandas.core.arrays.integer.UInt32Dtype": "pandas.core.arrays.integer.UInt32Dtype",
        "pandas.core.arrays.integer.UInt64Dtype": "pandas.core.arrays.integer.UInt64Dtype",
        "pandas.core.arrays.integer.UInt8Dtype": "pandas.core.arrays.integer.UInt8Dtype",
        "pandas.core.arrays.base.ExtensionArray": "pandas.io.parsers.base_parser.ExtensionArray",
        "pandas.core.dtypes.base.ExtensionDtype": "pandas.io.pytables.ExtensionDtype",
        "pandas.core.arrays.base.ExtensionScalarOpsMixin": "pandas.core.arrays.base.ExtensionScalarOpsMixin",
        "pandas.core.accessor.register_dataframe_accessor": "pandas.core.accessor.register_dataframe_accessor",
        "pandas.core.dtypes.base.register_extension_dtype": "pandas.core.dtypes.dtypes.register_extension_dtype",
        "pandas.core.accessor.register_index_accessor": "pandas.core.accessor.register_index_accessor",
        "pandas.core.accessor.register_series_accessor": "pandas.core.accessor.register_series_accessor",
        "pandas.core.algorithms.take": "pandas.core.arrays.masked.take",
        "pandas.core.indexers.objects.BaseIndexer": "pandas.core.window.rolling.BaseIndexer",
        "pandas.core.indexers.objects.FixedForwardWindowIndexer": "pandas.core.indexers.objects.FixedForwardWindowIndexer",
        "pandas.core.indexers.objects.VariableOffsetWindowIndexer": "pandas.core.indexers.objects.VariableOffsetWindowIndexer",
        "pandas.core.indexers.utils.check_array_indexer": "pandas.core.indexers.utils.check_array_indexer",
        "pandas.core.interchange.dataframe_protocol.DataFrame": "pandas.core.interchange.from_dataframe.DataFrameXchg",
        "pandas.core.interchange.from_dataframe.from_dataframe": "pandas.core.interchange.from_dataframe.from_dataframe",
        "pandas._libs.lib.infer_dtype": "pandas.io.stata.infer_dtype",
        "pandas.core.dtypes.common.is_any_real_numeric_dtype": "pandas.core.indexes.base.is_any_real_numeric_dtype",
        "pandas.core.dtypes.inference.is_array_like": "pandas.core.indexes.multi.is_array_like",
        "pandas._libs.lib.is_bool": "pandas.io.common.is_bool",
        "pandas.core.dtypes.common.is_bool_dtype": "pandas.io.pytables.is_bool_dtype",
        "pandas.core.dtypes.common.is_categorical_dtype": "pandas.core.dtypes.common.is_categorical_dtype",
        "pandas._libs.lib.is_complex": "pandas.core.dtypes.inference.is_complex",
        "pandas.core.dtypes.common.is_complex_dtype": "pandas.io.pytables.is_complex_dtype",
        "pandas.core.dtypes.common.is_datetime64_any_dtype": "pandas.core.dtypes.common.is_datetime64_any_dtype",
        "pandas.core.dtypes.common.is_datetime64_dtype": "pandas.core.dtypes.common.is_datetime64_dtype",
        "pandas.core.dtypes.common.is_datetime64_ns_dtype": "pandas.core.window.ewm.is_datetime64_ns_dtype",
        "pandas.core.dtypes.common.is_datetime64tz_dtype": "pandas.core.dtypes.common.is_datetime64tz_dtype",
        "pandas.core.dtypes.inference.is_dict_like": "pandas.io.sql.is_dict_like",
        "pandas.core.dtypes.common.is_dtype_equal": "pandas.core.dtypes.common.is_dtype_equal",
        "pandas.core.dtypes.common.is_extension_array_dtype": "pandas.io.parsers.base_parser.is_extension_array_dtype",
        "pandas.core.dtypes.inference.is_file_like": "pandas.io.xml.is_file_like",
        "pandas._libs.lib.is_float": "pandas.io.parsers.readers.is_float",
        "pandas.core.dtypes.common.is_float_dtype": "pandas.io.parsers.base_parser.is_float_dtype",
        "pandas.core.dtypes.inference.is_hashable": "pandas.core.series.is_hashable",
        "pandas.core.dtypes.common.is_int64_dtype": "pandas.core.dtypes.common.is_int64_dtype",
        "pandas._libs.lib.is_integer": "pandas.io.parsers.readers.is_integer",
        "pandas.core.dtypes.common.is_integer_dtype": "pandas.io.parsers.base_parser.is_integer_dtype",
        "pandas._libs.lib.is_interval": "pandas.core.dtypes.inference.is_interval",
        "pandas.core.dtypes.common.is_interval_dtype": "pandas.core.dtypes.common.is_interval_dtype",
        "pandas._libs.lib.is_iterator": "pandas.core.series.is_iterator",
        "pandas._libs.lib.is_list_like": "pandas.io.xml.is_list_like",
        "pandas.core.dtypes.inference.is_named_tuple": "pandas.core.internals.construction.is_named_tuple",
        "pandas.core.dtypes.inference.is_number": "pandas.core.tools.numeric.is_number",
        "pandas.core.dtypes.common.is_numeric_dtype": "pandas.io.stata.is_numeric_dtype",
        "pandas.core.dtypes.common.is_object_dtype": "pandas.io.parsers.base_parser.is_object_dtype",
        "pandas.core.dtypes.common.is_period_dtype": "pandas.core.dtypes.common.is_period_dtype",
        "pandas.core.dtypes.inference.is_re": "pandas.core.strings.accessor.is_re",
        "pandas.core.dtypes.inference.is_re_compilable": "pandas.core.generic.is_re_compilable",
        "pandas._libs.lib.is_scalar": "pandas.io.parsers.base_parser.is_scalar",
        "pandas.core.dtypes.common.is_signed_integer_dtype": "pandas.core.indexes.range.is_signed_integer_dtype",
        "pandas.core.dtypes.common.is_sparse": "pandas.core.dtypes.common.is_sparse",
        "pandas.core.dtypes.common.is_string_dtype": "pandas.io.pytables.is_string_dtype",
        "pandas.core.dtypes.common.is_timedelta64_dtype": "pandas.core.dtypes.common.is_timedelta64_dtype",
        "pandas.core.dtypes.common.is_timedelta64_ns_dtype": "pandas.core.internals.array_manager.is_timedelta64_ns_dtype",
        "pandas.core.dtypes.common.is_unsigned_integer_dtype": "pandas.io.orc.is_unsigned_integer_dtype",
        "pandas.core.dtypes.common.pandas_dtype": "pandas.io.parsers.c_parser_wrapper.pandas_dtype",
        "pandas.core.dtypes.concat.union_categoricals": "pandas.io.parsers.c_parser_wrapper.union_categoricals",
        "pandas.core.groupby.generic.DataFrameGroupBy": "pandas.core.groupby.generic.DataFrameGroupBy",
        "pandas.core.resample.DatetimeIndexResamplerGroupby": "pandas.core.resample.DatetimeIndexResamplerGroupby",
        "pandas.core.window.expanding.Expanding": "pandas.core.window.expanding.Expanding",
        "pandas.core.window.expanding.ExpandingGroupby": "pandas.core.window.expanding.ExpandingGroupby",
        "pandas.core.window.ewm.ExponentialMovingWindow": "pandas.core.window.ewm.ExponentialMovingWindow",
        "pandas.core.window.ewm.ExponentialMovingWindowGroupby": "pandas.core.window.ewm.ExponentialMovingWindowGroupby",
        "pandas.io.json._json.JsonReader": "pandas.api.typing.JsonReader",
        "pandas._libs.missing.NAType": "pandas.core.dtypes.cast.NAType",
        "pandas._libs.tslibs.nattype.NaTType": "pandas.core.tools.timedeltas.NaTType",
        "pandas.core.resample.PeriodIndexResamplerGroupby": "pandas.core.resample.PeriodIndexResamplerGroupby",
        "pandas.core.resample.Resampler": "pandas.core.resample.Resampler",
        "pandas.core.window.rolling.Rolling": "pandas.core.window.rolling.Rolling",
        "pandas.core.window.rolling.RollingGroupby": "pandas.core.window.rolling.RollingGroupby",
        "pandas.core.groupby.generic.SeriesGroupBy": "pandas.core.resample.SeriesGroupBy",
        "pandas.io.stata.StataReader": "pandas.io.stata.StataReader",
        "pandas.core.resample.TimeGrouper": "pandas.core.resample.TimeGrouper",
        "pandas.core.resample.TimedeltaIndexResamplerGroupby": "pandas.core.resample.TimedeltaIndexResamplerGroupby",
        "pandas.core.window.rolling.Window": "pandas.core.window.rolling.Window",
        "pandas.core.construction.array": "pandas.core.internals.construction.pd_array",
        "pandas.core.arrays.arrow.array.ArrowExtensionArray": "pandas.io.sql.ArrowExtensionArray",
        "pandas.core.arrays.string_arrow.ArrowStringArray": "pandas.core.groupby.groupby.ArrowStringArray",
        "pandas.core.arrays.boolean.BooleanArray": "pandas._libs.parsers.BooleanArray",
        "pandas.core.arrays.datetimes.DatetimeArray": "pandas.io.pytables.DatetimeArray",
        "pandas.core.arrays.floating.FloatingArray": "pandas._libs.parsers.FloatingArray",
        "pandas.core.arrays.integer.IntegerArray": "pandas._libs.parsers.IntegerArray",
        "pandas.core.arrays.interval.IntervalArray": "pandas.core.internals.blocks.IntervalArray",
        "pandas.core.arrays.numpy_.NumpyExtensionArray": "pandas.core.tools.datetimes.NumpyExtensionArray",
        "pandas.core.arrays.period.PeriodArray": "pandas.io.pytables.PeriodArray",
        "pandas.core.arrays.sparse.array.SparseArray": "pandas.core.reshape.encoding.SparseArray",
        "pandas.core.arrays.string_.StringArray": "pandas.core.indexes.base.StringArray",
        "pandas.core.arrays.timedeltas.TimedeltaArray": "pandas.compat.pickle_compat.TimedeltaArray",
        "pandas.core.indexes.datetimes.bdate_range": "pandas.core.indexes.datetimes.bdate_range",
        "pandas.compat.compressors.BZ2File": "pandas.compat.compressors.BZ2File",
        "pandas.compat.compressors.LZMAFile": "pandas.compat.compressors.LZMAFile",
        "pandas.compat.compressors.flatten_buffer": "pandas.compat.compressors.flatten_buffer",
        "pandas.compat.get_bz2_file": "pandas.io.common.get_bz2_file",
        "pandas.compat.get_lzma_file": "pandas.io.common.get_lzma_file",
        "pandas.compat.is_ci_environment": "pandas.compat.is_ci_environment",
        "pandas.compat.is_platform_arm": "pandas.compat.is_platform_arm",
        "pandas.compat.is_platform_linux": "pandas.compat.is_platform_linux",
        "pandas.compat.is_platform_little_endian": "pandas.compat.is_platform_little_endian",
        "pandas.compat.is_platform_mac": "pandas.compat.is_platform_mac",
        "pandas.compat.is_platform_power": "pandas.compat.is_platform_power",
        "pandas.compat.is_platform_windows": "pandas.core.arrays.masked.is_platform_windows",
        "pandas.util.version.Version": "pandas.compat.pyarrow.Version",
        "pandas.compat.numpy.function.CompatValidator": "pandas.compat.numpy.function.CompatValidator",
        "pandas.errors.UnsupportedFunctionCall": "pandas.errors.UnsupportedFunctionCall",
        "pandas.compat.numpy.function.process_skipna": "pandas.compat.numpy.function.process_skipna",
        "pandas.compat.numpy.function.validate_argmax_with_skipna": "pandas.compat.numpy.function.validate_argmax_with_skipna",
        "pandas.compat.numpy.function.validate_argmin_with_skipna": "pandas.compat.numpy.function.validate_argmin_with_skipna",
        "pandas.util._validators.validate_args": "pandas.compat.numpy.function.validate_args",
        "pandas.util._validators.validate_args_and_kwargs": "pandas.compat.numpy.function.validate_args_and_kwargs",
        "pandas.compat.numpy.function.validate_argsort_with_ascending": "pandas.compat.numpy.function.validate_argsort_with_ascending",
        "pandas.compat.numpy.function.validate_clip_with_axis": "pandas.compat.numpy.function.validate_clip_with_axis",
        "pandas.compat.numpy.function.validate_cum_func_with_skipna": "pandas.compat.numpy.function.validate_cum_func_with_skipna",
        "pandas.compat.numpy.function.validate_func": "pandas.compat.numpy.function.validate_func",
        "pandas.compat.numpy.function.validate_groupby_func": "pandas.compat.numpy.function.validate_groupby_func",
        "pandas.util._validators.validate_kwargs": "pandas.compat.numpy.function.validate_kwargs",
        "pandas.compat.numpy.function.validate_minmax_axis": "pandas.compat.numpy.function.validate_minmax_axis",
        "pandas.compat.numpy.function.validate_resampler_func": "pandas.compat.numpy.function.validate_resampler_func",
        "pandas.compat.numpy.function.validate_take_with_convert": "pandas.compat.numpy.function.validate_take_with_convert",
        "pandas.core.reshape.concat.concat": "pandas.concat",
        "pandas.core.accessor.CachedAccessor": "pandas.core.series.CachedAccessor",
        "pandas.core.accessor.DirNamesMixin": "pandas.core.base.DirNamesMixin",
        "pandas.core.accessor.PandasDelegate": "pandas.core.indexes.accessors.PandasDelegate",
        "pandas.core.accessor.delegate_names": "pandas.core.indexes.accessors.delegate_names",
        "pandas.util._decorators.doc": "pandas.io.xml.doc",
        "pandas.util._exceptions.find_stack_level": "pandas.io.xml.find_stack_level",
        "pandas.core.dtypes.generic.ABCDatetimeArray": "pandas.core.dtypes.generic.ABCDatetimeArray",
        "pandas.core.dtypes.generic.ABCExtensionArray": "pandas.core.util.hashing.ABCExtensionArray",
        "pandas.core.dtypes.generic.ABCIndex": "pandas.core.util.hashing.ABCIndex",
        "pandas.core.dtypes.generic.ABCMultiIndex": "pandas.core.util.hashing.ABCMultiIndex",
        "pandas.core.dtypes.generic.ABCSeries": "pandas.core.window.rolling.ABCSeries",
        "pandas.core.dtypes.generic.ABCTimedeltaArray": "pandas.core.dtypes.generic.ABCTimedeltaArray",
        "pandas.core.dtypes.dtypes.BaseMaskedDtype": "pandas.core.methods.selectn.BaseMaskedDtype",
        "pandas.core.dtypes.dtypes.NumpyEADtype": "pandas.core.internals.blocks.NumpyEADtype",
        "pandas._libs.algos.Infinity": "pandas._libs.algos.Infinity",
        "pandas._libs.algos.NegInfinity": "pandas._libs.algos.NegInfinity",
        "pandas._libs.algos.backfill": "pandas._libs.algos.backfill",
        "pandas._libs.algos.backfill_2d_inplace": "pandas._libs.algos.backfill_2d_inplace",
        "pandas._libs.algos.backfill_inplace": "pandas._libs.algos.backfill_inplace",
        "pandas._libs.algos.diff_2d": "pandas._libs.algos.diff_2d",
        "pandas._libs.algos.ensure_float64": "pandas.core.window.rolling.ensure_float64",
        "pandas._libs.algos.ensure_int16": "pandas.core.dtypes.common.ensure_int16",
        "pandas._libs.algos.ensure_int32": "pandas.core.dtypes.common.ensure_int32",
        "pandas._libs.algos.ensure_int64": "pandas.core.sorting.ensure_int64",
        "pandas._libs.algos.ensure_int8": "pandas.core.dtypes.common.ensure_int8",
        "pandas._libs.algos.ensure_object": "pandas.io.stata.ensure_object",
        "pandas._libs.algos.ensure_platform_int": "pandas.core.sorting.ensure_platform_int",
        "pandas._libs.algos.ensure_uint64": "pandas.core.groupby.ops.ensure_uint64",
        "pandas._libs.algos.get_fill_indexer": "pandas._libs.algos.get_fill_indexer",
        "pandas._libs.algos.groupsort_indexer": "pandas._libs.join.groupsort_indexer",
        "pandas._libs.algos.is_lexsorted": "pandas._libs.algos.is_lexsorted",
        "pandas._libs.algos.is_monotonic": "pandas._libs.window.aggregations.is_monotonic",
        "pandas._libs.algos.kth_smallest": "pandas._libs.algos.kth_smallest",
        "pandas._libs.algos.nancorr": "pandas._libs.algos.nancorr",
        "pandas._libs.algos.nancorr_spearman": "pandas._libs.algos.nancorr_spearman",
        "pandas._libs.algos.pad": "pandas._libs.algos.pad",
        "pandas._libs.algos.pad_2d_inplace": "pandas._libs.algos.pad_2d_inplace",
        "pandas._libs.algos.pad_inplace": "pandas._libs.algos.pad_inplace",
        "pandas._libs.algos.rank_1d": "pandas.core.groupby.groupby.rank_1d",
        "pandas._libs.algos.rank_2d": "pandas._libs.algos.rank_2d",
        "pandas._libs.algos.take_1d_bool_bool": "pandas._libs.algos.take_1d_bool_bool",
        "pandas._libs.algos.take_1d_bool_object": "pandas._libs.algos.take_1d_bool_object",
        "pandas._libs.algos.take_1d_float32_float32": "pandas._libs.algos.take_1d_float32_float32",
        "pandas._libs.algos.take_1d_float32_float64": "pandas._libs.algos.take_1d_float32_float64",
        "pandas._libs.algos.take_1d_float64_float64": "pandas._libs.algos.take_1d_float64_float64",
        "pandas._libs.algos.take_1d_int16_float64": "pandas._libs.algos.take_1d_int16_float64",
        "pandas._libs.algos.take_1d_int16_int16": "pandas._libs.algos.take_1d_int16_int16",
        "pandas._libs.algos.take_1d_int16_int32": "pandas._libs.algos.take_1d_int16_int32",
        "pandas._libs.algos.take_1d_int16_int64": "pandas._libs.algos.take_1d_int16_int64",
        "pandas._libs.algos.take_1d_int32_float64": "pandas._libs.algos.take_1d_int32_float64",
        "pandas._libs.algos.take_1d_int32_int32": "pandas._libs.algos.take_1d_int32_int32",
        "pandas._libs.algos.take_1d_int32_int64": "pandas._libs.algos.take_1d_int32_int64",
        "pandas._libs.algos.take_1d_int64_float64": "pandas._libs.algos.take_1d_int64_float64",
        "pandas._libs.algos.take_1d_int64_int64": "pandas._libs.algos.take_1d_int64_int64",
        "pandas._libs.algos.take_1d_int8_float64": "pandas._libs.algos.take_1d_int8_float64",
        "pandas._libs.algos.take_1d_int8_int32": "pandas._libs.algos.take_1d_int8_int32",
        "pandas._libs.algos.take_1d_int8_int64": "pandas._libs.algos.take_1d_int8_int64",
        "pandas._libs.algos.take_1d_int8_int8": "pandas._libs.algos.take_1d_int8_int8",
        "pandas._libs.algos.take_1d_object_object": "pandas._libs.algos.take_1d_object_object",
        "pandas._libs.algos.take_2d_axis0_bool_bool": "pandas._libs.algos.take_2d_axis0_bool_bool",
        "pandas._libs.algos.take_2d_axis0_bool_object": "pandas._libs.algos.take_2d_axis0_bool_object",
        "pandas._libs.algos.take_2d_axis0_float32_float32": "pandas._libs.algos.take_2d_axis0_float32_float32",
        "pandas._libs.algos.take_2d_axis0_float32_float64": "pandas._libs.algos.take_2d_axis0_float32_float64",
        "pandas._libs.algos.take_2d_axis0_float64_float64": "pandas._libs.algos.take_2d_axis0_float64_float64",
        "pandas._libs.algos.take_2d_axis0_int16_float64": "pandas._libs.algos.take_2d_axis0_int16_float64",
        "pandas._libs.algos.take_2d_axis0_int16_int16": "pandas._libs.algos.take_2d_axis0_int16_int16",
        "pandas._libs.algos.take_2d_axis0_int16_int32": "pandas._libs.algos.take_2d_axis0_int16_int32",
        "pandas._libs.algos.take_2d_axis0_int16_int64": "pandas._libs.algos.take_2d_axis0_int16_int64",
        "pandas._libs.algos.take_2d_axis0_int32_float64": "pandas._libs.algos.take_2d_axis0_int32_float64",
        "pandas._libs.algos.take_2d_axis0_int32_int32": "pandas._libs.algos.take_2d_axis0_int32_int32",
        "pandas._libs.algos.take_2d_axis0_int32_int64": "pandas._libs.algos.take_2d_axis0_int32_int64",
        "pandas._libs.algos.take_2d_axis0_int64_float64": "pandas._libs.algos.take_2d_axis0_int64_float64",
        "pandas._libs.algos.take_2d_axis0_int64_int64": "pandas._libs.algos.take_2d_axis0_int64_int64",
        "pandas._libs.algos.take_2d_axis0_int8_float64": "pandas._libs.algos.take_2d_axis0_int8_float64",
        "pandas._libs.algos.take_2d_axis0_int8_int32": "pandas._libs.algos.take_2d_axis0_int8_int32",
        "pandas._libs.algos.take_2d_axis0_int8_int64": "pandas._libs.algos.take_2d_axis0_int8_int64",
        "pandas._libs.algos.take_2d_axis0_int8_int8": "pandas._libs.algos.take_2d_axis0_int8_int8",
        "pandas._libs.algos.take_2d_axis0_object_object": "pandas._libs.algos.take_2d_axis0_object_object",
        "pandas._libs.algos.take_2d_axis1_bool_bool": "pandas._libs.groupby.take_2d_axis1_bool_bool",
        "pandas._libs.algos.take_2d_axis1_bool_object": "pandas._libs.algos.take_2d_axis1_bool_object",
        "pandas._libs.algos.take_2d_axis1_float32_float32": "pandas._libs.algos.take_2d_axis1_float32_float32",
        "pandas._libs.algos.take_2d_axis1_float32_float64": "pandas._libs.algos.take_2d_axis1_float32_float64",
        "pandas._libs.algos.take_2d_axis1_float64_float64": "pandas._libs.groupby.take_2d_axis1_float64_float64",
        "pandas._libs.algos.take_2d_axis1_int16_float64": "pandas._libs.algos.take_2d_axis1_int16_float64",
        "pandas._libs.algos.take_2d_axis1_int16_int16": "pandas._libs.algos.take_2d_axis1_int16_int16",
        "pandas._libs.algos.take_2d_axis1_int16_int32": "pandas._libs.algos.take_2d_axis1_int16_int32",
        "pandas._libs.algos.take_2d_axis1_int16_int64": "pandas._libs.algos.take_2d_axis1_int16_int64",
        "pandas._libs.algos.take_2d_axis1_int32_float64": "pandas._libs.algos.take_2d_axis1_int32_float64",
        "pandas._libs.algos.take_2d_axis1_int32_int32": "pandas._libs.algos.take_2d_axis1_int32_int32",
        "pandas._libs.algos.take_2d_axis1_int32_int64": "pandas._libs.algos.take_2d_axis1_int32_int64",
        "pandas._libs.algos.take_2d_axis1_int64_float64": "pandas._libs.algos.take_2d_axis1_int64_float64",
        "pandas._libs.algos.take_2d_axis1_int64_int64": "pandas._libs.algos.take_2d_axis1_int64_int64",
        "pandas._libs.algos.take_2d_axis1_int8_float64": "pandas._libs.algos.take_2d_axis1_int8_float64",
        "pandas._libs.algos.take_2d_axis1_int8_int32": "pandas._libs.algos.take_2d_axis1_int8_int32",
        "pandas._libs.algos.take_2d_axis1_int8_int64": "pandas._libs.algos.take_2d_axis1_int8_int64",
        "pandas._libs.algos.take_2d_axis1_int8_int8": "pandas._libs.algos.take_2d_axis1_int8_int8",
        "pandas._libs.algos.take_2d_axis1_object_object": "pandas._libs.algos.take_2d_axis1_object_object",
        "pandas._libs.algos.take_2d_multi_bool_bool": "pandas._libs.algos.take_2d_multi_bool_bool",
        "pandas._libs.algos.take_2d_multi_bool_object": "pandas._libs.algos.take_2d_multi_bool_object",
        "pandas._libs.algos.take_2d_multi_float32_float32": "pandas._libs.algos.take_2d_multi_float32_float32",
        "pandas._libs.algos.take_2d_multi_float32_float64": "pandas._libs.algos.take_2d_multi_float32_float64",
        "pandas._libs.algos.take_2d_multi_float64_float64": "pandas._libs.algos.take_2d_multi_float64_float64",
        "pandas._libs.algos.take_2d_multi_int16_float64": "pandas._libs.algos.take_2d_multi_int16_float64",
        "pandas._libs.algos.take_2d_multi_int16_int16": "pandas._libs.algos.take_2d_multi_int16_int16",
        "pandas._libs.algos.take_2d_multi_int16_int32": "pandas._libs.algos.take_2d_multi_int16_int32",
        "pandas._libs.algos.take_2d_multi_int16_int64": "pandas._libs.algos.take_2d_multi_int16_int64",
        "pandas._libs.algos.take_2d_multi_int32_float64": "pandas._libs.algos.take_2d_multi_int32_float64",
        "pandas._libs.algos.take_2d_multi_int32_int32": "pandas._libs.algos.take_2d_multi_int32_int32",
        "pandas._libs.algos.take_2d_multi_int32_int64": "pandas._libs.algos.take_2d_multi_int32_int64",
        "pandas._libs.algos.take_2d_multi_int64_float64": "pandas._libs.algos.take_2d_multi_int64_float64",
        "pandas._libs.algos.take_2d_multi_int64_int64": "pandas._libs.algos.take_2d_multi_int64_int64",
        "pandas._libs.algos.take_2d_multi_int8_float64": "pandas._libs.algos.take_2d_multi_int8_float64",
        "pandas._libs.algos.take_2d_multi_int8_int32": "pandas._libs.algos.take_2d_multi_int8_int32",
        "pandas._libs.algos.take_2d_multi_int8_int64": "pandas._libs.algos.take_2d_multi_int8_int64",
        "pandas._libs.algos.take_2d_multi_int8_int8": "pandas._libs.algos.take_2d_multi_int8_int8",
        "pandas._libs.algos.take_2d_multi_object_object": "pandas._libs.algos.take_2d_multi_object_object",
        "pandas._libs.algos.unique_deltas": "pandas.core.indexes.range.unique_deltas",
        "pandas._libs.algos.validate_limit": "pandas._libs.algos.validate_limit",
        "pandas.core.algorithms.checked_add_with_arr": "pandas.core.arrays.datetimelike.checked_add_with_arr",
        "pandas.core.dtypes.concat.concat_compat": "pandas.io.parsers.c_parser_wrapper.concat_compat",
        "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike": "pandas.core.dtypes.cast.construct_1d_object_array_from_listlike",
        "pandas.core.algorithms.diff": "pandas.core.algorithms.diff",
        "pandas.core.algorithms.duplicated": "pandas.core.algorithms.duplicated",
        "pandas.core.construction.ensure_wrapped_if_datetimelike": "pandas.core.reshape.merge.ensure_wrapped_if_datetimelike",
        "pandas.core.construction.extract_array": "pandas.io.pytables.extract_array",
        "pandas.core.algorithms.factorize": "pandas.factorize",
        "pandas.core.algorithms.factorize_array": "pandas.core.arrays.masked.factorize_array",
        "pandas._libs.hashtable.Complex128Factorizer": "pandas._libs.hashtable.Complex128Factorizer",
        "pandas._libs.hashtable.Complex128HashTable": "pandas._libs.hashtable.Complex128HashTable",
        "pandas._libs.hashtable.Complex128Vector": "pandas._libs.hashtable.Complex128Vector",
        "pandas._libs.hashtable.Complex64Factorizer": "pandas._libs.hashtable.Complex64Factorizer",
        "pandas._libs.hashtable.Complex64HashTable": "pandas._libs.hashtable.Complex64HashTable",
        "pandas._libs.hashtable.Complex64Vector": "pandas._libs.hashtable.Complex64Vector",
        "pandas._libs.hashtable.Factorizer": "pandas._libs.hashtable.Factorizer",
        "pandas._libs.hashtable.Float32Factorizer": "pandas._libs.hashtable.Float32Factorizer",
        "pandas._libs.hashtable.Float32HashTable": "pandas._libs.hashtable.Float32HashTable",
        "pandas._libs.hashtable.Float32Vector": "pandas._libs.hashtable.Float32Vector",
        "pandas._libs.hashtable.Float64Factorizer": "pandas._libs.hashtable.Float64Factorizer",
        "pandas._libs.hashtable.Float64HashTable": "pandas._libs.hashtable.Float64HashTable",
        "pandas._libs.hashtable.Float64Vector": "pandas._libs.hashtable.Float64Vector",
        "pandas._libs.hashtable.HashTable": "pandas._libs.hashtable.HashTable",
        "pandas._libs.hashtable.Int16Factorizer": "pandas._libs.hashtable.Int16Factorizer",
        "pandas._libs.hashtable.Int16HashTable": "pandas._libs.hashtable.Int16HashTable",
        "pandas._libs.hashtable.Int16Vector": "pandas._libs.hashtable.Int16Vector",
        "pandas._libs.hashtable.Int32Factorizer": "pandas._libs.hashtable.Int32Factorizer",
        "pandas._libs.hashtable.Int32HashTable": "pandas._libs.hashtable.Int32HashTable",
        "pandas._libs.hashtable.Int32Vector": "pandas._libs.hashtable.Int32Vector",
        "pandas._libs.hashtable.Int64Factorizer": "pandas._libs.hashtable.Int64Factorizer",
        "pandas._libs.hashtable.Int64HashTable": "pandas._libs.hashtable.IntpHashTable",
        "pandas._libs.hashtable.Int64Vector": "pandas._libs.hashtable.Int64Vector",
        "pandas._libs.hashtable.Int8Factorizer": "pandas._libs.hashtable.Int8Factorizer",
        "pandas._libs.hashtable.Int8HashTable": "pandas._libs.hashtable.Int8HashTable",
        "pandas._libs.hashtable.Int8Vector": "pandas._libs.hashtable.Int8Vector",
        "pandas._libs.hashtable.ObjectFactorizer": "pandas._libs.hashtable.ObjectFactorizer",
        "pandas._libs.hashtable.ObjectVector": "pandas._libs.hashtable.ObjectVector",
        "pandas._libs.hashtable.PyObjectHashTable": "pandas._libs.hashtable.PyObjectHashTable",
        "pandas._libs.hashtable.StringHashTable": "pandas._libs.hashtable.StringHashTable",
        "pandas._libs.hashtable.StringVector": "pandas._libs.hashtable.StringVector",
        "pandas._libs.hashtable.UInt16Factorizer": "pandas._libs.hashtable.UInt16Factorizer",
        "pandas._libs.hashtable.UInt16HashTable": "pandas._libs.hashtable.UInt16HashTable",
        "pandas._libs.hashtable.UInt16Vector": "pandas._libs.hashtable.UInt16Vector",
        "pandas._libs.hashtable.UInt32Factorizer": "pandas._libs.hashtable.UInt32Factorizer",
        "pandas._libs.hashtable.UInt32HashTable": "pandas._libs.hashtable.UInt32HashTable",
        "pandas._libs.hashtable.UInt32Vector": "pandas._libs.hashtable.UInt32Vector",
        "pandas._libs.hashtable.UInt64Factorizer": "pandas._libs.hashtable.UInt64Factorizer",
        "pandas._libs.hashtable.UInt64HashTable": "pandas._libs.hashtable.UInt64HashTable",
        "pandas._libs.hashtable.UInt64Vector": "pandas._libs.hashtable.UInt64Vector",
        "pandas._libs.hashtable.UInt8Factorizer": "pandas._libs.hashtable.UInt8Factorizer",
        "pandas._libs.hashtable.UInt8HashTable": "pandas._libs.hashtable.UInt8HashTable",
        "pandas._libs.hashtable.UInt8Vector": "pandas._libs.hashtable.UInt8Vector",
        "pandas._libs.hashtable.Vector": "pandas._libs.hashtable.Vector",
        "pandas._libs.hashtable.duplicated": "pandas.core.indexes.multi.duplicated",
        "pandas._libs.hashtable.get_hashtable_trace_domain": "pandas._libs.hashtable.get_hashtable_trace_domain",
        "pandas._libs.hashtable.ismember": "pandas._libs.hashtable.ismember",
        "pandas._libs.hashtable.mode": "pandas._libs.hashtable.mode",
        "pandas._libs.hashtable.object_hash": "pandas.core.dtypes.base.object_hash",
        "pandas._libs.hashtable.objects_are_equal": "pandas._libs.hashtable.objects_are_equal",
        "pandas._libs.hashtable._unique_label_indices_int64": "pandas.core.sorting.unique_label_indices",
        "pandas._libs.hashtable.value_count": "pandas._libs.hashtable.value_count",
        "pandas.core.algorithms.isin": "pandas.core.arrays.masked.isin",
        "pandas.core.dtypes.missing.isna": "pandas.isnull",
        "pandas._libs.tslibs.np_datetime.OutOfBoundsDatetime": "pandas.errors.OutOfBoundsDatetime",
        "pandas._libs.tslibs.np_datetime.OutOfBoundsTimedelta": "pandas.errors.OutOfBoundsTimedelta",
        "pandas._libs.lib.array_equivalent_object": "pandas._libs.lib.array_equivalent_object",
        "pandas._libs.missing.check_na_tuples_nonequal": "pandas._libs.missing.check_na_tuples_nonequal",
        "pandas._libs.lib.convert_nans_to_NA": "pandas._libs.lib.convert_nans_to_NA",
        "pandas._libs.lib.count_level_2d": "pandas._libs.lib.count_level_2d",
        "pandas._libs.lib.dicts_to_array": "pandas._libs.lib.dicts_to_array",
        "pandas._libs.lib.dtypes_all_equal": "pandas._libs.lib.dtypes_all_equal",
        "pandas._libs.lib.ensure_string_array": "pandas.core.arrays.string_.ensure_string_array",
        "pandas._libs.lib.eq_NA_compat": "pandas._libs.lib.eq_NA_compat",
        "pandas._libs.lib.fast_multiget": "pandas._libs.lib.fast_multiget",
        "pandas._libs.lib.fast_unique_multiple_list": "pandas._libs.lib.fast_unique_multiple_list",
        "pandas._libs.lib.fast_unique_multiple_list_gen": "pandas._libs.lib.fast_unique_multiple_list_gen",
        "pandas._libs.lib.fast_zip": "pandas._libs.lib.fast_zip",
        "pandas._libs.lib.generate_bins_dt64": "pandas._libs.lib.generate_bins_dt64",
        "pandas._libs.lib.generate_slices": "pandas._libs.lib.generate_slices",
        "pandas._libs.lib.get_level_sorter": "pandas._libs.lib.get_level_sorter",
        "pandas._libs.lib.get_reverse_indexer": "pandas._libs.lib.get_reverse_indexer",
        "pandas._libs.lib.has_infs": "pandas._libs.lib.has_infs",
        "pandas._libs.lib.has_only_ints_or_nan": "pandas._libs.lib.has_only_ints_or_nan",
        "pandas._libs.lib.indices_fast": "pandas._libs.lib.indices_fast",
        "pandas._libs.lib.is_all_arraylike": "pandas._libs.lib.is_all_arraylike",
        "pandas._libs.lib.is_bool_array": "pandas._libs.lib.is_bool_array",
        "pandas._libs.lib.is_bool_list": "pandas._libs.lib.is_bool_list",
        "pandas._libs.lib.is_date_array": "pandas._libs.lib.is_date_array",
        "pandas._libs.lib.is_datetime64_array": "pandas._libs.lib.is_datetime64_array",
        "pandas._libs.lib.is_datetime_array": "pandas.core.indexes.base.is_datetime_array",
        "pandas._libs.lib.is_datetime_with_singletz_array": "pandas._libs.lib.is_datetime_with_singletz_array",
        "pandas._libs.lib.is_decimal": "pandas.core.tools.numeric.is_decimal",
        "pandas._libs.lib.is_float_array": "pandas._libs.lib.is_float_array",
        "pandas._libs.lib.is_int_or_none": "pandas._libs.lib.is_int_or_none",
        "pandas._libs.lib.is_integer_array": "pandas._libs.lib.is_integer_array",
        "pandas._libs.lib.is_interval_array": "pandas._libs.lib.is_interval_array",
        "pandas._libs.lib.is_np_dtype": "pandas._libs.lib.is_np_dtype",
        "pandas._libs.lib.is_period": "pandas._libs.lib.is_period",
        "pandas._libs.lib.is_pyarrow_array": "pandas._libs.lib.is_pyarrow_array",
        "pandas._libs.lib.is_range_indexer": "pandas.core.series.is_range_indexer",
        "pandas._libs.lib.is_string_array": "pandas.io.pytables.is_string_array",
        "pandas._libs.lib.is_time_array": "pandas._libs.lib.is_time_array",
        "pandas._libs.lib.is_timedelta_or_timedelta64_array": "pandas._libs.lib.is_timedelta_or_timedelta64_array",
        "pandas._libs.lib.item_from_zerodim": "pandas.core.indexing.item_from_zerodim",
        "pandas._libs.lib.map_infer": "pandas._libs.lib.map_infer",
        "pandas._libs.lib.map_infer_mask": "pandas._libs.lib.map_infer_mask",
        "pandas._libs.lib.maybe_booleans_to_slice": "pandas._libs.lib.maybe_booleans_to_slice",
        "pandas._libs.lib.maybe_convert_numeric": "pandas._libs.lib.maybe_convert_numeric",
        "pandas._libs.lib.maybe_convert_objects": "pandas._libs.lib.maybe_convert_objects",
        "pandas._libs.lib.maybe_indices_to_slice": "pandas._libs.lib.maybe_indices_to_slice",
        "pandas._libs.lib.memory_usage_of_objects": "pandas._libs.lib.memory_usage_of_objects",
        "pandas._libs.lib.to_object_array": "pandas._libs.lib.to_object_array",
        "pandas._libs.lib.to_object_array_tuples": "pandas._libs.lib.to_object_array_tuples",
        "pandas._libs.lib.tuples_to_object_array": "pandas._libs.lib.tuples_to_object_array",
        "pandas._config.using_pyarrow_string_dtype": "pandas.io.pytables.using_pyarrow_string_dtype",
        "pandas.core.algorithms.map_array": "pandas.core.arrays.datetimelike.map_array",
        "pandas.core.algorithms.mode": "pandas.core.arrays.base.mode",
        "pandas.core.dtypes.missing.na_value_for_dtype": "pandas.core.series.na_value_for_dtype",
        "pandas.core.dtypes.common.needs_i8_conversion": "pandas.io.pytables.needs_i8_conversion",
        "pandas.core.dtypes.cast.np_find_common_type": "pandas.core.internals.array_manager.np_find_common_type",
        "pandas.core.algorithms.nunique_ints": "pandas.core.algorithms.nunique_ints",
        "pandas.core.algorithms.rank": "pandas.core.arrays.base.rank",
        "pandas.core.algorithms.safe_sort": "pandas.core.indexes.api.safe_sort",
        "pandas.core.algorithms.searchsorted": "pandas.core.algorithms.searchsorted",
        "pandas.core.array_algos.take.take_nd": "pandas.core.arrays.categorical.take_nd",
        "pandas.core.algorithms.union_with_duplicates": "pandas.core.algorithms.union_with_duplicates",
        "pandas.core.algorithms.unique": "pandas.unique",
        "pandas.core.algorithms.unique_with_mask": "pandas.core.algorithms.unique_with_mask",
        "pandas.core.indexers.utils.validate_indices": "pandas.core.internals.array_manager.validate_indices",
        "pandas.core.algorithms.value_counts": "pandas.value_counts",
        "pandas.core.algorithms.value_counts_arraylike": "pandas.core.algorithms.value_counts_arraylike",
        "pandas.core.algorithms.value_counts_internal": "pandas.core.arrays.interval.value_counts",
        "pandas.core.indexes.datetimes.date_range": "pandas.date_range",
        "pandas.core.indexes.interval.interval_range": "pandas.interval_range",
        "pandas.core.dtypes.missing.notna": "pandas.notnull",
        "pandas.core.indexes.period.period_range": "pandas.period_range",
        "pandas.io.formats.format.set_eng_float_format": "pandas.set_eng_float_format",
        "pandas.core.indexes.timedeltas.timedelta_range": "pandas.timedelta_range",
        "pandas.core.tools.datetimes.to_datetime": "pandas.to_datetime",
        "pandas.core.tools.numeric.to_numeric": "pandas.to_numeric",
        "pandas.core.tools.timedeltas.to_timedelta": "pandas.to_timedelta",
        "pandas.core.dtypes.generic.ABCDataFrame": "pandas.io.clipboards.ABCDataFrame",
        "pandas.core.dtypes.generic.ABCNDFrame": "pandas.core.dtypes.generic.ABCNDFrame",
        "pandas.core.apply.Apply": "pandas.core.apply.Apply",
        "pandas.core.apply.FrameApply": "pandas.core.apply.FrameApply",
        "pandas.core.apply.FrameColumnApply": "pandas.core.apply.FrameColumnApply",
        "pandas.core.apply.FrameRowApply": "pandas.core.apply.FrameRowApply",
        "pandas.core.apply.GroupByApply": "pandas.core.groupby.generic.GroupByApply",
        "pandas.core.apply.NDFrameApply": "pandas.core.apply.NDFrameApply",
        "pandas.core.apply.ResamplerWindowApply": "pandas.core.window.rolling.ResamplerWindowApply",
        "pandas.core.apply.SeriesApply": "pandas.core.series.SeriesApply",
        "pandas.errors.SpecificationError": "pandas.errors.SpecificationError",
        "pandas._libs.properties.CachedProperty": "pandas.io.pytables.cache_readonly",
        "pandas.core.common.all_none": "pandas.core.common.all_none",
        "pandas.core.common.all_not_none": "pandas.core.common.all_not_none",
        "pandas.core.common.any_none": "pandas.core.common.any_none",
        "pandas.core.common.any_not_none": "pandas.core.common.any_not_none",
        "pandas.core.common.apply_if_callable": "pandas.core.common.apply_if_callable",
        "pandas.core.common.asarray_tuplesafe": "pandas.core.common.asarray_tuplesafe",
        "pandas.core.common.cast_scalar_indexer": "pandas.core.common.cast_scalar_indexer",
        "pandas.core.common.consensus_name_attr": "pandas.core.common.consensus_name_attr",
        "pandas.core.common.convert_to_list_like": "pandas.core.common.convert_to_list_like",
        "pandas.core.common.count_not_none": "pandas.core.common.count_not_none",
        "pandas.core.common.fill_missing_names": "pandas.core.common.fill_missing_names",
        "pandas.core.common.flatten": "pandas.core.common.flatten",
        "pandas.core.common.get_callable_name": "pandas.core.common.get_callable_name",
        "pandas.core.common.get_cython_func": "pandas.core.common.get_cython_func",
        "pandas.core.common.get_rename_function": "pandas.core.common.get_rename_function",
        "pandas.core.common.index_labels_to_array": "pandas.core.common.index_labels_to_array",
        "pandas.core.common.is_bool_indexer": "pandas.core.common.is_bool_indexer",
        "pandas.core.common.is_builtin_func": "pandas.core.common.is_builtin_func",
        "pandas.core.common.is_empty_slice": "pandas.core.common.is_empty_slice",
        "pandas.core.common.is_full_slice": "pandas.core.common.is_full_slice",
        "pandas.core.common.is_null_slice": "pandas.core.common.is_null_slice",
        "pandas.core.common.is_true_slices": "pandas.core.common.is_true_slices",
        "pandas.core.dtypes.inference.iterable_not_string": "pandas.core.dtypes.inference.iterable_not_string",
        "pandas.core.common.maybe_iterable_to_list": "pandas.core.common.maybe_iterable_to_list",
        "pandas.core.common.maybe_make_list": "pandas.core.common.maybe_make_list",
        "pandas.core.common.not_none": "pandas.core.common.not_none",
        "pandas.core.common.pipe": "pandas.core.common.pipe",
        "pandas.core.common.random_state": "pandas.core.common.random_state",
        "pandas.core.common.require_length_match": "pandas.core.common.require_length_match",
        "pandas.core.common.standardize_mapping": "pandas.core.common.standardize_mapping",
        "pandas.core.common.temp_setattr": "pandas.core.common.temp_setattr",
        "pandas.core.apply.frame_apply": "pandas.core.apply.frame_apply",
        "pandas.core.apply.include_axis": "pandas.core.apply.include_axis",
        "pandas.core.apply.is_multi_agg_with_relabel": "pandas.core.apply.is_multi_agg_with_relabel",
        "pandas.core.dtypes.cast.is_nested_object": "pandas.core.dtypes.cast.is_nested_object",
        "pandas.core.dtypes.inference.is_sequence": "pandas.core.indexing.is_sequence",
        "pandas.core.apply.maybe_mangle_lambdas": "pandas.core.groupby.generic.maybe_mangle_lambdas",
        "pandas.core.apply.normalize_keyword_aggregation": "pandas.core.apply.normalize_keyword_aggregation",
        "pandas._config.config.option_context": "pandas.option_context",
        "pandas.core.apply.reconstruct_and_relabel_result": "pandas.core.frame.reconstruct_and_relabel_result",
        "pandas.core.apply.reconstruct_func": "pandas.core.groupby.generic.reconstruct_func",
        "pandas.core.apply.relabel_result": "pandas.core.apply.relabel_result",
        "pandas.core.apply.validate_func_kwargs": "pandas.core.groupby.generic.validate_func_kwargs",
        "pandas.core.apply.warn_alias_replacement": "pandas.core.resample.warn_alias_replacement",
        "pandas.core.array_algos.datetimelike_accumulations.cummax": "pandas.core.array_algos.datetimelike_accumulations.cummax",
        "pandas.core.array_algos.datetimelike_accumulations.cummin": "pandas.core.array_algos.datetimelike_accumulations.cummin",
        "pandas.core.array_algos.datetimelike_accumulations.cumsum": "pandas.core.array_algos.datetimelike_accumulations.cumsum",
        "pandas.core.array_algos.masked_accumulations.cummax": "pandas.core.array_algos.masked_accumulations.cummax",
        "pandas.core.array_algos.masked_accumulations.cummin": "pandas.core.array_algos.masked_accumulations.cummin",
        "pandas.core.array_algos.masked_accumulations.cumprod": "pandas.core.array_algos.masked_accumulations.cumprod",
        "pandas.core.array_algos.masked_accumulations.cumsum": "pandas.core.array_algos.masked_accumulations.cumsum",
        "pandas.core.nanops.check_below_min_count": "pandas.core.arrays.sparse.array.check_below_min_count",
        "pandas._libs.missing.C_NAType": "pandas._libs.missing.C_NAType",
        "pandas._libs.missing.checknull": "pandas.core.dtypes.cast.checknull",
        "pandas._libs.missing.is_float_nan": "pandas.core.indexes.base.is_float_nan",
        "pandas._libs.missing.is_matching_na": "pandas.core.ops.common.is_matching_na",
        "pandas._libs.missing.is_numeric_na": "pandas._libs.missing.is_numeric_na",
        "pandas._libs.missing.isnaobj": "pandas._libs.missing.isnaobj",
        "pandas._libs.missing.isneginf_scalar": "pandas.core.dtypes.missing.isneginf_scalar",
        "pandas._libs.missing.isposinf_scalar": "pandas.core.dtypes.missing.isposinf_scalar",
        "pandas._libs.ops_dispatch.maybe_dispatch_ufunc_to_dunder_op": "pandas.core.arraylike.maybe_dispatch_ufunc_to_dunder_op",
        "pandas.core.array_algos.masked_reductions.max": "pandas.core.array_algos.masked_reductions.max",
        "pandas.core.array_algos.masked_reductions.mean": "pandas.core.array_algos.masked_reductions.mean",
        "pandas.core.array_algos.masked_reductions.min": "pandas.core.array_algos.masked_reductions.min",
        "pandas.core.array_algos.masked_reductions.prod": "pandas.core.array_algos.masked_reductions.prod",
        "pandas.core.array_algos.masked_reductions.std": "pandas.core.array_algos.masked_reductions.std",
        "pandas.core.array_algos.masked_reductions.sum": "pandas.core.array_algos.masked_reductions.sum",
        "pandas.core.array_algos.masked_reductions.var": "pandas.core.array_algos.masked_reductions.var",
        "pandas.core.array_algos.putmask.extract_bool_array": "pandas.core.internals.blocks.extract_bool_array",
        "pandas.core.dtypes.cast.infer_dtype_from": "pandas.core.indexes.base.infer_dtype_from",
        "pandas.core.array_algos.putmask.putmask_inplace": "pandas.core.internals.blocks.putmask_inplace",
        "pandas.core.array_algos.putmask.putmask_without_repeat": "pandas.core.internals.blocks.putmask_without_repeat",
        "pandas.core.array_algos.putmask.setitem_datetimelike_compat": "pandas.core.internals.blocks.setitem_datetimelike_compat",
        "pandas.core.array_algos.putmask.validate_putmask": "pandas.core.internals.blocks.validate_putmask",
        "pandas.core.array_algos.quantile.quantile_compat": "pandas.core.internals.blocks.quantile_compat",
        "pandas.core.array_algos.quantile.quantile_with_mask": "pandas.core.arrays.masked.quantile_with_mask",
        "pandas.core.array_algos.replace.compare_or_regex_search": "pandas.core.internals.blocks.compare_or_regex_search",
        "pandas.core.array_algos.replace.replace_regex": "pandas.core.internals.blocks.replace_regex",
        "pandas.core.array_algos.replace.should_use_regex": "pandas.core.internals.blocks.should_use_regex",
        "pandas.core.dtypes.common.is_1d_only_ea_dtype": "pandas.core.internals.ops.is_1d_only_ea_dtype",
        "pandas.core.dtypes.cast.maybe_promote": "pandas.core.indexing.maybe_promote",
        "pandas.core.array_algos.take.take_1d": "pandas.core.internals.array_manager.take_1d",
        "pandas.core.array_algos.take.take_2d_multi": "pandas.core.frame.take_2d_multi",
        "pandas.core.array_algos.transforms.shift": "pandas.core.internals.blocks.shift",
        "pandas.core.arraylike.OpsMixin": "pandas.core.frame.OpsMixin",
        "pandas.core.arraylike.array_ufunc": "pandas.core.arraylike.array_ufunc",
        "pandas.core.arraylike.default_array_ufunc": "pandas.core.arraylike.default_array_ufunc",
        "pandas.core.arraylike.dispatch_reduction_ufunc": "pandas.core.arraylike.dispatch_reduction_ufunc",
        "pandas.core.arraylike.dispatch_ufunc_with_out": "pandas.core.arraylike.dispatch_ufunc_with_out",
        "pandas.core.roperator.radd": "pandas.core.ops.radd",
        "pandas.core.roperator.rand_": "pandas.core.ops.rand_",
        "pandas.core.roperator.rdiv": "pandas.core.ops.rdiv",
        "pandas.core.roperator.rdivmod": "pandas.core.ops.rdivmod",
        "pandas.core.roperator.rfloordiv": "pandas.core.ops.rfloordiv",
        "pandas.core.roperator.rmod": "pandas.core.ops.rmod",
        "pandas.core.roperator.rmul": "pandas.core.ops.rmul",
        "pandas.core.roperator.ror_": "pandas.core.ops.ror_",
        "pandas.core.roperator.rpow": "pandas.core.ops.rpow",
        "pandas.core.roperator.rsub": "pandas.core.ops.rsub",
        "pandas.core.roperator.rtruediv": "pandas.core.ops.rtruediv",
        "pandas.core.roperator.rxor": "pandas.core.ops.rxor",
        "pandas.core.ops.common.unpack_zerodim_and_defer": "pandas.core.indexes.range.unpack_zerodim_and_defer",
        "pandas.core.arrays.masked.BaseMaskedArray": "pandas.core.tools.numeric.BaseMaskedArray",
        "pandas.core.arrays.base.ExtensionOpsMixin": "pandas.core.arrays.base.ExtensionOpsMixin",
        "pandas.core.arrays._arrow_string_mixins.ArrowStringArrayMixin": "pandas.core.arrays.string_arrow.ArrowStringArrayMixin",
        "pandas.core.strings.base.BaseStringArrayMethods": "pandas.core.strings.object_array.BaseStringArrayMethods",
        "pandas.core.arrays.base.ExtensionArraySupportsAnyAll": "pandas.core.arrays.base.ExtensionArraySupportsAnyAll",
        "pandas.core.arrays.arrow.array.cast_for_truediv": "pandas.core.arrays.arrow.array.cast_for_truediv",
        "pandas.core.arrays.arrow.array.floordiv_compat": "pandas.core.arrays.arrow.array.floordiv_compat",
        "pandas.core.arrays.arrow.array.get_unit_from_pa_dtype": "pandas.core.arrays.arrow.array.get_unit_from_pa_dtype",
        "pandas.core.dtypes.cast.infer_dtype_from_scalar": "pandas.core.internals.managers.infer_dtype_from_scalar",
        "pandas.core.missing.check_value_size": "pandas.core.missing.check_value_size",
        "pandas.core.missing.clean_fill_method": "pandas.core.generic.clean_fill_method",
        "pandas.core.missing.clean_interp_method": "pandas.core.missing.clean_interp_method",
        "pandas.core.missing.clean_reindex_fill_method": "pandas.core.indexes.base.clean_reindex_fill_method",
        "pandas.core.missing.find_valid_index": "pandas.core.generic.find_valid_index",
        "pandas.core.missing.get_fill_func": "pandas.core.missing.get_fill_func",
        "pandas.core.missing.get_interp_index": "pandas.core.missing.get_interp_index",
        "pandas.compat._optional.import_optional_dependency": "pandas.io.xml.import_optional_dependency",
        "pandas.core.missing.infer_limit_direction": "pandas.core.missing.infer_limit_direction",
        "pandas.core.missing.interpolate_2d_inplace": "pandas.core.missing.interpolate_2d_inplace",
        "pandas.core.dtypes.common.is_numeric_v_string_like": "pandas.core.dtypes.common.is_numeric_v_string_like",
        "pandas.core.dtypes.missing.is_valid_na_for_dtype": "pandas.core.internals.concat.is_valid_na_for_dtype",
        "pandas.core.missing.mask_missing": "pandas.core.missing.mask_missing",
        "pandas.core.missing.pad_or_backfill_inplace": "pandas.core.missing.pad_or_backfill_inplace",
        "pandas.core.missing.validate_limit_area": "pandas.core.missing.validate_limit_area",
        "pandas.core.missing.validate_limit_direction": "pandas.core.missing.validate_limit_direction",
        "pandas._libs.tslibs.timezones.get_timezone": "pandas._libs.tslibs.timezones.get_timezone",
        "pandas._libs.tslibs.timezones.infer_tzinfo": "pandas._libs.tslibs.timezones.infer_tzinfo",
        "pandas._libs.tslibs.timezones.is_fixed_offset": "pandas._libs.tslibs.timezones.is_fixed_offset",
        "pandas._libs.tslibs.timezones.is_utc": "pandas._libs.tslibs.timezones.is_utc",
        "pandas._libs.tslibs.timezones.maybe_get_tz": "pandas._libs.tslibs.timezones.maybe_get_tz",
        "pandas._libs.tslibs.timezones.tz_compare": "pandas.core.indexes.base.tz_compare",
        "pandas._libs.tslibs.timezones.tz_standardize": "pandas._libs.tslibs.timezones.tz_standardize",
        "pandas._libs.tslibs.offsets.to_offset": "pandas.core.window.rolling.to_offset",
        "pandas.core.arrays.arrow.array.to_pyarrow_type": "pandas.core.arrays.arrow.array.to_pyarrow_type",
        "pandas.core.arrays.arrow.array.transpose_homogeneous_pyarrow": "pandas.core.arrays.arrow.array.transpose_homogeneous_pyarrow",
        "pandas.core.indexers.utils.unpack_tuple_and_ellipses": "pandas.core.indexers.utils.unpack_tuple_and_ellipses",
        "pandas.util._validators.validate_fillna_kwargs": "pandas.core.generic.validate_fillna_kwargs",
        "pandas.errors.AbstractMethodError": "pandas.io.xml.AbstractMethodError",
        "pandas.util._decorators.Appender": "pandas.io.stata.Appender",
        "pandas.util._decorators.Substitution": "pandas.core.series.Substitution",
        "pandas.core.dtypes.cast.maybe_cast_pointwise_result": "pandas.core.series.maybe_cast_pointwise_result",
        "pandas.core.sorting.nargminmax": "pandas.core.sorting.nargminmax",
        "pandas.core.sorting.nargsort": "pandas.core.sorting.nargsort",
        "pandas.compat.set_function_name": "pandas.compat.set_function_name",
        "pandas.util._validators.validate_bool_kwarg": "pandas.core.series.validate_bool_kwarg",
        "pandas.util._validators.validate_insert_loc": "pandas.core.arrays.sparse.array.validate_insert_loc",
        "pandas.core.arrays.boolean.coerce_to_array": "pandas.core.arrays.boolean.coerce_to_array",
        "pandas.core.ops.array_ops.arithmetic_op": "pandas.core.ops.array_ops.arithmetic_op",
        "pandas._libs.tslibs.offsets.BaseOffset": "pandas.tseries.offsets.BaseOffset",
        "pandas.core.ops.array_ops.comp_method_OBJECT_ARRAY": "pandas.core.ops.comp_method_OBJECT_ARRAY",
        "pandas.core.ops.array_ops.comparison_op": "pandas.core.ops.comparison_op",
        "pandas.core.computation.expressions.evaluate": "pandas.core.computation.expressions.evaluate",
        "pandas.core.computation.expressions.get_test_result": "pandas.core.computation.expressions.get_test_result",
        "pandas.core.computation.expressions.set_numexpr_threads": "pandas.core.computation.expressions.set_numexpr_threads",
        "pandas.core.computation.expressions.set_test_mode": "pandas.core.computation.expressions.set_test_mode",
        "pandas.core.computation.expressions.set_use_numexpr": "pandas.core.computation.expressions.set_use_numexpr",
        "pandas.core.computation.expressions.where": "pandas.core.computation.expressions.where",
        "pandas.core.ops.array_ops.fill_binop": "pandas.core.ops.fill_binop",
        "pandas.core.dtypes.cast.find_common_type": "pandas.core.reshape.merge.find_common_type",
        "pandas.core.ops.array_ops.get_array_op": "pandas.core.ops.get_array_op",
        "pandas._libs.tslibs.dtypes.get_supported_reso": "pandas._libs.tslibs.get_supported_reso",
        "pandas._libs.tslibs.np_datetime.py_get_unit_from_dtype": "pandas.core.tools.datetimes.get_unit_from_dtype",
        "pandas.core.ops.invalid.invalid_comparison": "pandas.core.arrays.masked.invalid_comparison",
        "pandas._libs.tslibs.dtypes.is_supported_unit": "pandas.core.tools.datetimes.is_supported_unit",
        "pandas._libs.tslibs.np_datetime.is_unitless": "pandas._libs.tslibs.np_datetime.is_unitless",
        "pandas._libs.ops.maybe_convert_bool": "pandas._libs.ops.maybe_convert_bool",
        "pandas._libs.ops.scalar_binop": "pandas._libs.ops.scalar_binop",
        "pandas._libs.ops.scalar_compare": "pandas._libs.ops.scalar_compare",
        "pandas._libs.ops.vec_binop": "pandas._libs.ops.vec_binop",
        "pandas._libs.ops.vec_compare": "pandas._libs.ops.vec_compare",
        "pandas.core.ops.array_ops.logical_op": "pandas.core.ops.logical_op",
        "pandas.core.ops.array_ops.maybe_prepare_scalar_for_op": "pandas.core.ops.maybe_prepare_scalar_for_op",
        "pandas.core.ops.missing.dispatch_fill_zeros": "pandas.core.ops.missing.dispatch_fill_zeros",
        "pandas.core.ops.missing.mask_zero_div_zero": "pandas.core.ops.missing.mask_zero_div_zero",
        "pandas.core.ops.array_ops.na_logical_op": "pandas.core.ops.array_ops.na_logical_op",
        "pandas._libs.tslibs.dtypes.npy_unit_to_abbrev": "pandas._libs.tslibs.npy_unit_to_abbrev",
        "pandas.core.ops.dispatch.should_extension_dispatch": "pandas.core.ops.dispatch.should_extension_dispatch",
        "pandas.core.ops.common.get_op_result_name": "pandas.core.indexes.base.get_op_result_name",
        "pandas.core.ops.docstrings.make_flex_doc": "pandas.core.ops.make_flex_doc",
        "pandas.core.ops.invalid.make_invalid_op": "pandas.core.indexes.multi.make_invalid_op",
        "pandas.core.ops.mask_ops.kleene_and": "pandas.core.ops.mask_ops.kleene_and",
        "pandas.core.ops.mask_ops.kleene_or": "pandas.core.ops.mask_ops.kleene_or",
        "pandas.core.ops.mask_ops.kleene_xor": "pandas.core.ops.mask_ops.kleene_xor",
        "pandas.core.ops.mask_ops.raise_for_nan": "pandas.core.ops.mask_ops.raise_for_nan",
        "pandas.core.arrays.categorical.CategoricalAccessor": "pandas.core.series.CategoricalAccessor",
        "pandas._libs.arrays.NDArrayBacked": "pandas.compat.pickle_compat.NDArrayBacked",
        "pandas.core.arrays._mixins.NDArrayBackedExtensionArray": "pandas.core.reshape.merge.NDArrayBackedExtensionArray",
        "pandas.core.base.NoNewAttributesMixin": "pandas.core.strings.accessor.NoNewAttributesMixin",
        "pandas.core.strings.object_array.ObjectStringArrayMixin": "pandas.core.strings.object_array.ObjectStringArrayMixin",
        "pandas.core.base.PandasObject": "pandas.io.sql.PandasObject",
        "pandas.core.dtypes.cast.coerce_indexer_dtype": "pandas.core.indexes.multi.coerce_indexer_dtype",
        "pandas.io.formats.console.get_console_size": "pandas.io.formats.console.get_console_size",
        "pandas.io.formats.console.in_interactive_session": "pandas.io.formats.console.in_interactive_session",
        "pandas.io.formats.console.in_ipython_frontend": "pandas.io.formats.console.in_ipython_frontend",
        "pandas.core.arrays.categorical.contains": "pandas.core.indexes.category.contains",
        "pandas.core.arrays.categorical.factorize_from_iterable": "pandas.core.reshape.encoding.factorize_from_iterable",
        "pandas.core.arrays.categorical.factorize_from_iterables": "pandas.core.reshape.concat.factorize_from_iterables",
        "pandas.core.arrays._mixins.ravel_compat": "pandas.core.arrays.datetimelike.ravel_compat",
        "pandas.core.arrays.categorical.recode_for_categories": "pandas.core.indexes.multi.recode_for_categories",
        "pandas.core.construction.sanitize_array": "pandas.core.series.sanitize_array",
        "pandas.core.dtypes.generic.ABCCategorical": "pandas.core.dtypes.generic.ABCCategorical",
        "pandas.core.arrays.datetimelike.DatelikeOps": "pandas.core.arrays.datetimelike.DatelikeOps",
        "pandas.core.arrays.datetimelike.DatetimeLikeArrayMixin": "pandas.core.indexes.datetimelike.DatetimeLikeArrayMixin",
        "pandas._libs.tslibs.period.IncompatibleFrequency": "pandas.core.resample.IncompatibleFrequency",
        "pandas.errors.InvalidComparison": "pandas.errors.InvalidComparison",
        "pandas.errors.PerformanceWarning": "pandas.io.pytables.PerformanceWarning",
        "pandas._libs.tslibs.dtypes.Resolution": "pandas.core.indexes.timedeltas.Resolution",
        "pandas._libs.tslibs.fields.RoundTo": "pandas._libs.tslibs.timestamps.RoundTo",
        "pandas._libs.tslibs.offsets.Tick": "pandas.tseries.offsets.Tick",
        "pandas.core.arrays.datetimelike.TimelikeOps": "pandas.core.arrays.datetimelike.TimelikeOps",
        "pandas._libs.tslibs.np_datetime.astype_overflowsafe": "pandas.core.tools.datetimes.astype_overflowsafe",
        "pandas.core.indexers.utils.check_setitem_lengths": "pandas.core.internals.blocks.check_setitem_lengths",
        "pandas._libs.tslibs.np_datetime.compare_mismatched_resolutions": "pandas._libs.tslibs.np_datetime.compare_mismatched_resolutions",
        "pandas._libs.tslibs.timedeltas.delta_to_nanoseconds": "pandas._libs.tslibs.timedeltas.delta_to_nanoseconds",
        "pandas.core.arrays.datetimelike.dtype_to_unit": "pandas.core.window.rolling.dtype_to_unit",
        "pandas.core.arrays.datetimelike.ensure_arraylike_for_datetimelike": "pandas.core.arrays.datetimelike.ensure_arraylike_for_datetimelike",
        "pandas._libs.tslibs.offsets.Day": "pandas.tseries.offsets.Day",
        "pandas._libs.tslibs.fields.build_field_sarray": "pandas._libs.tslibs.fields.build_field_sarray",
        "pandas.tseries.frequencies.get_period_alias": "pandas.core.arrays.datetimes.get_period_alias",
        "pandas._libs.tslibs.parsing.get_rule_month": "pandas._libs.tslibs.parsing.get_rule_month",
        "pandas.tseries.frequencies.infer_freq": "pandas.infer_freq",
        "pandas.tseries.frequencies.is_subperiod": "pandas.core.resample.is_subperiod",
        "pandas.tseries.frequencies.is_superperiod": "pandas.core.resample.is_superperiod",
        "pandas._libs.tslibs.fields.month_position_check": "pandas._libs.tslibs.fields.month_position_check",
        "pandas._libs.tslibs.dtypes.periods_per_day": "pandas.core.indexes.datetimes.periods_per_day",
        "pandas._libs.tslibs.vectorized.tz_convert_from_utc": "pandas._libs.tslibs.vectorized.tz_convert_from_utc",
        "pandas._libs.tslibs.timestamps.integer_op_not_supported": "pandas._libs.tslibs.timestamps.integer_op_not_supported",
        "pandas._libs.tslibs.vectorized.ints_to_pydatetime": "pandas._libs.tslibs.vectorized.ints_to_pydatetime",
        "pandas._libs.tslibs.timedeltas.ints_to_pytimedelta": "pandas._libs.tslibs.timedeltas.ints_to_pytimedelta",
        "pandas.core.dtypes.common.is_all_strings": "pandas.core.dtypes.common.is_all_strings",
        "pandas.core.arrays.datetimelike.maybe_infer_freq": "pandas.core.arrays.datetimelike.maybe_infer_freq",
        "pandas.core.nanops.bottleneck_switch": "pandas.core.nanops.bottleneck_switch",
        "pandas.core.nanops.disallow": "pandas.core.nanops.disallow",
        "pandas.core.nanops.get_corr_func": "pandas.core.nanops.get_corr_func",
        "pandas.core.nanops.maybe_operate_rowwise": "pandas.core.nanops.maybe_operate_rowwise",
        "pandas.core.nanops.na_accum_func": "pandas.core.nanops.na_accum_func",
        "pandas.core.nanops.nanall": "pandas.core.nanops.nanall",
        "pandas.core.nanops.nanany": "pandas.core.nanops.nanany",
        "pandas.core.nanops.nanargmax": "pandas.core.nanops.nanargmax",
        "pandas.core.nanops.nanargmin": "pandas.core.nanops.nanargmin",
        "pandas.core.nanops.nancorr": "pandas.core.nanops.nancorr",
        "pandas.core.nanops.nancov": "pandas.core.nanops.nancov",
        "pandas.core.nanops.nankurt": "pandas.core.nanops.nankurt",
        "pandas.core.nanops._nanminmax.<locals>.reduction": "pandas.core.nanops.nanmin",
        "pandas.core.nanops.nanmean": "pandas.core.nanops.nanmean",
        "pandas.core.nanops.nanmedian": "pandas.core.nanops.nanmedian",
        "pandas.core.nanops.nanprod": "pandas.core.nanops.nanprod",
        "pandas.core.nanops.nansem": "pandas.core.nanops.nansem",
        "pandas.core.nanops.nanskew": "pandas.core.nanops.nanskew",
        "pandas.core.nanops.nanstd": "pandas.core.nanops.nanstd",
        "pandas.core.nanops.nansum": "pandas.core.nanops.nansum",
        "pandas.core.nanops.nanvar": "pandas.core.nanops.nanvar",
        "pandas.core.nanops.set_use_bottleneck": "pandas.core.nanops.set_use_bottleneck",
        "pandas._libs.tslibs.fields.round_nsint64": "pandas._libs.tslibs.timestamps.round_nsint64",
        "pandas.core.arrays.datetimelike.validate_inferred_freq": "pandas.core.arrays.datetimelike.validate_inferred_freq",
        "pandas.core.arrays.datetimelike.validate_periods": "pandas.core.arrays.datetimelike.validate_periods",
        "pandas._libs.tslibs.dtypes.abbrev_to_npy_unit": "pandas.core.dtypes.dtypes.abbrev_to_npy_unit",
        "pandas._libs.tslibs.fields.build_isocalendar_sarray": "pandas._libs.tslibs.fields.build_isocalendar_sarray",
        "pandas._libs.tslibs.fields.get_date_field": "pandas._libs.tslibs.fields.get_date_field",
        "pandas._libs.tslibs.fields.get_date_name_field": "pandas._libs.tslibs.timestamps.get_date_name_field",
        "pandas._libs.tslibs.fields.get_start_end_field": "pandas._libs.tslibs.timestamps.get_start_end_field",
        "pandas._libs.tslibs.fields.get_timedelta_days": "pandas.core.arrays.timedeltas.get_timedelta_days",
        "pandas._libs.tslibs.fields.get_timedelta_field": "pandas.core.arrays.timedeltas.get_timedelta_field",
        "pandas._libs.tslibs.fields.isleapyear_arr": "pandas.core.arrays.period.isleapyear_arr",
        "pandas._config.localization.set_locale": "pandas._libs.tslibs.fields.set_locale",
        "pandas.core.arrays._ranges.generate_regular_range": "pandas.core.arrays.timedeltas.generate_regular_range",
        "pandas._libs.tslibs.vectorized.get_resolution": "pandas._libs.tslibs.vectorized.get_resolution",
        "pandas._libs.tslibs.vectorized.is_date_array_normalized": "pandas._libs.tslibs.vectorized.is_date_array_normalized",
        "pandas.core.arrays.datetimes.maybe_convert_dtype": "pandas.core.tools.datetimes.maybe_convert_dtype",
        "pandas._libs.tslibs.vectorized.normalize_i8_timestamps": "pandas._libs.tslibs.vectorized.normalize_i8_timestamps",
        "pandas.core.arrays.datetimes.objects_to_datetime64ns": "pandas.core.tools.datetimes.objects_to_datetime64ns",
        "pandas._libs.tslib.array_to_datetime": "pandas._libs.tslib.array_to_datetime",
        "pandas._libs.tslib.array_to_datetime_with_tz": "pandas._libs.tslib.array_to_datetime_with_tz",
        "pandas._libs.tslib.array_with_unit_to_datetime": "pandas._libs.tslib.array_with_unit_to_datetime",
        "pandas._libs.tslib.first_non_null": "pandas._libs.tslib.first_non_null",
        "pandas._libs.tslib.format_array_from_datetime": "pandas._libs.tslib.format_array_from_datetime",
        "pandas.core.arrays.datetimes.tz_to_dtype": "pandas.core.tools.datetimes.tz_to_dtype",
        "pandas._libs.tslibs.tzconversion.Localizer": "pandas._libs.tslibs.tzconversion.Localizer",
        "pandas._libs.tslibs.tzconversion.tz_convert_from_utc_single": "pandas._libs.tslibs.tz_convert_from_utc_single",
        "pandas._libs.tslibs.tzconversion.tz_localize_to_utc": "pandas._libs.tslibs.tzconversion.tz_localize_to_utc",
        "pandas.util._validators.validate_inclusive": "pandas.core.generic.validate_inclusive",
        "pandas.core.arrays.floating.FloatingDtype": "pandas.core.arrays.string_.FloatingDtype",
        "pandas.core.arrays.numeric.NumericArray": "pandas.core.arrays.numeric.NumericArray",
        "pandas.core.arrays.numeric.NumericDtype": "pandas.core.arrays.string_arrow.NumericDtype",
        "pandas.core.arrays.integer.IntegerDtype": "pandas.io.stata.IntegerDtype",
        "pandas.core.dtypes.generic.ABCDatetimeIndex": "pandas.core.indexes.multi.ABCDatetimeIndex",
        "pandas.core.dtypes.generic.ABCIntervalIndex": "pandas.core.dtypes.generic.ABCIntervalIndex",
        "pandas.core.dtypes.generic.ABCPeriodIndex": "pandas.core.indexes.base.ABCPeriodIndex",
        "pandas.errors.IntCastingNaNError": "pandas.errors.IntCastingNaNError",
        "pandas._libs.interval.IntervalMixin": "pandas.core.indexes.interval.IntervalMixin",
        "pandas.errors.LossySetitemError": "pandas.errors.LossySetitemError",
        "pandas._libs.interval.intervals_to_interval_bounds": "pandas.core.arrays.interval.intervals_to_interval_bounds",
        "pandas.core.dtypes.cast.maybe_upcast_numeric_to_64bit": "pandas.core.indexes.interval.maybe_upcast_numeric_to_64bit",
        "pandas.core.dtypes.missing.array_equivalent": "pandas.io.pytables.array_equivalent",
        "pandas.core.arrays.masked.transpose_homogeneous_masked_arrays": "pandas.core.arrays.masked.transpose_homogeneous_masked_arrays",
        "pandas.core.dtypes.astype.astype_array": "pandas.io.parsers.base_parser.astype_array",
        "pandas._libs.tslibs.dtypes.FreqGroup": "pandas._libs.tslibs.dtypes.FreqGroup",
        "pandas._libs.tslibs.vectorized.dt64arr_to_periodarr": "pandas._libs.tslibs.vectorized.dt64arr_to_periodarr",
        "pandas._libs.tslibs.offsets.delta_to_tick": "pandas._libs.tslibs.offsets.delta_to_tick",
        "pandas.core.arrays.period.dt64arr_to_periodarr": "pandas.core.arrays.period.dt64arr_to_periodarr",
        "pandas._libs.tslibs.period.get_period_field_arr": "pandas._libs.tslibs.period.get_period_field_arr",
        "pandas._libs.tslibs.offsets.BusinessDay": "pandas.tseries.offsets.BusinessDay",
        "pandas._libs.tslibs.period.PeriodMixin": "pandas._libs.tslibs.period.PeriodMixin",
        "pandas._libs.tslibs.period.extract_freq": "pandas._libs.tslibs.period.extract_freq",
        "pandas._libs.tslibs.period.extract_ordinals": "pandas._libs.tslibs.period.extract_ordinals",
        "pandas._libs.tslibs.period.freq_to_dtype_code": "pandas._libs.tslibs.period.freq_to_dtype_code",
        "pandas._libs.tslibs.period.from_ordinals": "pandas._libs.tslibs.period.from_ordinals",
        "pandas._libs.tslibs.parsing.parse_datetime_string_with_reso": "pandas._libs.tslibs.parsing.parse_datetime_string_with_reso",
        "pandas._libs.tslibs.period.period_array_strftime": "pandas._libs.tslibs.period.period_array_strftime",
        "pandas._libs.tslibs.period.period_asfreq": "pandas._libs.tslibs.period.period_asfreq",
        "pandas._libs.tslibs.period.period_asfreq_arr": "pandas.core.arrays.period.period_asfreq_arr",
        "pandas._libs.tslibs.period.period_ordinal": "pandas._libs.tslibs.period.period_ordinal",
        "pandas._libs.tslibs.period.periodarr_to_dt64arr": "pandas._libs.tslibs.period.periodarr_to_dt64arr",
        "pandas._libs.tslibs.period.validate_end_alias": "pandas._libs.tslibs.period.validate_end_alias",
        "pandas._libs.tslibs.parsing.DateParseError": "pandas.core.tools.datetimes.DateParseError",
        "pandas._libs.tslibs.strptime.array_strptime": "pandas.core.tools.datetimes.array_strptime",
        "pandas._libs.tslibs.parsing.concat_date_cols": "pandas._libs.tslibs.parsing.concat_date_cols",
        "pandas._libs.tslibs.parsing.guess_datetime_format": "pandas.core.tools.datetimes.guess_datetime_format",
        "pandas._libs.tslibs.parsing.py_parse_datetime_string": "pandas._libs.tslibs.parsing.py_parse_datetime_string",
        "pandas._libs.tslibs.parsing.quarter_to_myear": "pandas._libs.tslibs.parsing.quarter_to_myear",
        "pandas._libs.tslibs.parsing.try_parse_dates": "pandas._libs.tslibs.parsing.try_parse_dates",
        "pandas._libs.tslibs.parsing.try_parse_year_month_day": "pandas._libs.tslibs.parsing.try_parse_year_month_day",
        "pandas.core.arrays.period.period_array": "pandas.core.indexes.period.period_array",
        "pandas.core.arrays.period.raise_on_incompatible": "pandas.core.indexes.period.raise_on_incompatible",
        "pandas.core.arrays.period.validate_dtype_freq": "pandas.core.indexes.period.validate_dtype_freq",
        "pandas._libs.sparse.BlockIndex": "pandas._libs.sparse.BlockIndex",
        "pandas._libs.sparse.IntIndex": "pandas.core.reshape.encoding.IntIndex",
        "pandas.core.arrays.sparse.accessor.SparseAccessor": "pandas.core.series.SparseAccessor",
        "pandas.core.arrays.sparse.accessor.SparseFrameAccessor": "pandas.core.frame.SparseFrameAccessor",
        "pandas.core.arrays.sparse.accessor.BaseAccessor": "pandas.core.arrays.sparse.accessor.BaseAccessor",
        "pandas._libs.sparse.SparseIndex": "pandas._libs.sparse.SparseIndex",
        "pandas.core.dtypes.cast.construct_1d_arraylike_from_scalar": "pandas.core.internals.construction.construct_1d_arraylike_from_scalar",
        "pandas.core.arrays.sparse.array.make_sparse_index": "pandas.core.arrays.sparse.make_sparse_index",
        "pandas.core.dtypes.cast.maybe_box_datetimelike": "pandas.core.indexes.interval.maybe_box_datetimelike",
        "pandas.io.formats.printing.PrettyDict": "pandas.core.indexes.base.PrettyDict",
        "pandas.io.formats.printing.adjoin": "pandas.io.pytables.adjoin",
        "pandas.io.formats.printing.default_pprint": "pandas.core.indexes.base.default_pprint",
        "pandas.io.formats.printing.enable_data_resource_formatter": "pandas.io.formats.printing.enable_data_resource_formatter",
        "pandas.io.formats.printing.format_object_summary": "pandas.core.indexes.base.format_object_summary",
        "pandas.io.formats.printing.justify": "pandas.io.formats.printing.justify",
        "pandas.io.formats.printing.pprint_thing": "pandas.io.pytables.pprint_thing",
        "pandas.io.formats.printing.pprint_thing_encoded": "pandas.core.computation.pytables.pprint_thing_encoded",
        "pandas._libs.sparse.get_blocks": "pandas._libs.sparse.get_blocks",
        "pandas._libs.sparse.make_mask_object_ndarray": "pandas._libs.sparse.make_mask_object_ndarray",
        "pandas._libs.sparse.sparse_add_float64": "pandas._libs.sparse.sparse_add_float64",
        "pandas._libs.sparse.sparse_add_int64": "pandas._libs.sparse.sparse_add_int64",
        "pandas._libs.sparse.sparse_and_int64": "pandas._libs.sparse.sparse_and_int64",
        "pandas._libs.sparse.sparse_and_uint8": "pandas._libs.sparse.sparse_and_uint8",
        "pandas._libs.sparse.sparse_div_float64": "pandas._libs.sparse.sparse_div_float64",
        "pandas._libs.sparse.sparse_div_int64": "pandas._libs.sparse.sparse_div_int64",
        "pandas._libs.sparse.sparse_eq_float64": "pandas._libs.sparse.sparse_eq_float64",
        "pandas._libs.sparse.sparse_eq_int64": "pandas._libs.sparse.sparse_eq_int64",
        "pandas._libs.sparse.sparse_floordiv_float64": "pandas._libs.sparse.sparse_floordiv_float64",
        "pandas._libs.sparse.sparse_floordiv_int64": "pandas._libs.sparse.sparse_floordiv_int64",
        "pandas._libs.sparse.sparse_ge_float64": "pandas._libs.sparse.sparse_ge_float64",
        "pandas._libs.sparse.sparse_ge_int64": "pandas._libs.sparse.sparse_ge_int64",
        "pandas._libs.sparse.sparse_gt_float64": "pandas._libs.sparse.sparse_gt_float64",
        "pandas._libs.sparse.sparse_gt_int64": "pandas._libs.sparse.sparse_gt_int64",
        "pandas._libs.sparse.sparse_le_float64": "pandas._libs.sparse.sparse_le_float64",
        "pandas._libs.sparse.sparse_le_int64": "pandas._libs.sparse.sparse_le_int64",
        "pandas._libs.sparse.sparse_lt_float64": "pandas._libs.sparse.sparse_lt_float64",
        "pandas._libs.sparse.sparse_lt_int64": "pandas._libs.sparse.sparse_lt_int64",
        "pandas._libs.sparse.sparse_mod_float64": "pandas._libs.sparse.sparse_mod_float64",
        "pandas._libs.sparse.sparse_mod_int64": "pandas._libs.sparse.sparse_mod_int64",
        "pandas._libs.sparse.sparse_mul_float64": "pandas._libs.sparse.sparse_mul_float64",
        "pandas._libs.sparse.sparse_mul_int64": "pandas._libs.sparse.sparse_mul_int64",
        "pandas._libs.sparse.sparse_ne_float64": "pandas._libs.sparse.sparse_ne_float64",
        "pandas._libs.sparse.sparse_ne_int64": "pandas._libs.sparse.sparse_ne_int64",
        "pandas._libs.sparse.sparse_or_int64": "pandas._libs.sparse.sparse_or_int64",
        "pandas._libs.sparse.sparse_or_uint8": "pandas._libs.sparse.sparse_or_uint8",
        "pandas._libs.sparse.sparse_pow_float64": "pandas._libs.sparse.sparse_pow_float64",
        "pandas._libs.sparse.sparse_pow_int64": "pandas._libs.sparse.sparse_pow_int64",
        "pandas._libs.sparse.sparse_sub_float64": "pandas._libs.sparse.sparse_sub_float64",
        "pandas._libs.sparse.sparse_sub_int64": "pandas._libs.sparse.sparse_sub_int64",
        "pandas._libs.sparse.sparse_truediv_float64": "pandas._libs.sparse.sparse_truediv_float64",
        "pandas._libs.sparse.sparse_truediv_int64": "pandas._libs.sparse.sparse_truediv_int64",
        "pandas._libs.sparse.sparse_xor_int64": "pandas._libs.sparse.sparse_xor_int64",
        "pandas._libs.sparse.sparse_xor_uint8": "pandas._libs.sparse.sparse_xor_uint8",
        "pandas.core.arrays.string_.BaseStringArray": "pandas.core.arrays.string_arrow.BaseStringArray",
        "pandas.core.dtypes.base.StorageExtensionDtype": "pandas.core.dtypes.dtypes.StorageExtensionDtype",
        "pandas.core.arrays.string_arrow.ArrowStringArrayNumpySemantics": "pandas.core.groupby.groupby.ArrowStringArrayNumpySemantics",
        "pandas.core.arrays.arrow._arrow_utils.fallback_performancewarning": "pandas.core.arrays.string_arrow.fallback_performancewarning",
        "pandas._libs.tslibs.timedeltas.array_to_timedelta64": "pandas.core.dtypes.cast.array_to_timedelta64",
        "pandas._libs.tslibs.timedeltas.floordiv_object_array": "pandas._libs.tslibs.timedeltas.floordiv_object_array",
        "pandas._libs.tslibs.timedeltas.parse_timedelta_unit": "pandas.core.tools.timedeltas.parse_timedelta_unit",
        "pandas._libs.tslibs.dtypes.periods_per_second": "pandas._libs.tslibs.periods_per_second",
        "pandas._libs.tslibs.conversion.precision_from_unit": "pandas.core.tools.datetimes.precision_from_unit",
        "pandas.core.arrays.timedeltas.sequence_to_td64ns": "pandas.core.tools.timedeltas.sequence_to_td64ns",
        "pandas._libs.tslibs.timedeltas.truediv_object_array": "pandas._libs.tslibs.timedeltas.truediv_object_array",
        "pandas._libs.tslibs.base.ABCTimestamp": "pandas._libs.tslibs.base.ABCTimestamp",
        "pandas._libs.tslibs.ccalendar.get_day_of_year": "pandas._libs.tslibs.ccalendar.get_day_of_year",
        "pandas._libs.tslibs.ccalendar.get_days_in_month": "pandas._libs.tslibs.ccalendar.get_days_in_month",
        "pandas._libs.tslibs.ccalendar.get_firstbday": "pandas._libs.tslibs.ccalendar.get_firstbday",
        "pandas._libs.tslibs.ccalendar.get_iso_calendar": "pandas._libs.tslibs.ccalendar.get_iso_calendar",
        "pandas._libs.tslibs.ccalendar.get_lastbday": "pandas._libs.tslibs.ccalendar.get_lastbday",
        "pandas._libs.tslibs.ccalendar.get_week_of_year": "pandas._libs.tslibs.ccalendar.get_week_of_year",
        "pandas._libs.tslibs.conversion.localize_pydatetime": "pandas._libs.tslibs.localize_pydatetime",
        "pandas._libs.tslibs.dtypes.NpyDatetimeUnit": "pandas._libs.tslibs.dtypes.NpyDatetimeUnit",
        "pandas._libs.tslibs.dtypes.PeriodDtypeBase": "pandas.core.dtypes.dtypes.PeriodDtypeBase",
        "pandas._libs.tslibs.np_datetime.py_td64_to_tdstruct": "pandas._libs.tslibs.np_datetime.py_td64_to_tdstruct",
        "pandas._libs.tslibs.offsets.ApplyTypeError": "pandas._libs.tslibs.offsets.ApplyTypeError",
        "pandas._libs.tslibs.offsets.BusinessMonthBegin": "pandas.tseries.offsets.BusinessMonthBegin",
        "pandas._libs.tslibs.offsets.BusinessMonthEnd": "pandas.tseries.offsets.BusinessMonthEnd",
        "pandas._libs.tslibs.offsets.BQuarterBegin": "pandas.tseries.offsets.BQuarterBegin",
        "pandas._libs.tslibs.offsets.BQuarterEnd": "pandas.tseries.offsets.BQuarterEnd",
        "pandas._libs.tslibs.offsets.BYearBegin": "pandas.tseries.offsets.BYearBegin",
        "pandas._libs.tslibs.offsets.BYearEnd": "pandas.tseries.offsets.BYearEnd",
        "pandas._libs.tslibs.offsets.BusinessHour": "pandas.tseries.offsets.BusinessHour",
        "pandas._libs.tslibs.offsets.BusinessMixin": "pandas._libs.tslibs.offsets.BusinessMixin",
        "pandas._libs.tslibs.offsets.CustomBusinessMonthBegin": "pandas.tseries.offsets.CustomBusinessMonthBegin",
        "pandas._libs.tslibs.offsets.CustomBusinessMonthEnd": "pandas.tseries.offsets.CustomBusinessMonthEnd",
        "pandas._libs.tslibs.offsets.CustomBusinessDay": "pandas.tseries.offsets.CustomBusinessDay",
        "pandas._libs.tslibs.offsets.CustomBusinessHour": "pandas.tseries.offsets.CustomBusinessHour",
        "pandas._libs.tslibs.offsets.Easter": "pandas.tseries.offsets.Easter",
        "pandas._libs.tslibs.offsets.FY5253": "pandas.tseries.offsets.FY5253",
        "pandas._libs.tslibs.offsets.FY5253Mixin": "pandas._libs.tslibs.offsets.FY5253Mixin",
        "pandas._libs.tslibs.offsets.FY5253Quarter": "pandas.tseries.offsets.FY5253Quarter",
        "pandas._libs.tslibs.offsets.Hour": "pandas.tseries.offsets.Hour",
        "pandas._libs.tslibs.offsets.LastWeekOfMonth": "pandas.tseries.offsets.LastWeekOfMonth",
        "pandas._libs.tslibs.offsets.Micro": "pandas.tseries.offsets.Micro",
        "pandas._libs.tslibs.offsets.Milli": "pandas.tseries.offsets.Milli",
        "pandas._libs.tslibs.offsets.Minute": "pandas.tseries.offsets.Minute",
        "pandas._libs.tslibs.offsets.MonthBegin": "pandas.tseries.offsets.MonthBegin",
        "pandas._libs.tslibs.offsets.MonthEnd": "pandas.tseries.offsets.MonthEnd",
        "pandas._libs.tslibs.offsets.MonthOffset": "pandas._libs.tslibs.offsets.MonthOffset",
        "pandas._libs.tslibs.offsets.Nano": "pandas.tseries.offsets.Nano",
        "pandas._libs.tslibs.offsets.OffsetMeta": "pandas._libs.tslibs.offsets.OffsetMeta",
        "pandas._libs.tslibs.offsets.QuarterBegin": "pandas.tseries.offsets.QuarterBegin",
        "pandas._libs.tslibs.offsets.QuarterEnd": "pandas.tseries.offsets.QuarterEnd",
        "pandas._libs.tslibs.offsets.QuarterOffset": "pandas._libs.tslibs.offsets.QuarterOffset",
        "pandas._libs.tslibs.offsets.RelativeDeltaOffset": "pandas._libs.tslibs.offsets.RelativeDeltaOffset",
        "pandas._libs.tslibs.offsets.Second": "pandas.tseries.offsets.Second",
        "pandas._libs.tslibs.offsets.SemiMonthBegin": "pandas.tseries.offsets.SemiMonthBegin",
        "pandas._libs.tslibs.offsets.SemiMonthEnd": "pandas.tseries.offsets.SemiMonthEnd",
        "pandas._libs.tslibs.offsets.SemiMonthOffset": "pandas._libs.tslibs.offsets.SemiMonthOffset",
        "pandas._libs.tslibs.offsets.SingleConstructorOffset": "pandas._libs.tslibs.offsets.SingleConstructorOffset",
        "pandas._libs.tslibs.offsets.Week": "pandas.tseries.offsets.Week",
        "pandas._libs.tslibs.offsets.WeekOfMonth": "pandas.tseries.offsets.WeekOfMonth",
        "pandas._libs.tslibs.offsets.WeekOfMonthMixin": "pandas._libs.tslibs.offsets.WeekOfMonthMixin",
        "pandas._libs.tslibs.offsets.YearBegin": "pandas.tseries.offsets.YearBegin",
        "pandas._libs.tslibs.offsets.YearEnd": "pandas.tseries.offsets.YearEnd",
        "pandas._libs.tslibs.offsets.YearOffset": "pandas._libs.tslibs.offsets.YearOffset",
        "pandas._libs.tslibs.offsets.apply_array_wraps": "pandas._libs.tslibs.offsets.apply_array_wraps",
        "pandas._libs.tslibs.offsets.apply_wrapper_core": "pandas._libs.tslibs.offsets.apply_wrapper_core",
        "pandas._libs.tslibs.offsets.apply_wraps": "pandas._libs.tslibs.offsets.apply_wraps",
        "pandas._libs.tslibs.offsets.roll_convention": "pandas._libs.tslibs.offsets.roll_convention",
        "pandas._libs.tslibs.offsets.roll_qtrday": "pandas._libs.tslibs.offsets.roll_qtrday",
        "pandas._libs.tslibs.offsets.shift_month": "pandas._libs.tslibs.offsets.shift_month",
        "pandas._libs.tslibs.offsets.shift_months": "pandas._libs.tslibs.offsets.shift_months",
        "pandas._libs.tslibs.strptime.TimeRE": "pandas._libs.tslibs.strptime.TimeRE",
        "pandas._libs.tslibs.timedeltas.MinMaxReso": "pandas._libs.tslibs.timedeltas.MinMaxReso",
        "pandas._libs.tslibs.timestamps.MinMaxReso": "pandas._libs.tslibs.timestamps.MinMaxReso",
        "pandas.util._validators.validate_endpoints": "pandas.core.arrays.timedeltas.validate_endpoints",
        "pandas.core.base.IndexOpsMixin": "pandas.core.indexes.base.IndexOpsMixin",
        "pandas.core.base.SelectionMixin": "pandas.core.window.rolling.SelectionMixin",
        "pandas.core.dtypes.cast.can_hold_element": "pandas.core.internals.blocks.can_hold_element",
        "pandas.core.dtypes.missing.remove_na_arraylike": "pandas.core.series.remove_na_arraylike",
        "pandas._config.using_copy_on_write": "pandas.core.series.using_copy_on_write",
        "pandas.core.computation.align.align_terms": "pandas.core.computation.engines.align_terms",
        "pandas.core.computation.align.reconstruct_object": "pandas.core.computation.engines.reconstruct_object",
        "pandas.core.computation.common.result_type_many": "pandas.core.computation.ops.result_type_many",
        "pandas.core.computation.eval.eval": "pandas.eval",
        "pandas.core.computation.common.ensure_decoded": "pandas.core.computation.pytables.ensure_decoded",
        "pandas.core.computation.engines.AbstractEngine": "pandas.core.computation.engines.AbstractEngine",
        "pandas.errors.NumExprClobberingError": "pandas.errors.NumExprClobberingError",
        "pandas.core.computation.engines.NumExprEngine": "pandas.core.computation.engines.NumExprEngine",
        "pandas.core.computation.engines.PythonEngine": "pandas.core.computation.engines.PythonEngine",
        "pandas.core.computation.expr.Expr": "pandas.core.computation.expr.Expr",
        "pandas.core.generic.NDFrame": "pandas.core.series.NDFrame",
        "pandas.core.computation.scope.ensure_scope": "pandas.core.computation.scope.ensure_scope",
        "pandas.core.computation.parsing.tokenize_string": "pandas.core.computation.parsing.tokenize_string",
        "pandas.core.computation.expr.BaseExprVisitor": "pandas.core.computation.pytables.BaseExprVisitor",
        "pandas.core.computation.ops.BinOp": "pandas.core.computation.ops.BinOp",
        "pandas.core.computation.ops.Constant": "pandas.core.computation.ops.Constant",
        "pandas.core.computation.ops.Div": "pandas.core.computation.ops.Div",
        "pandas.core.computation.ops.FuncNode": "pandas.core.computation.ops.FuncNode",
        "pandas.core.computation.ops.Op": "pandas.core.computation.ops.Op",
        "pandas.core.computation.expr.PandasExprVisitor": "pandas.core.computation.expr.PandasExprVisitor",
        "pandas.core.computation.expr.PythonExprVisitor": "pandas.core.computation.expr.PythonExprVisitor",
        "pandas.core.computation.scope.Scope": "pandas.core.computation.scope.Scope",
        "pandas.core.computation.ops.Term": "pandas.core.computation.ops.Term",
        "pandas.core.computation.ops.UnaryOp": "pandas.core.computation.ops.UnaryOp",
        "pandas.errors.UndefinedVariableError": "pandas.errors.UndefinedVariableError",
        "pandas.core.computation.expr.add_ops": "pandas.core.computation.expr.add_ops",
        "pandas.core.computation.parsing.clean_backtick_quoted_toks": "pandas.core.computation.parsing.clean_backtick_quoted_toks",
        "pandas.core.computation.expr.disallow": "pandas.core.computation.expr.disallow",
        "pandas.core.computation.ops.is_term": "pandas.core.computation.pytables.is_term",
        "pandas.core.computation.ops.MathCall": "pandas.core.computation.ops.MathCall",
        "pandas.core.computation.ops.isnumeric": "pandas.core.computation.ops.isnumeric",
        "pandas.core.computation.parsing.clean_column_name": "pandas.core.computation.parsing.clean_column_name",
        "pandas.core.computation.parsing.create_valid_python_identifier": "pandas.core.computation.parsing.create_valid_python_identifier",
        "pandas.core.computation.parsing.tokenize_backtick_quoted_string": "pandas.core.computation.parsing.tokenize_backtick_quoted_string",
        "pandas.core.computation.pytables.BinOp": "pandas.core.computation.pytables.BinOp",
        "pandas.core.computation.pytables.ConditionBinOp": "pandas.core.computation.pytables.ConditionBinOp",
        "pandas.core.computation.pytables.Constant": "pandas.core.computation.pytables.Constant",
        "pandas.core.computation.pytables.FilterBinOp": "pandas.core.computation.pytables.FilterBinOp",
        "pandas.core.computation.pytables.JointConditionBinOp": "pandas.core.computation.pytables.JointConditionBinOp",
        "pandas.core.computation.pytables.JointFilterBinOp": "pandas.core.computation.pytables.JointFilterBinOp",
        "pandas.core.computation.pytables.PyTablesExpr": "pandas.io.pytables.Term",
        "pandas.core.computation.pytables.PyTablesExprVisitor": "pandas.core.computation.pytables.PyTablesExprVisitor",
        "pandas.core.computation.pytables.PyTablesScope": "pandas.core.computation.pytables.PyTablesScope",
        "pandas.core.computation.pytables.Term": "pandas.core.computation.pytables.Term",
        "pandas.core.computation.pytables.TermValue": "pandas.core.computation.pytables.TermValue",
        "pandas.core.computation.pytables.UnaryOp": "pandas.core.computation.pytables.UnaryOp",
        "pandas.core.computation.pytables.maybe_expression": "pandas.io.pytables.maybe_expression",
        "pandas.core.computation.scope.DeepChainMap": "pandas.core.computation.scope.DeepChainMap",
        "pandas._config.config.CallableDynamicDoc": "pandas._config.config.CallableDynamicDoc",
        "pandas._config.config.DeprecatedOption": "pandas._config.config.DeprecatedOption",
        "pandas._config.config.DictWrapper": "pandas._config.config.DictWrapper",
        "pandas._config.config.OptionError": "pandas.errors.OptionError",
        "pandas._config.config.RegisteredOption": "pandas._config.config.RegisteredOption",
        "pandas._config.config.config_prefix": "pandas._config.config.config_prefix",
        "pandas._config.config.deprecate_option": "pandas._config.config.deprecate_option",
        "pandas._config.config.get_default_val": "pandas._config.config.get_default_val",
        "pandas._config.config.is_type_factory.<locals>.inner": "pandas.core.config_init.is_str",
        "pandas._config.config.is_callable": "pandas.core.config_init.is_callable",
        "pandas._config.config.is_instance_factory": "pandas.core.config_init.is_instance_factory",
        "pandas._config.config.is_nonnegative_int": "pandas.core.config_init.is_nonnegative_int",
        "pandas._config.config.is_one_of_factory": "pandas.core.config_init.is_one_of_factory",
        "pandas._config.config.is_instance_factory.<locals>.inner": "pandas.core.config_init.is_text",
        "pandas._config.config.is_type_factory": "pandas._config.config.is_type_factory",
        "pandas._config.config.pp_options_list": "pandas._config.config.pp_options_list",
        "pandas._config.config.register_option": "pandas._config.config.register_option",
        "pandas.core.config_init.is_terminal": "pandas.core.config_init.is_terminal",
        "pandas.core.config_init.register_converter_cb": "pandas.core.config_init.register_converter_cb",
        "pandas.core.config_init.register_plotting_backend_cb": "pandas.core.config_init.register_plotting_backend_cb",
        "pandas.core.config_init.table_schema_cb": "pandas.core.config_init.table_schema_cb",
        "pandas.core.config_init.use_bottleneck_cb": "pandas.core.config_init.use_bottleneck_cb",
        "pandas.core.config_init.use_inf_as_na_cb": "pandas.core.config_init.use_inf_as_na_cb",
        "pandas.core.config_init.use_numba_cb": "pandas.core.config_init.use_numba_cb",
        "pandas.core.config_init.use_numexpr_cb": "pandas.core.config_init.use_numexpr_cb",
        "pandas.core.dtypes.cast.maybe_cast_to_datetime": "pandas.core.internals.construction.maybe_cast_to_datetime",
        "pandas.core.dtypes.cast.maybe_cast_to_integer_array": "pandas.core.dtypes.cast.maybe_cast_to_integer_array",
        "pandas.core.dtypes.cast.maybe_convert_platform": "pandas.core.internals.construction.maybe_convert_platform",
        "pandas.core.dtypes.cast.maybe_infer_to_datetimelike": "pandas.core.internals.construction.maybe_infer_to_datetimelike",
        "pandas.core.construction.range_to_ndarray": "pandas.core.internals.construction.range_to_ndarray",
        "pandas.core.construction.sanitize_masked_array": "pandas.core.frame.sanitize_masked_array",
        "pandas.core.dtypes.astype.astype_array_safe": "pandas.core.internals.blocks.astype_array_safe",
        "pandas.core.dtypes.astype.astype_is_view": "pandas.core.series.astype_is_view",
        "pandas.core.dtypes.base.Registry": "pandas.core.dtypes.base.Registry",
        "pandas.core.dtypes.dtypes.PandasExtensionDtype": "pandas.core.dtypes.dtypes.PandasExtensionDtype",
        "pandas.core.dtypes.cast.common_dtype_categorical_compat": "pandas.core.indexes.base.common_dtype_categorical_compat",
        "pandas.core.dtypes.cast.construct_2d_arraylike_from_scalar": "pandas.core.frame.construct_2d_arraylike_from_scalar",
        "pandas.core.dtypes.cast.convert_dtypes": "pandas.core.series.convert_dtypes",
        "pandas.core.dtypes.cast.dict_compat": "pandas.core.internals.construction.dict_compat",
        "pandas.core.dtypes.cast.ensure_dtype_can_hold_na": "pandas.core.internals.concat.ensure_dtype_can_hold_na",
        "pandas.core.dtypes.common.ensure_str": "pandas.core.generic.ensure_str",
        "pandas.core.dtypes.cast.find_result_type": "pandas.core.internals.blocks.find_result_type",
        "pandas.core.dtypes.cast.infer_dtype_from_array": "pandas.core.dtypes.cast.infer_dtype_from_array",
        "pandas.core.dtypes.cast.invalidate_string_dtypes": "pandas.core.frame.invalidate_string_dtypes",
        "pandas.core.dtypes.cast.maybe_box_native": "pandas.core.series.maybe_box_native",
        "pandas.core.dtypes.cast.maybe_downcast_numeric": "pandas.core.tools.numeric.maybe_downcast_numeric",
        "pandas.core.dtypes.cast.maybe_downcast_to_dtype": "pandas.core.reshape.pivot.maybe_downcast_to_dtype",
        "pandas.core.dtypes.cast.np_can_cast_scalar": "pandas.core.dtypes.cast.np_can_cast_scalar",
        "pandas.core.dtypes.cast.np_can_hold_element": "pandas.core.internals.blocks.np_can_hold_element",
        "pandas.core.dtypes.common.classes": "pandas.core.dtypes.common.classes",
        "pandas.core.dtypes.common.ensure_python_int": "pandas.core.indexes.range.ensure_python_int",
        "pandas.core.dtypes.common.infer_dtype_from_object": "pandas.core.frame.infer_dtype_from_object",
        "pandas.core.dtypes.inference.is_dataclass": "pandas.core.frame.is_dataclass",
        "pandas.core.dtypes.common.is_ea_or_datetimelike_dtype": "pandas.core.indexes.base.is_ea_or_datetimelike_dtype",
        "pandas.core.dtypes.inference.is_nested_list_like": "pandas.core.reshape.pivot.is_nested_list_like",
        "pandas.core.dtypes.common.is_scipy_sparse": "pandas.core.dtypes.common.is_scipy_sparse",
        "pandas.core.dtypes.common.is_string_or_object_np_dtype": "pandas.core.dtypes.missing.is_string_or_object_np_dtype",
        "pandas.core.dtypes.common.validate_all_hashable": "pandas.core.series.validate_all_hashable",
        "pandas.core.dtypes.generic.ABCCategoricalIndex": "pandas.core.dtypes.generic.ABCCategoricalIndex",
        "pandas.core.dtypes.dtypes.CategoricalDtypeType": "pandas.core.dtypes.dtypes.CategoricalDtypeType",
        "pandas.core.dtypes.generic.ABCNumpyExtensionArray": "pandas.core.internals.blocks.ABCNumpyExtensionArray",
        "pandas.core.dtypes.generic.ABCPeriodArray": "pandas.core.dtypes.generic.ABCPeriodArray",
        "pandas.core.dtypes.generic.ABCRangeIndex": "pandas.core.sorting.ABCRangeIndex",
        "pandas.core.dtypes.generic.ABCTimedeltaIndex": "pandas.core.indexes.range.ABCTimedeltaIndex",
        "pandas.core.dtypes.generic.create_pandas_abc_type": "pandas.core.dtypes.generic.create_pandas_abc_type",
        "pandas.core.dtypes.missing.array_equals": "pandas.core.internals.managers.array_equals",
        "pandas.core.dtypes.missing.infer_fill_value": "pandas.core.indexing.infer_fill_value",
        "pandas.core.dtypes.missing.isna_all": "pandas.core.internals.concat.isna_all",
        "pandas.core.dtypes.missing.maybe_fill": "pandas.core.groupby.ops.maybe_fill",
        "pandas.core.internals.array_manager.ArrayManager": "pandas.io.pytables.ArrayManager",
        "pandas.core.internals.managers.BlockManager": "pandas.io.pytables.BlockManager",
        "pandas.errors.ChainedAssignmentError": "pandas.errors.ChainedAssignmentError",
        "pandas.io.formats.info.DataFrameInfo": "pandas.io.formats.info.DataFrameInfo",
        "pandas.errors.InvalidIndexError": "pandas.errors.InvalidIndexError",
        "pandas.core.internals.construction.arrays_to_mgr": "pandas.core.internals.construction.arrays_to_mgr",
        "pandas.core.indexing.check_bool_indexer": "pandas.core.series.check_bool_indexer",
        "pandas.core.indexing.check_dict_or_set_indexers": "pandas.core.series.check_dict_or_set_indexers",
        "pandas.core.indexers.utils.check_key_length": "pandas.core.indexers.utils.check_key_length",
        "pandas.core.internals.construction.dataclasses_to_dicts": "pandas.core.internals.construction.dataclasses_to_dicts",
        "pandas.core.indexes.api.default_index": "pandas.io.parsers.base_parser.default_index",
        "pandas.core.internals.construction.dict_to_mgr": "pandas.core.internals.construction.dict_to_mgr",
        "pandas.core.indexes.base.ensure_index": "pandas.io.pytables.ensure_index",
        "pandas.core.indexes.base.ensure_index_from_sequences": "pandas.io.parsers.c_parser_wrapper.ensure_index_from_sequences",
        "pandas.io.formats.format.CategoricalFormatter": "pandas.io.formats.format.CategoricalFormatter",
        "pandas.io.formats.format.DataFrameFormatter": "pandas.core.generic.DataFrameFormatter",
        "pandas.io.formats.format.DataFrameRenderer": "pandas.core.generic.DataFrameRenderer",
        "pandas.io.formats.format.Datetime64Formatter": "pandas.io.formats.format.Datetime64Formatter",
        "pandas.io.formats.format.Datetime64TZFormatter": "pandas.io.formats.format.Datetime64TZFormatter",
        "pandas.io.formats.format.EastAsianTextAdjustment": "pandas.io.formats.format.EastAsianTextAdjustment",
        "pandas.io.formats.format.EngFormatter": "pandas.io.formats.format.EngFormatter",
        "pandas.io.formats.format.ExtensionArrayFormatter": "pandas.io.formats.format.ExtensionArrayFormatter",
        "pandas.io.formats.format.FloatArrayFormatter": "pandas.io.formats.format.FloatArrayFormatter",
        "pandas.io.formats.format.GenericArrayFormatter": "pandas.io.formats.format.GenericArrayFormatter",
        "pandas.io.formats.format.IntArrayFormatter": "pandas.io.formats.format.IntArrayFormatter",
        "pandas.io.formats.format.SeriesFormatter": "pandas.io.formats.format.SeriesFormatter",
        "pandas.io.formats.format.TextAdjustment": "pandas.io.formats.format.TextAdjustment",
        "pandas.io.formats.format.Timedelta64Formatter": "pandas.io.formats.format.Timedelta64Formatter",
        "pandas.io.formats.format.buffer_put_lines": "pandas.io.formats.format.buffer_put_lines",
        "pandas.io.common.check_parent_directory": "pandas.io.common.check_parent_directory",
        "pandas.io.formats.format.format_array": "pandas.io.formats.format.format_array",
        "pandas.io.formats.format.format_percentiles": "pandas.core.methods.describe.format_percentiles",
        "pandas.io.formats.format.get_adjustment": "pandas.io.formats.format.get_adjustment",
        "pandas.io.formats.format.get_buffer": "pandas.io.formats.format.get_buffer",
        "pandas.io.formats.format.get_dataframe_repr_params": "pandas.io.formats.format.get_dataframe_repr_params",
        "pandas.io.formats.format.get_format_datetime64": "pandas.io.formats.format.get_format_datetime64",
        "pandas.io.formats.format.get_format_datetime64_from_values": "pandas.io.formats.format.get_format_datetime64_from_values",
        "pandas.io.formats.format.get_format_timedelta64": "pandas.io.formats.format.get_format_timedelta64",
        "pandas.io.formats.format.get_level_lengths": "pandas.io.formats.format.get_level_lengths",
        "pandas.io.formats.format.get_series_repr_params": "pandas.io.formats.format.get_series_repr_params",
        "pandas.io.formats.format.is_dates_only": "pandas.io.formats.format.is_dates_only",
        "pandas.io.formats.format.save_to_buffer": "pandas.io.formats.format.save_to_buffer",
        "pandas.io.common.stringify_path": "pandas.io.xml.stringify_path",
        "pandas.core.sorting.get_group_index": "pandas.core.sorting.get_group_index",
        "pandas.io.common.get_handle": "pandas.io.xml.get_handle",
        "pandas.core.sorting.lexsort_indexer": "pandas.core.sorting.lexsort_indexer",
        "pandas.core.generic.make_doc": "pandas.core.series.make_doc",
        "pandas.core.indexes.multi.maybe_droplevels": "pandas.core.series.maybe_droplevels",
        "pandas.core.reshape.melt.melt": "pandas.melt",
        "pandas.core.internals.construction.mgr_to_mgr": "pandas.core.internals.construction.mgr_to_mgr",
        "pandas.core.internals.construction.ndarray_to_mgr": "pandas.core.internals.construction.ndarray_to_mgr",
        "pandas.core.internals.construction.nested_data_to_arrays": "pandas.core.internals.construction.nested_data_to_arrays",
        "pandas._libs.properties.AxisProperty": "pandas._libs.properties.AxisProperty",
        "pandas.core.internals.construction.rec_array_to_mgr": "pandas.core.internals.construction.rec_array_to_mgr",
        "pandas.core.internals.construction.reorder_arrays": "pandas.core.internals.construction.reorder_arrays",
        "pandas.core.methods.selectn.SelectN": "pandas.core.methods.selectn.SelectN",
        "pandas.core.methods.selectn.SelectNFrame": "pandas.core.methods.selectn.SelectNFrame",
        "pandas.core.methods.selectn.SelectNSeries": "pandas.core.methods.selectn.SelectNSeries",
        "pandas.core.internals.construction.to_arrays": "pandas.core.internals.construction.to_arrays",
        "pandas.core.internals.construction.treat_as_nested": "pandas.core.internals.construction.treat_as_nested",
        "pandas.util._validators.validate_ascending": "pandas.core.series.validate_ascending",
        "pandas.util._validators.validate_percentile": "pandas.core.series.validate_percentile",
        "pandas.errors.SettingWithCopyError": "pandas.errors.SettingWithCopyError",
        "pandas.errors.SettingWithCopyWarning": "pandas.errors.SettingWithCopyWarning",
        "pandas.core.internals.array_manager.SingleArrayManager": "pandas.core.series.SingleArrayManager",
        "pandas._typing.WriteBuffer": "pandas.io.common.WriteBuffer",
        "pandas._typing.WriteExcelBuffer": "pandas.core.generic.WriteExcelBuffer",
        "pandas.util._validators.check_dtype_backend": "pandas.io.xml.check_dtype_backend",
        "pandas.util._decorators.deprecate_nonkeyword_arguments": "pandas.core.generic.deprecate_nonkeyword_arguments",
        "pandas.core.methods.describe.describe_ndframe": "pandas.core.methods.describe.describe_ndframe",
        "pandas.core.sorting.get_indexer_indexer": "pandas.core.sorting.get_indexer_indexer",
        "pandas.errors.IndexingError": "pandas.errors.IndexingError",
        "pandas.core.indexing.IndexingMixin": "pandas.core.indexing.IndexingMixin",
        "pandas._libs.indexing.NDFrameIndexerBase": "pandas.core.indexing.NDFrameIndexerBase",
        "pandas.core.indexing.convert_from_missing_indexer_tuple": "pandas.core.indexing.convert_from_missing_indexer_tuple",
        "pandas.core.indexing.convert_missing_indexer": "pandas.core.indexing.convert_missing_indexer",
        "pandas.core.indexing.is_label_like": "pandas.core.indexing.is_label_like",
        "pandas.core.indexers.utils.is_list_like_indexer": "pandas.core.indexers.utils.is_list_like_indexer",
        "pandas.core.indexing.is_nested_tuple": "pandas.core.indexing.is_nested_tuple",
        "pandas.core.indexers.utils.is_scalar_indexer": "pandas.core.indexers.utils.is_scalar_indexer",
        "pandas.core.indexers.utils.length_of_indexer": "pandas.core.indexers.utils.length_of_indexer",
        "pandas.core.indexing.maybe_convert_ix": "pandas.core.indexing.maybe_convert_ix",
        "pandas.core.indexing.need_slice": "pandas.core.indexing.need_slice",
        "pandas.core.sample.preprocess_weights": "pandas.core.sample.preprocess_weights",
        "pandas.core.sample.process_sampling_size": "pandas.core.sample.process_sampling_size",
        "pandas.core.sample.sample": "pandas.core.sample.sample",
        "pandas.core.groupby.groupby.GroupBy": "pandas.core.resample.GroupBy",
        "pandas.core.groupby.base.OutputKey": "pandas.core.groupby.base.OutputKey",
        "pandas.core.groupby.categorical.recode_for_groupby": "pandas.core.groupby.grouper.recode_for_groupby",
        "pandas.core.groupby.groupby.GroupByPlot": "pandas.core.groupby.groupby.GroupByPlot",
        "pandas.core.indexes.api.all_indexes_same": "pandas.core.reshape.concat.all_indexes_same",
        "pandas.plotting._core.boxplot_frame_groupby": "pandas.plotting.boxplot_frame_groupby",
        "pandas.core.util.numba_.maybe_use_numba": "pandas.core.window.rolling.maybe_use_numba",
        "pandas.core.groupby.ops.BaseGrouper": "pandas.core.groupby.ops.BaseGrouper",
        "pandas.core.groupby.ops.BinGrouper": "pandas.core.resample.BinGrouper",
        "pandas.core.groupby.ops.DataSplitter": "pandas.core.groupby.ops.DataSplitter",
        "pandas.core.groupby.ops.FrameSplitter": "pandas.core.groupby.ops.FrameSplitter",
        "pandas.core.groupby.ops.SeriesSplitter": "pandas.core.groupby.ops.SeriesSplitter",
        "pandas.core.groupby.ops.WrappedCythonOp": "pandas.core.groupby.ops.WrappedCythonOp",
        "pandas.core.groupby.ops.check_result_array": "pandas.core.groupby.ops.check_result_array",
        "pandas.core.sorting.compress_group_index": "pandas.core.sorting.compress_group_index",
        "pandas.core.sorting.decons_obs_group_ids": "pandas.core.sorting.decons_obs_group_ids",
        "pandas.core.groupby.ops.extract_result": "pandas.core.groupby.ops.extract_result",
        "pandas.core.sorting.get_flattened_list": "pandas.core.sorting.get_flattened_list",
        "pandas.core.sorting.get_group_index_sorter": "pandas.core.sorting.get_group_index_sorter",
        "pandas.core.sorting.get_indexer_dict": "pandas.core.sorting.get_indexer_dict",
        "pandas.core.groupby.grouper.Grouping": "pandas.core.groupby.grouper.Grouping",
        "pandas.core.groupby.grouper.get_grouper": "pandas.core.groupby.groupby.get_grouper",
        "pandas._libs.groupby.group_any_all": "pandas._libs.groupby.group_any_all",
        "pandas._libs.groupby.group_cummax": "pandas._libs.groupby.group_cummax",
        "pandas._libs.groupby.group_cummin": "pandas._libs.groupby.group_cummin",
        "pandas._libs.groupby.group_cumprod": "pandas._libs.groupby.group_cumprod",
        "pandas._libs.groupby.group_cumsum": "pandas._libs.groupby.group_cumsum",
        "pandas._libs.groupby.group_fillna_indexer": "pandas._libs.groupby.group_fillna_indexer",
        "pandas._libs.groupby.group_last": "pandas._libs.groupby.group_last",
        "pandas._libs.groupby.group_max": "pandas._libs.groupby.group_max",
        "pandas._libs.groupby.group_mean": "pandas._libs.groupby.group_mean",
        "pandas._libs.groupby.group_median_float64": "pandas._libs.groupby.group_median_float64",
        "pandas._libs.groupby.group_min": "pandas._libs.groupby.group_min",
        "pandas._libs.groupby.group_nth": "pandas._libs.groupby.group_nth",
        "pandas._libs.groupby.group_ohlc": "pandas._libs.groupby.group_ohlc",
        "pandas._libs.groupby.group_prod": "pandas._libs.groupby.group_prod",
        "pandas._libs.groupby.group_quantile": "pandas._libs.groupby.group_quantile",
        "pandas._libs.groupby.group_rank": "pandas._libs.groupby.group_rank",
        "pandas._libs.groupby.group_shift_indexer": "pandas._libs.groupby.group_shift_indexer",
        "pandas._libs.groupby.group_skew": "pandas._libs.groupby.group_skew",
        "pandas._libs.groupby.group_sum": "pandas._libs.groupby.group_sum",
        "pandas._libs.groupby.group_var": "pandas._libs.groupby.group_var",
        "pandas.core.groupby.groupby.BaseGroupBy": "pandas.core.resample.BaseGroupBy",
        "pandas.errors.DataError": "pandas.errors.DataError",
        "pandas.core.groupby.indexing.GroupByIndexingMixin": "pandas.core.groupby.indexing.GroupByIndexingMixin",
        "pandas.core.groupby.indexing.GroupByNthSelector": "pandas.core.groupby.indexing.GroupByNthSelector",
        "pandas.core.internals.blocks.ensure_block_shape": "pandas.core.internals.managers.ensure_block_shape",
        "pandas.core._numba.executor.generate_shared_aggregator": "pandas.core._numba.executor.generate_shared_aggregator",
        "pandas.core._numba.executor.make_looper": "pandas.core._numba.executor.make_looper",
        "pandas.core.groupby.groupby.get_groupby": "pandas.core.resample.get_groupby",
        "pandas.core.util.numba_.get_jit_arguments": "pandas.core.window.rolling.get_jit_arguments",
        "pandas.errors.NumbaUtilError": "pandas.errors.NumbaUtilError",
        "pandas.core.groupby.numba_.generate_numba_agg_func": "pandas.core.groupby.numba_.generate_numba_agg_func",
        "pandas.core.groupby.numba_.generate_numba_transform_func": "pandas.core.groupby.numba_.generate_numba_transform_func",
        "pandas.core.util.numba_.jit_user_function": "pandas.core.window.numba_.jit_user_function",
        "pandas.core.groupby.numba_.validate_udf": "pandas.core.groupby.numba_.validate_udf",
        "pandas.core.groupby.indexing.GroupByPositionalSelector": "pandas.core.groupby.indexing.GroupByPositionalSelector",
        "pandas.core.indexers.utils.disallow_ndim_indexing": "pandas.core.series.disallow_ndim_indexing",
        "pandas.core.indexers.utils.is_empty_indexer": "pandas.core.indexers.utils.is_empty_indexer",
        "pandas.core.indexers.utils.is_valid_positional_slice": "pandas.core.indexes.interval.is_valid_positional_slice",
        "pandas.core.indexers.utils.maybe_convert_indices": "pandas.core.internals.managers.maybe_convert_indices",
        "pandas.core.indexers.objects.ExpandingIndexer": "pandas.core.window.expanding.ExpandingIndexer",
        "pandas.core.indexers.objects.ExponentialMovingWindowIndexer": "pandas.core.window.ewm.ExponentialMovingWindowIndexer",
        "pandas.core.indexers.objects.FixedWindowIndexer": "pandas.core.window.rolling.FixedWindowIndexer",
        "pandas.core.indexers.objects.GroupbyIndexer": "pandas.core.window.rolling.GroupbyIndexer",
        "pandas.core.indexers.objects.VariableWindowIndexer": "pandas.core.window.rolling.VariableWindowIndexer",
        "pandas._libs.window.indexers.calculate_variable_window_bounds": "pandas.core.indexers.objects.calculate_variable_window_bounds",
        "pandas.core.indexers.utils.unpack_1tuple": "pandas.core.series.unpack_1tuple",
        "pandas.core.indexes.accessors.ArrowTemporalProperties": "pandas.core.indexes.accessors.ArrowTemporalProperties",
        "pandas.core.indexes.accessors.CombinedDatetimelikeProperties": "pandas.core.series.CombinedDatetimelikeProperties",
        "pandas.core.indexes.accessors.DatetimeProperties": "pandas.core.indexes.accessors.DatetimeProperties",
        "pandas.core.indexes.accessors.PeriodProperties": "pandas.core.indexes.accessors.PeriodProperties",
        "pandas.core.indexes.accessors.Properties": "pandas.core.indexes.accessors.Properties",
        "pandas.core.indexes.accessors.TimedeltaProperties": "pandas.core.indexes.accessors.TimedeltaProperties",
        "pandas.core.indexes.api.get_objs_combined_axis": "pandas.core.reshape.pivot.get_objs_combined_axis",
        "pandas.core.indexes.base.get_unanimous_names": "pandas.core.reshape.concat.get_unanimous_names",
        "pandas.core.indexes.api.safe_sort_index": "pandas.core.indexes.api.safe_sort_index",
        "pandas.core.indexes.api.union_indexes": "pandas.core.internals.construction.union_indexes",
        "pandas._libs.internals.BlockValuesRefs": "pandas.core.internals.managers.BlockValuesRefs",
        "pandas.errors.DuplicateLabelError": "pandas.errors.DuplicateLabelError",
        "pandas.core.indexes.frozen.FrozenList": "pandas.core.indexes.multi.FrozenList",
        "pandas.core.strings.accessor.StringMethods": "pandas.core.strings.accessor.StringMethods",
        "pandas.core.indexes.base.ensure_has_len": "pandas.core.indexes.base.ensure_has_len",
        "pandas.core.sorting.ensure_key_mapped": "pandas.core.sorting.ensure_key_mapped",
        "pandas._libs.index.BaseMultiIndexCodesEngine": "pandas._libs.index.BaseMultiIndexCodesEngine",
        "pandas._libs.index.BoolEngine": "pandas._libs.index.BoolEngine",
        "pandas._libs.index.Complex128Engine": "pandas._libs.index.Complex128Engine",
        "pandas._libs.index.Complex64Engine": "pandas._libs.index.Complex64Engine",
        "pandas._libs.index.DatetimeEngine": "pandas._libs.index.DatetimeEngine",
        "pandas._libs.index.ExtensionEngine": "pandas._libs.index.ExtensionEngine",
        "pandas._libs.index.Float32Engine": "pandas._libs.index.Float32Engine",
        "pandas._libs.index.Float64Engine": "pandas._libs.index.Float64Engine",
        "pandas._libs.index.IndexEngine": "pandas._libs.index.IndexEngine",
        "pandas._libs.index.Int16Engine": "pandas._libs.index.Int16Engine",
        "pandas._libs.index.Int32Engine": "pandas._libs.index.Int32Engine",
        "pandas._libs.index.Int64Engine": "pandas._libs.index.Int64Engine",
        "pandas._libs.index.Int8Engine": "pandas._libs.index.Int8Engine",
        "pandas._libs.index.MaskedBoolEngine": "pandas._libs.index.MaskedBoolEngine",
        "pandas._libs.index.MaskedComplex128Engine": "pandas._libs.index.MaskedComplex128Engine",
        "pandas._libs.index.MaskedComplex64Engine": "pandas._libs.index.MaskedComplex64Engine",
        "pandas._libs.index.MaskedFloat32Engine": "pandas._libs.index.MaskedFloat32Engine",
        "pandas._libs.index.MaskedFloat64Engine": "pandas._libs.index.MaskedFloat64Engine",
        "pandas._libs.index.MaskedIndexEngine": "pandas._libs.index.MaskedIndexEngine",
        "pandas._libs.index.MaskedInt16Engine": "pandas._libs.index.MaskedInt16Engine",
        "pandas._libs.index.MaskedInt32Engine": "pandas._libs.index.MaskedInt32Engine",
        "pandas._libs.index.MaskedInt64Engine": "pandas._libs.index.MaskedInt64Engine",
        "pandas._libs.index.MaskedInt8Engine": "pandas._libs.index.MaskedInt8Engine",
        "pandas._libs.index.MaskedUInt16Engine": "pandas._libs.index.MaskedUInt16Engine",
        "pandas._libs.index.MaskedUInt32Engine": "pandas._libs.index.MaskedUInt32Engine",
        "pandas._libs.index.MaskedUInt64Engine": "pandas._libs.index.MaskedUInt64Engine",
        "pandas._libs.index.MaskedUInt8Engine": "pandas._libs.index.MaskedUInt8Engine",
        "pandas._libs.index.ObjectEngine": "pandas._libs.index.ObjectEngine",
        "pandas._libs.index.PeriodEngine": "pandas._libs.index.PeriodEngine",
        "pandas._libs.index.TimedeltaEngine": "pandas._libs.index.TimedeltaEngine",
        "pandas._libs.index.UInt16Engine": "pandas._libs.index.UInt16Engine",
        "pandas._libs.index.UInt32Engine": "pandas._libs.index.UInt32Engine",
        "pandas._libs.index.UInt64Engine": "pandas._libs.index.UInt64Engine",
        "pandas._libs.index.UInt8Engine": "pandas._libs.index.UInt8Engine",
        "pandas._libs.join.asof_join_backward_on_X_by_Y": "pandas._libs.join.asof_join_backward_on_X_by_Y",
        "pandas._libs.join.asof_join_forward_on_X_by_Y": "pandas._libs.join.asof_join_forward_on_X_by_Y",
        "pandas._libs.join.asof_join_nearest_on_X_by_Y": "pandas._libs.join.asof_join_nearest_on_X_by_Y",
        "pandas._libs.join.ffill_indexer": "pandas._libs.join.ffill_indexer",
        "pandas._libs.join.full_outer_join": "pandas._libs.join.full_outer_join",
        "pandas._libs.join.inner_join": "pandas._libs.join.inner_join",
        "pandas._libs.join.inner_join_indexer": "pandas._libs.join.inner_join_indexer",
        "pandas._libs.join.left_join_indexer": "pandas._libs.join.left_join_indexer",
        "pandas._libs.join.left_join_indexer_unique": "pandas._libs.join.left_join_indexer_unique",
        "pandas._libs.join.left_outer_join": "pandas._libs.join.left_outer_join",
        "pandas._libs.join.outer_join_indexer": "pandas._libs.join.outer_join_indexer",
        "pandas.core.indexes.base.maybe_extract_name": "pandas.core.indexes.timedeltas.maybe_extract_name",
        "pandas.util._exceptions.rewrite_exception": "pandas.core.indexes.interval.rewrite_exception",
        "pandas.core.indexes.base.trim_front": "pandas.core.indexes.base.trim_front",
        "pandas.core.indexes.extension.NDArrayBackedExtensionIndex": "pandas.core.indexes.extension.NDArrayBackedExtensionIndex",
        "pandas.core.indexes.extension.inherit_names": "pandas.core.indexes.timedeltas.inherit_names",
        "pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin": "pandas.core.indexes.period.DatetimeIndexOpsMixin",
        "pandas.core.indexes.datetimelike.DatetimeTimedeltaMixin": "pandas.core.indexes.timedeltas.DatetimeTimedeltaMixin",
        "pandas.errors.NullFrequencyError": "pandas.errors.NullFrequencyError",
        "pandas.core.tools.times.to_time": "pandas.core.tools.times.to_time",
        "pandas.core.indexes.extension.ExtensionIndex": "pandas.core.indexes.interval.ExtensionIndex",
        "pandas._libs.interval.IntervalTree": "pandas.core.indexes.interval.IntervalTree",
        "pandas.core.indexes.multi.MultiIndexPyIntEngine": "pandas.core.indexes.multi.MultiIndexPyIntEngine",
        "pandas.core.indexes.multi.MultiIndexUIntEngine": "pandas.core.indexes.multi.MultiIndexUIntEngine",
        "pandas.errors.UnsortedIndexError": "pandas.errors.UnsortedIndexError",
        "pandas.core.indexes.multi.names_compat": "pandas.core.indexes.multi.names_compat",
        "pandas.core.indexes.multi.sparsify_labels": "pandas.core.indexes.multi.sparsify_labels",
        "pandas.core.interchange.dataframe_protocol.Buffer": "pandas.core.interchange.from_dataframe.Buffer",
        "pandas.core.interchange.dataframe_protocol.CategoricalDescription": "pandas.core.interchange.dataframe_protocol.CategoricalDescription",
        "pandas.core.interchange.dataframe_protocol.Column": "pandas.core.interchange.from_dataframe.Column",
        "pandas.core.interchange.dataframe_protocol.ColumnBuffers": "pandas.core.interchange.dataframe_protocol.ColumnBuffers",
        "pandas.core.interchange.dataframe_protocol.ColumnNullType": "pandas.core.interchange.from_dataframe.ColumnNullType",
        "pandas.core.interchange.dataframe_protocol.DlpackDeviceType": "pandas.core.interchange.dataframe_protocol.DlpackDeviceType",
        "pandas.core.interchange.dataframe_protocol.DtypeKind": "pandas.core.interchange.from_dataframe.DtypeKind",
        "pandas.core.interchange.utils.ArrowCTypes": "pandas.core.interchange.utils.ArrowCTypes",
        "pandas.core.interchange.utils.Endianness": "pandas.core.interchange.utils.Endianness",
        "pandas.core.interchange.from_dataframe.buffer_to_ndarray": "pandas.core.interchange.from_dataframe.buffer_to_ndarray",
        "pandas.core.interchange.from_dataframe.categorical_column_to_series": "pandas.core.interchange.from_dataframe.categorical_column_to_series",
        "pandas.core.interchange.from_dataframe.datetime_column_to_ndarray": "pandas.core.interchange.from_dataframe.datetime_column_to_ndarray",
        "pandas.core.interchange.from_dataframe.parse_datetime_format_str": "pandas.core.interchange.from_dataframe.parse_datetime_format_str",
        "pandas.core.interchange.from_dataframe.primitive_column_to_ndarray": "pandas.core.interchange.from_dataframe.primitive_column_to_ndarray",
        "pandas.core.interchange.from_dataframe.protocol_df_chunk_to_pandas": "pandas.core.interchange.from_dataframe.protocol_df_chunk_to_pandas",
        "pandas.core.interchange.from_dataframe.set_nulls": "pandas.core.interchange.from_dataframe.set_nulls",
        "pandas.core.interchange.from_dataframe.string_column_to_ndarray": "pandas.core.interchange.from_dataframe.string_column_to_ndarray",
        "pandas.core.interchange.utils.dtype_to_arrow_c_fmt": "pandas.core.interchange.utils.dtype_to_arrow_c_fmt",
        "pandas.core.internals.blocks.Block": "pandas.core.internals.managers.Block",
        "pandas.core.internals.base.DataManager": "pandas.core.internals.managers.DataManager",
        "pandas.core.internals.blocks.DatetimeTZBlock": "pandas.core.internals.blocks.DatetimeTZBlock",
        "pandas.core.internals.blocks.ExtensionBlock": "pandas.core.internals.blocks.ExtensionBlock",
        "pandas.core.internals.managers.SingleBlockManager": "pandas.core.series.SingleBlockManager",
        "pandas.core.internals.base.SingleDataManager": "pandas.core.internals.managers.SingleDataManager",
        "pandas._libs.internals.BlockPlacement": "pandas.core.internals.managers.BlockPlacement",
        "pandas.core.internals.blocks.check_ndim": "pandas.core.internals.blocks.check_ndim",
        "pandas.core.internals.blocks.extract_pandas_array": "pandas.core.internals.blocks.extract_pandas_array",
        "pandas.core.internals.blocks.get_block_type": "pandas.core.internals.managers.get_block_type",
        "pandas.core.internals.api.make_block": "pandas.core.internals.make_block",
        "pandas.core.internals.blocks.maybe_coerce_values": "pandas.core.internals.managers.maybe_coerce_values",
        "pandas.core.internals.api.maybe_infer_ndim": "pandas.core.internals.api.maybe_infer_ndim",
        "pandas.core.internals.array_manager.BaseArrayManager": "pandas.core.internals.array_manager.BaseArrayManager",
        "pandas.core.internals.array_manager.NullArrayProxy": "pandas.core.internals.array_manager.NullArrayProxy",
        "pandas.core.internals.array_manager.concat_arrays": "pandas.core.internals.array_manager.concat_arrays",
        "pandas.core.internals.base.ensure_np_dtype": "pandas.core.internals.managers.ensure_np_dtype",
        "pandas.core.internals.blocks.external_values": "pandas.core.internals.blocks.external_values",
        "pandas.core.internals.base.interleaved_dtype": "pandas.core.internals.managers.interleaved_dtype",
        "pandas.core.internals.managers.make_na_array": "pandas.core.internals.managers.make_na_array",
        "pandas.core.internals.blocks.new_block": "pandas.core.internals.managers.new_block",
        "pandas.core.internals.blocks.to_native_types": "pandas.core.internals.blocks.to_native_types",
        "pandas.core.internals.blocks.DatetimeLikeBlock": "pandas.core.internals.blocks.DatetimeLikeBlock",
        "pandas.core.internals.blocks.EABackedBlock": "pandas.core.internals.blocks.EABackedBlock",
        "pandas.core.internals.blocks.NDArrayBackedExtensionBlock": "pandas.core.internals.blocks.NDArrayBackedExtensionBlock",
        "pandas.core.internals.blocks.NumericBlock": "pandas.core.internals.blocks.NumericBlock",
        "pandas.core.internals.blocks.NumpyBlock": "pandas.core.internals.managers.NumpyBlock",
        "pandas.core.internals.blocks.ObjectBlock": "pandas.core.internals.blocks.ObjectBlock",
        "pandas.core.internals.blocks.extend_blocks": "pandas.core.internals.managers.extend_blocks",
        "pandas._libs.internals.Block": "pandas._libs.internals.Block",
        "pandas._libs.internals.BlockManager": "pandas._libs.internals.BlockManager",
        "pandas._libs.internals.NDArrayBackedBlock": "pandas._libs.internals.NDArrayBackedBlock",
        "pandas._libs.internals.NumpyBlock": "pandas._libs.internals.NumpyBlock",
        "pandas._libs.internals.SharedBlock": "pandas._libs.internals.SharedBlock",
        "pandas._libs.internals.get_blkno_indexers": "pandas._libs.internals.get_blkno_indexers",
        "pandas._libs.internals.get_blkno_placements": "pandas._libs.internals.get_blkno_placements",
        "pandas._libs.internals.get_concat_blkno_indexers": "pandas._libs.internals.get_concat_blkno_indexers",
        "pandas._libs.internals.slice_len": "pandas._libs.internals.slice_len",
        "pandas._libs.internals.update_blklocs_and_blknos": "pandas._libs.internals.update_blklocs_and_blknos",
        "pandas.core.internals.blocks.maybe_split": "pandas.core.internals.blocks.maybe_split",
        "pandas.core.internals.blocks.new_block_2d": "pandas.core.internals.managers.new_block_2d",
        "pandas._libs.writers.convert_json_to_lines": "pandas._libs.writers.convert_json_to_lines",
        "pandas._libs.writers.max_len_string_array": "pandas.io.stata.max_len_string_array",
        "pandas._libs.writers.string_array_replace_from_nan_rep": "pandas._libs.writers.string_array_replace_from_nan_rep",
        "pandas._libs.writers.word_len": "pandas._libs.writers.word_len",
        "pandas._libs.writers.write_csv_rows": "pandas._libs.writers.write_csv_rows",
        "pandas.core.internals.concat.JoinUnit": "pandas.core.internals.concat.JoinUnit",
        "pandas.core.internals.concat.concatenate_managers": "pandas.core.reshape.concat.concatenate_managers",
        "pandas.core.internals.construction.convert_object_array": "pandas.io.sql.convert_object_array",
        "pandas.core.internals.managers.create_block_manager_from_blocks": "pandas.core.internals.managers.create_block_manager_from_blocks",
        "pandas.core.internals.managers.create_block_manager_from_column_arrays": "pandas.core.internals.managers.create_block_manager_from_column_arrays",
        "pandas.core.internals.managers.BaseBlockManager": "pandas.core.internals.managers.BaseBlockManager",
        "pandas.core.internals.ops.blockwise_all": "pandas.core.internals.ops.blockwise_all",
        "pandas.core.internals.ops.operate_blockwise": "pandas.core.internals.ops.operate_blockwise",
        "pandas.core.internals.managers.raise_construction_error": "pandas.core.internals.managers.raise_construction_error",
        "pandas.core.internals.ops.BlockPairInfo": "pandas.core.internals.ops.BlockPairInfo",
        "pandas.core.methods.describe.DataFrameDescriber": "pandas.core.methods.describe.DataFrameDescriber",
        "pandas.core.methods.describe.NDFrameDescriberAbstract": "pandas.core.methods.describe.NDFrameDescriberAbstract",
        "pandas.core.methods.describe.SeriesDescriber": "pandas.core.methods.describe.SeriesDescriber",
        "pandas.core.methods.describe.describe_categorical_1d": "pandas.core.methods.describe.describe_categorical_1d",
        "pandas.core.methods.describe.describe_numeric_1d": "pandas.core.methods.describe.describe_numeric_1d",
        "pandas.core.methods.describe.describe_timestamp_1d": "pandas.core.methods.describe.describe_timestamp_1d",
        "pandas.core.methods.describe.describe_timestamp_as_categorical_1d": "pandas.core.methods.describe.describe_timestamp_as_categorical_1d",
        "pandas.core.methods.describe.reorder_columns": "pandas.core.methods.describe.reorder_columns",
        "pandas.core.methods.describe.select_describe_func": "pandas.core.methods.describe.select_describe_func",
        "pandas.core.resample.DatetimeIndexResampler": "pandas.core.resample.DatetimeIndexResampler",
        "pandas.core.resample.PeriodIndexResampler": "pandas.core.resample.PeriodIndexResampler",
        "pandas.core.resample.TimedeltaIndexResampler": "pandas.core.resample.TimedeltaIndexResampler",
        "pandas.core.resample.asfreq": "pandas.core.resample.asfreq",
        "pandas.core.resample.get_resampler": "pandas.core.resample.get_resampler",
        "pandas.core.resample.get_resampler_for_grouping": "pandas.core.resample.get_resampler_for_grouping",
        "pandas.core.resample.maybe_warn_args_and_kwargs": "pandas.core.resample.maybe_warn_args_and_kwargs",
        "pandas.core.reshape.pivot.crosstab": "pandas.crosstab",
        "pandas.core.reshape.tile.cut": "pandas.cut",
        "pandas.core.reshape.encoding.from_dummies": "pandas.from_dummies",
        "pandas.core.reshape.encoding.get_dummies": "pandas.get_dummies",
        "pandas.core.reshape.melt.lreshape": "pandas.lreshape",
        "pandas.core.reshape.merge.merge": "pandas.merge",
        "pandas.core.reshape.merge.merge_asof": "pandas.merge_asof",
        "pandas.core.reshape.merge.merge_ordered": "pandas.merge_ordered",
        "pandas.core.reshape.pivot.pivot": "pandas.pivot",
        "pandas.core.reshape.pivot.pivot_table": "pandas.pivot_table",
        "pandas.core.reshape.tile.qcut": "pandas.qcut",
        "pandas.core.reshape.melt.wide_to_long": "pandas.wide_to_long",
        "pandas.core.reshape.util.tile_compat": "pandas.core.reshape.util.tile_compat",
        "pandas.errors.MergeError": "pandas.errors.MergeError",
        "pandas.core.reshape.merge.get_join_indexers": "pandas.core.reshape.merge.get_join_indexers",
        "pandas.core.sorting.is_int64_overflow_possible": "pandas.core.sorting.is_int64_overflow_possible",
        "pandas.core.reshape.merge.restore_dropped_levels_multijoin": "pandas.core.reshape.merge.restore_dropped_levels_multijoin",
        "pandas.core.reshape.util.cartesian_product": "pandas.core.reshape.util.cartesian_product",
        "pandas.io.formats.info.SeriesInfo": "pandas.io.formats.info.SeriesInfo",
        "pandas._libs.reshape.explode": "pandas._libs.reshape.explode",
        "pandas._libs.reshape.unstack": "pandas._libs.reshape.unstack",
        "pandas.core.sorting.get_compressed_ids": "pandas.core.sorting.get_compressed_ids",
        "pandas.core.sorting.indexer_from_factorized": "pandas.core.sorting.indexer_from_factorized",
        "pandas.core.strings.accessor.cat_core": "pandas.core.strings.accessor.cat_core",
        "pandas.core.strings.accessor.cat_safe": "pandas.core.strings.accessor.cat_safe",
        "pandas.core.strings.accessor.forbid_nonstring_types": "pandas.core.strings.accessor.forbid_nonstring_types",
        "pandas.core.strings.accessor.str_extractall": "pandas.core.strings.accessor.str_extractall",
        "pandas.core.tools.datetimes.FulldatetimeDict": "pandas.core.tools.datetimes.FulldatetimeDict",
        "pandas.core.tools.datetimes.YearMonthDayDict": "pandas.core.tools.datetimes.YearMonthDayDict",
        "pandas.core.tools.datetimes.should_cache": "pandas.core.tools.datetimes.should_cache",
        "pandas.core.util.hashing.combine_hash_arrays": "pandas.core.util.hashing.combine_hash_arrays",
        "pandas.core.util.hashing.hash_array": "pandas.core.util.hashing.hash_array",
        "pandas._libs.hashing.hash_object_array": "pandas.core.util.hashing.hash_object_array",
        "pandas.core.util.hashing.hash_pandas_object": "pandas.core.util.hashing.hash_pandas_object",
        "pandas.core.util.hashing.hash_tuples": "pandas.core.util.hashing.hash_tuples",
        "pandas.core.util.numba_.set_use_numba": "pandas.core.util.numba_.set_use_numba",
        "pandas.core.window.common.flex_binary_moment": "pandas.core.window.rolling.flex_binary_moment",
        "pandas.core.window.common.prep_binary": "pandas.core.window.common.prep_binary",
        "pandas.core.window.common.zsqrt": "pandas.core.window.rolling.zsqrt",
        "pandas.core.window.doc.create_section_header": "pandas.core.window.rolling.create_section_header",
        "pandas.core.window.doc.window_agg_numba_parameters": "pandas.core.window.rolling.window_agg_numba_parameters",
        "pandas.core.window.rolling.BaseWindow": "pandas.core.window.rolling.BaseWindow",
        "pandas.core.window.rolling.BaseWindowGroupby": "pandas.core.window.rolling.BaseWindowGroupby",
        "pandas.core.window.online.EWMMeanState": "pandas.core.window.online.EWMMeanState",
        "pandas.core.window.ewm.OnlineExponentialMovingWindow": "pandas.core.window.ewm.OnlineExponentialMovingWindow",
        "pandas.core.window.numba_.generate_numba_ewm_func": "pandas.core.window.numba_.generate_numba_ewm_func",
        "pandas.core.window.numba_.generate_numba_ewm_table_func": "pandas.core.window.numba_.generate_numba_ewm_table_func",
        "pandas.core.window.online.generate_online_numba_ewma_func": "pandas.core.window.online.generate_online_numba_ewma_func",
        "pandas.core.window.ewm.get_center_of_mass": "pandas.core.window.ewm.get_center_of_mass",
        "pandas._libs.window.aggregations.ewm": "pandas._libs.window.aggregations.ewm",
        "pandas._libs.window.aggregations.ewmcov": "pandas._libs.window.aggregations.ewmcov",
        "pandas._libs.window.aggregations.roll_apply": "pandas._libs.window.aggregations.roll_apply",
        "pandas._libs.window.aggregations.roll_kurt": "pandas._libs.window.aggregations.roll_kurt",
        "pandas._libs.window.aggregations.roll_max": "pandas._libs.window.aggregations.roll_max",
        "pandas._libs.window.aggregations.roll_mean": "pandas._libs.window.aggregations.roll_mean",
        "pandas._libs.window.aggregations.roll_median_c": "pandas._libs.window.aggregations.roll_median_c",
        "pandas._libs.window.aggregations.roll_min": "pandas._libs.window.aggregations.roll_min",
        "pandas._libs.window.aggregations.roll_quantile": "pandas._libs.window.aggregations.roll_quantile",
        "pandas._libs.window.aggregations.roll_rank": "pandas._libs.window.aggregations.roll_rank",
        "pandas._libs.window.aggregations.roll_skew": "pandas._libs.window.aggregations.roll_skew",
        "pandas._libs.window.aggregations.roll_sum": "pandas._libs.window.aggregations.roll_sum",
        "pandas._libs.window.aggregations.roll_var": "pandas._libs.window.aggregations.roll_var",
        "pandas._libs.window.aggregations.roll_weighted_mean": "pandas._libs.window.aggregations.roll_weighted_mean",
        "pandas._libs.window.aggregations.roll_weighted_sum": "pandas._libs.window.aggregations.roll_weighted_sum",
        "pandas._libs.window.aggregations.roll_weighted_var": "pandas._libs.window.aggregations.roll_weighted_var",
        "pandas.core.window.rolling.RollingAndExpandingMixin": "pandas.core.window.rolling.RollingAndExpandingMixin",
        "pandas.util._decorators.deprecate_kwarg": "pandas.core.window.rolling.deprecate_kwarg",
        "pandas.core.window.numba_.generate_manual_numpy_nan_agg_with_axis": "pandas.core.window.rolling.generate_manual_numpy_nan_agg_with_axis",
        "pandas.core.window.numba_.generate_numba_apply_func": "pandas.core.window.rolling.generate_numba_apply_func",
        "pandas.core.window.numba_.generate_numba_table_func": "pandas.core.window.rolling.generate_numba_table_func",
        "pandas.errors.AttributeConflictWarning": "pandas.io.pytables.AttributeConflictWarning",
        "pandas.errors.CSSWarning": "pandas.errors.CSSWarning",
        "pandas.errors.CategoricalConversionWarning": "pandas.io.stata.CategoricalConversionWarning",
        "pandas.errors.ClosedFileError": "pandas.io.pytables.ClosedFileError",
        "pandas.errors.DatabaseError": "pandas.io.sql.DatabaseError",
        "pandas.errors.DtypeWarning": "pandas.io.parsers.c_parser_wrapper.DtypeWarning",
        "pandas.errors.EmptyDataError": "pandas.io.parsers.python_parser.EmptyDataError",
        "pandas.errors.IncompatibilityWarning": "pandas.io.pytables.IncompatibilityWarning",
        "pandas.errors.InvalidColumnName": "pandas.io.stata.InvalidColumnName",
        "pandas.util.version.InvalidVersion": "pandas.util.version.InvalidVersion",
        "pandas.errors.NoBufferPresent": "pandas.errors.NoBufferPresent",
        "pandas.errors.ParserError": "pandas.io.xml.ParserError",
        "pandas.errors.ParserWarning": "pandas.io.parsers.readers.ParserWarning",
        "pandas.errors.PossibleDataLossError": "pandas.io.pytables.PossibleDataLossError",
        "pandas.errors.PossiblePrecisionLoss": "pandas.io.stata.PossiblePrecisionLoss",
        "pandas.errors.PyperclipException": "pandas.errors.PyperclipException",
        "pandas.errors.PyperclipWindowsException": "pandas.errors.PyperclipWindowsException",
        "pandas.errors.ValueLabelTypeMismatch": "pandas.io.stata.ValueLabelTypeMismatch",
        "pandas.io.clipboards.read_clipboard": "pandas.read_clipboard",
        "pandas.io.parsers.readers.read_csv": "pandas.read_csv",
        "pandas.io.excel._base.read_excel": "pandas.read_excel",
        "pandas.io.feather_format.read_feather": "pandas.read_feather",
        "pandas.io.parsers.readers.read_fwf": "pandas.read_fwf",
        "pandas.io.gbq.read_gbq": "pandas.read_gbq",
        "pandas.io.pytables.read_hdf": "pandas.read_hdf",
        "pandas.io.html.read_html": "pandas.read_html",
        "pandas.io.json._json.read_json": "pandas.read_json",
        "pandas.io.orc.read_orc": "pandas.read_orc",
        "pandas.io.parquet.read_parquet": "pandas.read_parquet",
        "pandas.io.pickle.read_pickle": "pandas.read_pickle",
        "pandas.io.sas.sasreader.read_sas": "pandas.read_sas",
        "pandas.io.spss.read_spss": "pandas.read_spss",
        "pandas.io.sql.read_sql": "pandas.read_sql",
        "pandas.io.sql.read_sql_query": "pandas.read_sql_query",
        "pandas.io.sql.read_sql_table": "pandas.read_sql_table",
        "pandas.io.stata.read_stata": "pandas.read_stata",
        "pandas.io.parsers.readers.read_table": "pandas.read_table",
        "pandas.io.xml.read_xml": "pandas.read_xml",
        "pandas.io.pickle.to_pickle": "pandas.to_pickle",
        "pandas.io.clipboards.to_clipboard": "pandas.io.clipboards.to_clipboard",
        "pandas._typing.BaseBuffer": "pandas.io.common.BaseBuffer",
        "pandas.io.common.IOArgs": "pandas.io.common.IOArgs",
        "pandas.io.common.IOHandles": "pandas.io.parsers.readers.IOHandles",
        "pandas._typing.ReadBuffer": "pandas.io.common.ReadBuffer",
        "pandas._typing.ReadCsvBuffer": "pandas.io.common.ReadCsvBuffer",
        "pandas.io.common.dedup_names": "pandas.io.parsers.python_parser.dedup_names",
        "pandas.io.common.file_exists": "pandas.io.xml.file_exists",
        "pandas.io.common.file_path_to_url": "pandas.io.common.file_path_to_url",
        "pandas.io.common.get_compression_method": "pandas.io.common.get_compression_method",
        "pandas.io.common.infer_compression": "pandas.io.xml.infer_compression",
        "pandas.io.common.is_fsspec_url": "pandas.io.xml.is_fsspec_url",
        "pandas.io.common.is_potential_multi_index": "pandas.io.parsers.python_parser.is_potential_multi_index",
        "pandas.io.common.is_url": "pandas.io.xml.is_url",
        "pandas.io.common.urlopen": "pandas.io.common.urlopen",
        "pandas.io.common.validate_header_arg": "pandas.io.parsers.readers.validate_header_arg",
        "pandas.io.excel._util.register_writer": "pandas.io.excel.register_writer",
        "pandas.io._util.arrow_string_types_mapper": "pandas.io.parsers.arrow_parser_wrapper.arrow_string_types_mapper",
        "pandas.io.feather_format.to_feather": "pandas.io.feather_format.to_feather",
        "pandas.io.formats.info.BaseInfo": "pandas.io.formats.info.BaseInfo",
        "pandas.io.formats.info.DataFrameInfoPrinter": "pandas.io.formats.info.DataFrameInfoPrinter",
        "pandas.io.formats.info.DataFrameTableBuilder": "pandas.io.formats.info.DataFrameTableBuilder",
        "pandas.io.formats.info.DataFrameTableBuilderNonVerbose": "pandas.io.formats.info.DataFrameTableBuilderNonVerbose",
        "pandas.io.formats.info.DataFrameTableBuilderVerbose": "pandas.io.formats.info.DataFrameTableBuilderVerbose",
        "pandas.io.formats.info.InfoPrinterAbstract": "pandas.io.formats.info.InfoPrinterAbstract",
        "pandas.io.formats.info.SeriesInfoPrinter": "pandas.io.formats.info.SeriesInfoPrinter",
        "pandas.io.formats.info.SeriesTableBuilder": "pandas.io.formats.info.SeriesTableBuilder",
        "pandas.io.formats.info.SeriesTableBuilderNonVerbose": "pandas.io.formats.info.SeriesTableBuilderNonVerbose",
        "pandas.io.formats.info.SeriesTableBuilderVerbose": "pandas.io.formats.info.SeriesTableBuilderVerbose",
        "pandas.io.formats.info.TableBuilderAbstract": "pandas.io.formats.info.TableBuilderAbstract",
        "pandas.io.formats.info.TableBuilderVerboseMixin": "pandas.io.formats.info.TableBuilderVerboseMixin",
        "pandas.io.gbq.to_gbq": "pandas.io.gbq.to_gbq",
        "pandas.io.parsers.readers.TextParser": "pandas.io.xml.TextParser",
        "pandas.io.json._table_schema.build_table_schema": "pandas.io.json.build_table_schema",
        "pandas._libs.json.ujson_dumps": "pandas.io.json.dumps",
        "pandas._libs.json.ujson_loads": "pandas.io.json.loads",
        "pandas.io.json._json.to_json": "pandas.io.json.to_json",
        "pandas.io.orc.to_orc": "pandas.io.orc.to_orc",
        "pandas.io.parquet.BaseImpl": "pandas.io.parquet.BaseImpl",
        "pandas.io.parquet.FastParquetImpl": "pandas.io.parquet.FastParquetImpl",
        "pandas.io.parquet.PyArrowImpl": "pandas.io.parquet.PyArrowImpl",
        "pandas.io.parquet.get_engine": "pandas.io.parquet.get_engine",
        "pandas.io.parquet.to_parquet": "pandas.io.parquet.to_parquet",
        "pandas.io.parsers.readers.TextFileReader": "pandas.io.parsers.readers.TextFileReader",
        "pandas.io.parsers.arrow_parser_wrapper.ArrowParserWrapper": "pandas.io.parsers.readers.ArrowParserWrapper",
        "pandas.io.parsers.base_parser.ParserBase": "pandas.io.parsers.readers.ParserBase",
        "pandas.io.parsers.base_parser.is_index_col": "pandas.io.parsers.readers.is_index_col",
        "pandas._libs.parsers.TextReader": "pandas._libs.parsers.TextReader",
        "pandas._libs.parsers.sanitize_objects": "pandas._libs.parsers.sanitize_objects",
        "pandas.io.parsers.c_parser_wrapper.CParserWrapper": "pandas.io.parsers.readers.CParserWrapper",
        "pandas.io.parsers.c_parser_wrapper.ensure_dtype_objs": "pandas.io.parsers.c_parser_wrapper.ensure_dtype_objs",
        "pandas.io.parsers.python_parser.FixedWidthFieldParser": "pandas.io.parsers.readers.FixedWidthFieldParser",
        "pandas.io.parsers.python_parser.FixedWidthReader": "pandas.io.parsers.python_parser.FixedWidthReader",
        "pandas.io.parsers.python_parser.PythonParser": "pandas.io.parsers.readers.PythonParser",
        "pandas.io.parsers.python_parser.count_empty_vals": "pandas.io.parsers.python_parser.count_empty_vals",
        "pandas.io.parsers.readers.validate_integer": "pandas.io.parsers.readers.validate_integer",
        "pandas.compat.pickle_compat.Unpickler": "pandas.compat.pickle_compat.Unpickler",
        "pandas.compat.pickle_compat.load": "pandas.compat.pickle_compat.load",
        "pandas.compat.pickle_compat.load_newobj": "pandas.compat.pickle_compat.load_newobj",
        "pandas.compat.pickle_compat.load_newobj_ex": "pandas.compat.pickle_compat.load_newobj_ex",
        "pandas.compat.pickle_compat.load_reduce": "pandas.compat.pickle_compat.load_reduce",
        "pandas.compat.pickle_compat.loads": "pandas.compat.pickle_compat.loads",
        "pandas.compat.pickle_compat.patch_pickle": "pandas.io.pytables.patch_pickle",
        "pandas.io.pytables.AppendableFrameTable": "pandas.io.pytables.AppendableFrameTable",
        "pandas.io.pytables.AppendableMultiFrameTable": "pandas.io.pytables.AppendableMultiFrameTable",
        "pandas.io.pytables.AppendableMultiSeriesTable": "pandas.io.pytables.AppendableMultiSeriesTable",
        "pandas.io.pytables.AppendableSeriesTable": "pandas.io.pytables.AppendableSeriesTable",
        "pandas.io.pytables.AppendableTable": "pandas.io.pytables.AppendableTable",
        "pandas.io.pytables.BlockManagerFixed": "pandas.io.pytables.BlockManagerFixed",
        "pandas.io.pytables.DataCol": "pandas.io.pytables.DataCol",
        "pandas.io.pytables.DataIndexableCol": "pandas.io.pytables.DataIndexableCol",
        "pandas.io.pytables.Fixed": "pandas.io.pytables.Fixed",
        "pandas.io.pytables.FrameFixed": "pandas.io.pytables.FrameFixed",
        "pandas.io.pytables.GenericDataIndexableCol": "pandas.io.pytables.GenericDataIndexableCol",
        "pandas.io.pytables.GenericFixed": "pandas.io.pytables.GenericFixed",
        "pandas.io.pytables.GenericIndexCol": "pandas.io.pytables.GenericIndexCol",
        "pandas.io.pytables.GenericTable": "pandas.io.pytables.GenericTable",
        "pandas.io.pytables.IndexCol": "pandas.io.pytables.IndexCol",
        "pandas.io.pytables.Selection": "pandas.io.pytables.Selection",
        "pandas.io.pytables.SeriesFixed": "pandas.io.pytables.SeriesFixed",
        "pandas.io.pytables.Table": "pandas.io.pytables.Table",
        "pandas.io.pytables.TableIterator": "pandas.io.pytables.TableIterator",
        "pandas.io.pytables.WORMTable": "pandas.io.pytables.WORMTable",
        "pandas.io.pytables.to_hdf": "pandas.io.pytables.to_hdf",
        "pandas.io.sas.sasreader.ReaderBase": "pandas.io.sas.sasreader.ReaderBase",
        "pandas.io.sql.BaseEngine": "pandas.io.sql.BaseEngine",
        "pandas.io.sql.PandasSQL": "pandas.io.sql.PandasSQL",
        "pandas.io.sql.SQLAlchemyEngine": "pandas.io.sql.SQLAlchemyEngine",
        "pandas.io.sql.SQLDatabase": "pandas.io.sql.SQLDatabase",
        "pandas.io.sql.SQLTable": "pandas.io.sql.SQLTable",
        "pandas.io.sql.SQLiteDatabase": "pandas.io.sql.SQLiteDatabase",
        "pandas.io.sql.SQLiteTable": "pandas.io.sql.SQLiteTable",
        "pandas.io.sql.execute": "pandas.io.sql.execute",
        "pandas.io.sql.get_engine": "pandas.io.sql.get_engine",
        "pandas.io.sql.get_schema": "pandas.io.sql.get_schema",
        "pandas.io.sql.has_table": "pandas.io.sql.table_exists",
        "pandas.io.sql.pandasSQL_builder": "pandas.io.sql.pandasSQL_builder",
        "pandas.io.sql.to_sql": "pandas.io.sql.to_sql",
        "pandas.io.stata.StataMissingValue": "pandas.io.stata.StataMissingValue",
        "pandas.io.stata.StataNonCatValueLabel": "pandas.io.stata.StataNonCatValueLabel",
        "pandas.io.stata.StataParser": "pandas.io.stata.StataParser",
        "pandas.io.stata.StataStrLWriter": "pandas.io.stata.StataStrLWriter",
        "pandas.io.stata.StataValueLabel": "pandas.io.stata.StataValueLabel",
        "pandas.io.stata.StataWriter": "pandas.io.stata.StataWriter",
        "pandas.io.stata.StataWriter117": "pandas.io.stata.StataWriter117",
        "pandas.io.stata.StataWriterUTF8": "pandas.io.stata.StataWriterUTF8",
        "pandas.io.xml.get_data_from_filepath": "pandas.io.xml.get_data_from_filepath",
        "pandas.io.xml.preprocess_data": "pandas.io.xml.preprocess_data",
        "pandas.io.json._normalize.json_normalize": "pandas.json_normalize",
        "pandas.plotting._core.PlotAccessor": "pandas.plotting.PlotAccessor",
        "pandas.plotting._misc.andrews_curves": "pandas.plotting.andrews_curves",
        "pandas.plotting._misc.autocorrelation_plot": "pandas.plotting.autocorrelation_plot",
        "pandas.plotting._misc.bootstrap_plot": "pandas.plotting.bootstrap_plot",
        "pandas.plotting._core.boxplot": "pandas.plotting.boxplot",
        "pandas.plotting._core.boxplot_frame": "pandas.plotting.boxplot_frame",
        "pandas.plotting._misc.deregister": "pandas.plotting.deregister_matplotlib_converters",
        "pandas.plotting._core.hist_frame": "pandas.plotting.hist_frame",
        "pandas.plotting._core.hist_series": "pandas.plotting.hist_series",
        "pandas.plotting._misc.lag_plot": "pandas.plotting.lag_plot",
        "pandas.plotting._misc.parallel_coordinates": "pandas.plotting.parallel_coordinates",
        "pandas.plotting._misc.radviz": "pandas.plotting.radviz",
        "pandas.plotting._misc.register": "pandas.plotting.register_matplotlib_converters",
        "pandas.plotting._misc.scatter_matrix": "pandas.plotting.scatter_matrix",
        "pandas.plotting._misc.table": "pandas.plotting.table",
        "pandas.util._print_versions.show_versions": "pandas.show_versions",
        "pandas.util._tester.test": "pandas.test",
        "pandas._testing.asserters.assert_extension_array_equal": "pandas.testing.assert_extension_array_equal",
        "pandas._testing.asserters.assert_frame_equal": "pandas.testing.assert_frame_equal",
        "pandas._testing.asserters.assert_index_equal": "pandas.testing.assert_index_equal",
        "pandas._testing.asserters.assert_series_equal": "pandas.testing.assert_series_equal",
        "pandas.util.version.InfinityType": "pandas.util.version.InfinityType",
        "pandas.util.version.LegacyVersion": "pandas.util.version.LegacyVersion",
        "pandas.util.version.NegativeInfinityType": "pandas.util.version.NegativeInfinityType",
        "pandas.util.version.parse": "pandas.util.version.parse"
    },
    "sklearn": {
        "sklearn.base.BaseEstimator": "sklearn.utils.metaestimators.BaseEstimator",
        "sklearn.base.BiclusterMixin": "sklearn.base.BiclusterMixin",
        "sklearn.base.ClassNamePrefixFeaturesOutMixin": "sklearn.base.ClassNamePrefixFeaturesOutMixin",
        "sklearn.base.ClassifierMixin": "sklearn.base.ClassifierMixin",
        "sklearn.base.ClusterMixin": "sklearn.base.ClusterMixin",
        "sklearn.base.DensityMixin": "sklearn.base.DensityMixin",
        "sklearn.base.MetaEstimatorMixin": "sklearn.base.MetaEstimatorMixin",
        "sklearn.base.MultiOutputMixin": "sklearn.base.MultiOutputMixin",
        "sklearn.base.OneToOneFeatureMixin": "sklearn.feature_extraction.text.OneToOneFeatureMixin",
        "sklearn.base.OutlierMixin": "sklearn.base.OutlierMixin",
        "sklearn.base.RegressorMixin": "sklearn.base.RegressorMixin",
        "sklearn.base.TransformerMixin": "sklearn.feature_extraction.text.TransformerMixin",
        "sklearn.utils.validation.check_X_y": "sklearn.utils.validation.check_X_y",
        "sklearn.utils.validation.check_array": "sklearn.utils.validation.check_array",
        "sklearn.utils.validation.check_is_fitted": "sklearn.utils.validation.check_is_fitted",
        "sklearn.base.clone": "sklearn.clone",
        "sklearn.utils._estimator_html_repr.estimator_html_repr": "sklearn.utils.estimator_html_repr",
        "sklearn._config.get_config": "sklearn.utils.parallel.get_config",
        "sklearn.base.is_classifier": "sklearn.base.is_classifier",
        "sklearn.base.is_outlier_detector": "sklearn.base.is_outlier_detector",
        "sklearn.base.is_regressor": "sklearn.base.is_regressor",
        "sklearn.utils._param_validation.validate_parameter_constraints": "sklearn.base.validate_parameter_constraints",
        "sklearn._config.config_context": "sklearn.utils.parallel.config_context",
        "sklearn.datasets._base.clear_data_home": "sklearn.datasets.clear_data_home",
        "sklearn.datasets._svmlight_format_io.dump_svmlight_file": "sklearn.datasets.dump_svmlight_file",
        "sklearn.datasets._twenty_newsgroups.fetch_20newsgroups": "sklearn.datasets.fetch_20newsgroups",
        "sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized": "sklearn.datasets.fetch_20newsgroups_vectorized",
        "sklearn.datasets._california_housing.fetch_california_housing": "sklearn.datasets.fetch_california_housing",
        "sklearn.datasets._covtype.fetch_covtype": "sklearn.datasets.fetch_covtype",
        "sklearn.datasets._kddcup99.fetch_kddcup99": "sklearn.datasets.fetch_kddcup99",
        "sklearn.datasets._lfw.fetch_lfw_pairs": "sklearn.datasets.fetch_lfw_pairs",
        "sklearn.datasets._lfw.fetch_lfw_people": "sklearn.datasets.fetch_lfw_people",
        "sklearn.datasets._olivetti_faces.fetch_olivetti_faces": "sklearn.datasets.fetch_olivetti_faces",
        "sklearn.datasets._openml.fetch_openml": "sklearn.datasets.fetch_openml",
        "sklearn.datasets._rcv1.fetch_rcv1": "sklearn.datasets.fetch_rcv1",
        "sklearn.datasets._species_distributions.fetch_species_distributions": "sklearn.datasets.fetch_species_distributions",
        "sklearn.datasets._base.get_data_home": "sklearn.datasets.get_data_home",
        "sklearn.datasets._base.load_breast_cancer": "sklearn.datasets.load_breast_cancer",
        "sklearn.datasets._base.load_diabetes": "sklearn.datasets.load_diabetes",
        "sklearn.datasets._base.load_digits": "sklearn.datasets.load_digits",
        "sklearn.datasets._base.load_files": "sklearn.datasets.load_files",
        "sklearn.datasets._base.load_iris": "sklearn.datasets.load_iris",
        "sklearn.datasets._base.load_linnerud": "sklearn.datasets.load_linnerud",
        "sklearn.datasets._base.load_sample_image": "sklearn.datasets.load_sample_image",
        "sklearn.datasets._base.load_sample_images": "sklearn.datasets.load_sample_images",
        "sklearn.datasets._svmlight_format_io.load_svmlight_file": "sklearn.datasets.load_svmlight_file",
        "sklearn.datasets._svmlight_format_io.load_svmlight_files": "sklearn.datasets.load_svmlight_files",
        "sklearn.datasets._base.load_wine": "sklearn.datasets.load_wine",
        "sklearn.datasets._samples_generator.make_biclusters": "sklearn.datasets.make_biclusters",
        "sklearn.datasets._samples_generator.make_blobs": "sklearn.datasets.make_blobs",
        "sklearn.datasets._samples_generator.make_checkerboard": "sklearn.datasets.make_checkerboard",
        "sklearn.datasets._samples_generator.make_circles": "sklearn.datasets.make_circles",
        "sklearn.datasets._samples_generator.make_classification": "sklearn.datasets.make_classification",
        "sklearn.datasets._samples_generator.make_friedman1": "sklearn.datasets.make_friedman1",
        "sklearn.datasets._samples_generator.make_friedman2": "sklearn.datasets.make_friedman2",
        "sklearn.datasets._samples_generator.make_friedman3": "sklearn.datasets.make_friedman3",
        "sklearn.datasets._samples_generator.make_gaussian_quantiles": "sklearn.datasets.make_gaussian_quantiles",
        "sklearn.datasets._samples_generator.make_hastie_10_2": "sklearn.datasets.make_hastie_10_2",
        "sklearn.datasets._samples_generator.make_low_rank_matrix": "sklearn.datasets.make_low_rank_matrix",
        "sklearn.datasets._samples_generator.make_moons": "sklearn.datasets.make_moons",
        "sklearn.datasets._samples_generator.make_multilabel_classification": "sklearn.datasets.make_multilabel_classification",
        "sklearn.datasets._samples_generator.make_regression": "sklearn.datasets.make_regression",
        "sklearn.datasets._samples_generator.make_s_curve": "sklearn.datasets.make_s_curve",
        "sklearn.datasets._samples_generator.make_sparse_coded_signal": "sklearn.datasets.make_sparse_coded_signal",
        "sklearn.datasets._samples_generator.make_sparse_spd_matrix": "sklearn.datasets.make_sparse_spd_matrix",
        "sklearn.datasets._samples_generator.make_sparse_uncorrelated": "sklearn.datasets.make_sparse_uncorrelated",
        "sklearn.datasets._samples_generator.make_spd_matrix": "sklearn.datasets.make_spd_matrix",
        "sklearn.datasets._samples_generator.make_swiss_roll": "sklearn.datasets.make_swiss_roll",
        "sklearn.exceptions.ConvergenceWarning": "sklearn.utils.optimize.ConvergenceWarning",
        "sklearn.exceptions.DataConversionWarning": "sklearn.utils.validation.DataConversionWarning",
        "sklearn.exceptions.DataDimensionalityWarning": "sklearn.exceptions.DataDimensionalityWarning",
        "sklearn.exceptions.EfficiencyWarning": "sklearn.exceptions.EfficiencyWarning",
        "sklearn.exceptions.FitFailedWarning": "sklearn.exceptions.FitFailedWarning",
        "sklearn.exceptions.NotFittedError": "sklearn.utils.validation.NotFittedError",
        "sklearn.exceptions.PositiveSpectrumWarning": "sklearn.utils.validation.PositiveSpectrumWarning",
        "sklearn.exceptions.SkipTestWarning": "sklearn.exceptions.SkipTestWarning",
        "sklearn.exceptions.UndefinedMetricWarning": "sklearn.exceptions.UndefinedMetricWarning",
        "sklearn.feature_extraction._dict_vectorizer.DictVectorizer": "sklearn.feature_extraction.DictVectorizer",
        "sklearn.feature_extraction._hash.FeatureHasher": "sklearn.feature_extraction.text.FeatureHasher",
        "sklearn.feature_extraction.image.grid_to_graph": "sklearn.feature_extraction.image.grid_to_graph",
        "sklearn.utils._param_validation.Interval": "sklearn.feature_extraction.text.Interval",
        "sklearn.feature_extraction.image.PatchExtractor": "sklearn.feature_extraction.image.PatchExtractor",
        "sklearn.utils.validation.check_random_state": "sklearn.utils.validation.check_random_state",
        "sklearn.feature_extraction.image.extract_patches_2d": "sklearn.feature_extraction.image.extract_patches_2d",
        "sklearn.feature_extraction.image.img_to_graph": "sklearn.feature_extraction.img_to_graph",
        "sklearn.feature_extraction.image.reconstruct_from_patches_2d": "sklearn.feature_extraction.image.reconstruct_from_patches_2d",
        "sklearn.feature_extraction.text.CountVectorizer": "sklearn.feature_extraction.text.CountVectorizer",
        "sklearn.utils._param_validation.HasMethods": "sklearn.feature_extraction.text.HasMethods",
        "sklearn.feature_extraction.text.HashingVectorizer": "sklearn.feature_extraction.text.HashingVectorizer",
        "sklearn.utils._param_validation.StrOptions": "sklearn.feature_extraction.text.StrOptions",
        "sklearn.feature_extraction.text.TfidfTransformer": "sklearn.feature_extraction.text.TfidfTransformer",
        "sklearn.feature_extraction.text.TfidfVectorizer": "sklearn.feature_extraction.text.TfidfVectorizer",
        "sklearn.preprocessing._data.normalize": "sklearn.preprocessing.normalize",
        "sklearn.feature_extraction.text.strip_accents_ascii": "sklearn.feature_extraction.text.strip_accents_ascii",
        "sklearn.feature_extraction.text.strip_accents_unicode": "sklearn.feature_extraction.text.strip_accents_unicode",
        "sklearn.feature_extraction.text.strip_tags": "sklearn.feature_extraction.text.strip_tags",
        "sklearn.linear_model._bayes.ARDRegression": "sklearn.linear_model.ARDRegression",
        "sklearn.linear_model._bayes.BayesianRidge": "sklearn.linear_model.BayesianRidge",
        "sklearn.linear_model._coordinate_descent.ElasticNet": "sklearn.linear_model.ElasticNet",
        "sklearn.linear_model._coordinate_descent.ElasticNetCV": "sklearn.linear_model.ElasticNetCV",
        "sklearn.linear_model._glm.glm.GammaRegressor": "sklearn.linear_model.GammaRegressor",
        "sklearn.linear_model._sgd_fast.Hinge": "sklearn.linear_model.Hinge",
        "sklearn.linear_model._sgd_fast.Huber": "sklearn.linear_model.Huber",
        "sklearn.linear_model._huber.HuberRegressor": "sklearn.linear_model.HuberRegressor",
        "sklearn.linear_model._least_angle.Lars": "sklearn.linear_model.Lars",
        "sklearn.linear_model._least_angle.LarsCV": "sklearn.linear_model.LarsCV",
        "sklearn.linear_model._coordinate_descent.Lasso": "sklearn.linear_model.Lasso",
        "sklearn.linear_model._coordinate_descent.LassoCV": "sklearn.linear_model.LassoCV",
        "sklearn.linear_model._least_angle.LassoLars": "sklearn.linear_model.LassoLars",
        "sklearn.linear_model._least_angle.LassoLarsCV": "sklearn.linear_model.LassoLarsCV",
        "sklearn.linear_model._least_angle.LassoLarsIC": "sklearn.linear_model.LassoLarsIC",
        "sklearn.linear_model._base.LinearRegression": "sklearn.linear_model.LinearRegression",
        "sklearn.linear_model._sgd_fast.Log": "sklearn.linear_model.Log",
        "sklearn.linear_model._logistic.LogisticRegression": "sklearn.linear_model.LogisticRegression",
        "sklearn.linear_model._logistic.LogisticRegressionCV": "sklearn.linear_model.LogisticRegressionCV",
        "sklearn.linear_model._sgd_fast.ModifiedHuber": "sklearn.linear_model.ModifiedHuber",
        "sklearn.linear_model._coordinate_descent.MultiTaskElasticNet": "sklearn.linear_model.MultiTaskElasticNet",
        "sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV": "sklearn.linear_model.MultiTaskElasticNetCV",
        "sklearn.linear_model._coordinate_descent.MultiTaskLasso": "sklearn.linear_model.MultiTaskLasso",
        "sklearn.linear_model._coordinate_descent.MultiTaskLassoCV": "sklearn.linear_model.MultiTaskLassoCV",
        "sklearn.linear_model._omp.OrthogonalMatchingPursuit": "sklearn.linear_model.OrthogonalMatchingPursuit",
        "sklearn.linear_model._omp.OrthogonalMatchingPursuitCV": "sklearn.linear_model.OrthogonalMatchingPursuitCV",
        "sklearn.linear_model._passive_aggressive.PassiveAggressiveClassifier": "sklearn.linear_model.PassiveAggressiveClassifier",
        "sklearn.linear_model._passive_aggressive.PassiveAggressiveRegressor": "sklearn.linear_model.PassiveAggressiveRegressor",
        "sklearn.linear_model._perceptron.Perceptron": "sklearn.linear_model.Perceptron",
        "sklearn.linear_model._glm.glm.PoissonRegressor": "sklearn.linear_model.PoissonRegressor",
        "sklearn.linear_model._quantile.QuantileRegressor": "sklearn.linear_model.QuantileRegressor",
        "sklearn.linear_model._ransac.RANSACRegressor": "sklearn.linear_model.RANSACRegressor",
        "sklearn.linear_model._ridge.Ridge": "sklearn.linear_model.Ridge",
        "sklearn.linear_model._ridge.RidgeCV": "sklearn.linear_model.RidgeCV",
        "sklearn.linear_model._ridge.RidgeClassifier": "sklearn.linear_model.RidgeClassifier",
        "sklearn.linear_model._ridge.RidgeClassifierCV": "sklearn.linear_model.RidgeClassifierCV",
        "sklearn.linear_model._stochastic_gradient.SGDClassifier": "sklearn.linear_model.SGDClassifier",
        "sklearn.linear_model._stochastic_gradient.SGDOneClassSVM": "sklearn.linear_model.SGDOneClassSVM",
        "sklearn.linear_model._stochastic_gradient.SGDRegressor": "sklearn.linear_model.SGDRegressor",
        "sklearn.linear_model._sgd_fast.SquaredLoss": "sklearn.linear_model.SquaredLoss",
        "sklearn.linear_model._theil_sen.TheilSenRegressor": "sklearn.linear_model.TheilSenRegressor",
        "sklearn.linear_model._glm.glm.TweedieRegressor": "sklearn.linear_model.TweedieRegressor",
        "sklearn.linear_model._coordinate_descent.enet_path": "sklearn.linear_model.enet_path",
        "sklearn.linear_model._least_angle.lars_path": "sklearn.linear_model.lars_path",
        "sklearn.linear_model._least_angle.lars_path_gram": "sklearn.linear_model.lars_path_gram",
        "sklearn.linear_model._coordinate_descent.lasso_path": "sklearn.linear_model.lasso_path",
        "sklearn.linear_model._omp.orthogonal_mp": "sklearn.linear_model.orthogonal_mp",
        "sklearn.linear_model._omp.orthogonal_mp_gram": "sklearn.linear_model.orthogonal_mp_gram",
        "sklearn.linear_model._ridge.ridge_regression": "sklearn.linear_model.ridge_regression",
        "sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay": "sklearn.metrics.ConfusionMatrixDisplay",
        "sklearn.metrics._plot.det_curve.DetCurveDisplay": "sklearn.metrics.DetCurveDisplay",
        "sklearn.metrics._dist_metrics.DistanceMetric": "sklearn.metrics.DistanceMetric",
        "sklearn.metrics._plot.precision_recall_curve.PrecisionRecallDisplay": "sklearn.metrics.PrecisionRecallDisplay",
        "sklearn.metrics._plot.regression.PredictionErrorDisplay": "sklearn.metrics.PredictionErrorDisplay",
        "sklearn.metrics._plot.roc_curve.RocCurveDisplay": "sklearn.metrics.RocCurveDisplay",
        "sklearn.metrics._classification.accuracy_score": "sklearn.metrics.accuracy_score",
        "sklearn.metrics.cluster._supervised.adjusted_mutual_info_score": "sklearn.metrics.cluster.adjusted_mutual_info_score",
        "sklearn.metrics.cluster._supervised.adjusted_rand_score": "sklearn.metrics.cluster.adjusted_rand_score",
        "sklearn.metrics._ranking.auc": "sklearn.metrics.auc",
        "sklearn.metrics._ranking.average_precision_score": "sklearn.metrics.average_precision_score",
        "sklearn.metrics._classification.balanced_accuracy_score": "sklearn.metrics.balanced_accuracy_score",
        "sklearn.metrics._classification.brier_score_loss": "sklearn.metrics.brier_score_loss",
        "sklearn.metrics.cluster._unsupervised.calinski_harabasz_score": "sklearn.metrics.cluster.calinski_harabasz_score",
        "sklearn.metrics._scorer.check_scoring": "sklearn.metrics.check_scoring",
        "sklearn.metrics._classification.class_likelihood_ratios": "sklearn.metrics.class_likelihood_ratios",
        "sklearn.metrics._classification.classification_report": "sklearn.metrics.classification_report",
        "sklearn.metrics.cluster._supervised.completeness_score": "sklearn.metrics.completeness_score",
        "sklearn.metrics.cluster._bicluster.consensus_score": "sklearn.metrics.consensus_score",
        "sklearn.metrics.cluster._supervised.contingency_matrix": "sklearn.metrics.cluster.contingency_matrix",
        "sklearn.metrics.cluster._unsupervised.davies_bouldin_score": "sklearn.metrics.davies_bouldin_score",
        "sklearn.metrics.cluster._supervised.entropy": "sklearn.metrics.cluster.entropy",
        "sklearn.metrics.cluster._expected_mutual_info_fast.expected_mutual_information": "sklearn.metrics.cluster.expected_mutual_information",
        "sklearn.metrics.cluster._supervised.fowlkes_mallows_score": "sklearn.metrics.fowlkes_mallows_score",
        "sklearn.metrics.cluster._supervised.homogeneity_completeness_v_measure": "sklearn.metrics.homogeneity_completeness_v_measure",
        "sklearn.metrics.cluster._supervised.homogeneity_score": "sklearn.metrics.homogeneity_score",
        "sklearn.metrics.cluster._supervised.mutual_info_score": "sklearn.metrics.mutual_info_score",
        "sklearn.metrics.cluster._supervised.normalized_mutual_info_score": "sklearn.metrics.normalized_mutual_info_score",
        "sklearn.metrics.cluster._supervised.pair_confusion_matrix": "sklearn.metrics.pair_confusion_matrix",
        "sklearn.metrics.cluster._supervised.rand_score": "sklearn.metrics.rand_score",
        "sklearn.metrics.cluster._unsupervised.silhouette_samples": "sklearn.metrics.silhouette_samples",
        "sklearn.metrics.cluster._unsupervised.silhouette_score": "sklearn.metrics.silhouette_score",
        "sklearn.metrics.cluster._supervised.v_measure_score": "sklearn.metrics.v_measure_score",
        "sklearn.metrics._classification.cohen_kappa_score": "sklearn.metrics.cohen_kappa_score",
        "sklearn.metrics._classification.confusion_matrix": "sklearn.metrics.confusion_matrix",
        "sklearn.metrics._ranking.coverage_error": "sklearn.metrics.coverage_error",
        "sklearn.metrics._regression.d2_absolute_error_score": "sklearn.metrics.d2_absolute_error_score",
        "sklearn.metrics._regression.d2_pinball_score": "sklearn.metrics.d2_pinball_score",
        "sklearn.metrics._regression.d2_tweedie_score": "sklearn.metrics.d2_tweedie_score",
        "sklearn.metrics._ranking.dcg_score": "sklearn.metrics.dcg_score",
        "sklearn.metrics._ranking.det_curve": "sklearn.metrics.det_curve",
        "sklearn.metrics.pairwise.euclidean_distances": "sklearn.metrics.pairwise.euclidean_distances",
        "sklearn.metrics._regression.explained_variance_score": "sklearn.metrics.explained_variance_score",
        "sklearn.metrics._classification.f1_score": "sklearn.metrics.f1_score",
        "sklearn.metrics._classification.fbeta_score": "sklearn.metrics.fbeta_score",
        "sklearn.metrics._scorer.get_scorer": "sklearn.metrics.get_scorer",
        "sklearn.metrics._scorer.get_scorer_names": "sklearn.metrics.get_scorer_names",
        "sklearn.metrics._classification.hamming_loss": "sklearn.metrics.hamming_loss",
        "sklearn.metrics._classification.hinge_loss": "sklearn.metrics.hinge_loss",
        "sklearn.metrics._classification.jaccard_score": "sklearn.metrics.jaccard_score",
        "sklearn.metrics._ranking.label_ranking_average_precision_score": "sklearn.metrics.label_ranking_average_precision_score",
        "sklearn.metrics._ranking.label_ranking_loss": "sklearn.metrics.label_ranking_loss",
        "sklearn.metrics._classification.log_loss": "sklearn.metrics.log_loss",
        "sklearn.metrics._scorer.make_scorer": "sklearn.metrics.make_scorer",
        "sklearn.metrics._classification.matthews_corrcoef": "sklearn.metrics.matthews_corrcoef",
        "sklearn.metrics._regression.max_error": "sklearn.metrics.max_error",
        "sklearn.metrics._regression.mean_absolute_error": "sklearn.metrics.mean_absolute_error",
        "sklearn.metrics._regression.mean_absolute_percentage_error": "sklearn.metrics.mean_absolute_percentage_error",
        "sklearn.metrics._regression.mean_gamma_deviance": "sklearn.metrics.mean_gamma_deviance",
        "sklearn.metrics._regression.mean_pinball_loss": "sklearn.metrics.mean_pinball_loss",
        "sklearn.metrics._regression.mean_poisson_deviance": "sklearn.metrics.mean_poisson_deviance",
        "sklearn.metrics._regression.mean_squared_error": "sklearn.metrics.mean_squared_error",
        "sklearn.metrics._regression.mean_squared_log_error": "sklearn.metrics.mean_squared_log_error",
        "sklearn.metrics._regression.mean_tweedie_deviance": "sklearn.metrics.mean_tweedie_deviance",
        "sklearn.metrics._regression.median_absolute_error": "sklearn.metrics.median_absolute_error",
        "sklearn.metrics._classification.multilabel_confusion_matrix": "sklearn.metrics.multilabel_confusion_matrix",
        "sklearn.metrics.pairwise.nan_euclidean_distances": "sklearn.metrics.pairwise.nan_euclidean_distances",
        "sklearn.metrics._ranking.ndcg_score": "sklearn.metrics.ndcg_score",
        "sklearn.metrics._pairwise_distances_reduction._dispatcher.ArgKmin": "sklearn.metrics.pairwise.ArgKmin",
        "sklearn.utils.parallel.Parallel": "sklearn.utils.parallel.Parallel",
        "sklearn.metrics.pairwise.additive_chi2_kernel": "sklearn.metrics.pairwise.additive_chi2_kernel",
        "sklearn.utils.validation.check_non_negative": "sklearn.utils.validation.check_non_negative",
        "sklearn.metrics.pairwise.check_paired_arrays": "sklearn.metrics.pairwise.check_paired_arrays",
        "sklearn.metrics.pairwise.check_pairwise_arrays": "sklearn.metrics.pairwise.check_pairwise_arrays",
        "sklearn.metrics.pairwise.chi2_kernel": "sklearn.metrics.pairwise.chi2_kernel",
        "sklearn.metrics.pairwise.cosine_distances": "sklearn.metrics.pairwise.cosine_distances",
        "sklearn.metrics.pairwise.cosine_similarity": "sklearn.metrics.pairwise.cosine_similarity",
        "sklearn.utils.parallel.delayed": "sklearn.utils.parallel.delayed",
        "sklearn.metrics.pairwise.distance_metrics": "sklearn.metrics.pairwise.distance_metrics",
        "sklearn.utils.gen_batches": "sklearn.utils.gen_batches",
        "sklearn.utils.gen_even_slices": "sklearn.utils.gen_even_slices",
        "sklearn.utils.get_chunk_n_rows": "sklearn.utils.get_chunk_n_rows",
        "sklearn.metrics.pairwise.haversine_distances": "sklearn.metrics.pairwise.haversine_distances",
        "sklearn.utils.is_scalar_nan": "sklearn.utils.is_scalar_nan",
        "sklearn.metrics.pairwise.kernel_metrics": "sklearn.metrics.pairwise.kernel_metrics",
        "sklearn.metrics.pairwise.laplacian_kernel": "sklearn.metrics.pairwise.laplacian_kernel",
        "sklearn.metrics.pairwise.linear_kernel": "sklearn.metrics.pairwise.linear_kernel",
        "sklearn.metrics.pairwise.manhattan_distances": "sklearn.metrics.pairwise.manhattan_distances",
        "sklearn.metrics.pairwise.paired_cosine_distances": "sklearn.metrics.pairwise.paired_cosine_distances",
        "sklearn.metrics.pairwise.paired_distances": "sklearn.metrics.pairwise.paired_distances",
        "sklearn.metrics.pairwise.paired_euclidean_distances": "sklearn.metrics.pairwise.paired_euclidean_distances",
        "sklearn.metrics.pairwise.paired_manhattan_distances": "sklearn.metrics.pairwise.paired_manhattan_distances",
        "sklearn.metrics.pairwise.pairwise_distances": "sklearn.metrics.pairwise_distances",
        "sklearn.metrics.pairwise.pairwise_distances_argmin": "sklearn.metrics.pairwise_distances_argmin",
        "sklearn.metrics.pairwise.pairwise_distances_argmin_min": "sklearn.metrics.pairwise_distances_argmin_min",
        "sklearn.metrics.pairwise.pairwise_distances_chunked": "sklearn.metrics.pairwise_distances_chunked",
        "sklearn.metrics.pairwise.pairwise_kernels": "sklearn.metrics.pairwise_kernels",
        "sklearn.externals._packaging.version.parse": "sklearn.utils.parse_version",
        "sklearn.metrics.pairwise.polynomial_kernel": "sklearn.metrics.pairwise.polynomial_kernel",
        "sklearn.metrics.pairwise.rbf_kernel": "sklearn.metrics.pairwise.rbf_kernel",
        "sklearn.utils.extmath.row_norms": "sklearn.utils.extmath.row_norms",
        "sklearn.utils.extmath.safe_sparse_dot": "sklearn.utils.extmath.safe_sparse_dot",
        "sklearn.metrics.pairwise.sigmoid_kernel": "sklearn.metrics.pairwise.sigmoid_kernel",
        "sklearn.metrics._ranking.precision_recall_curve": "sklearn.metrics.precision_recall_curve",
        "sklearn.metrics._classification.precision_recall_fscore_support": "sklearn.metrics.precision_recall_fscore_support",
        "sklearn.metrics._classification.precision_score": "sklearn.metrics.precision_score",
        "sklearn.metrics._regression.r2_score": "sklearn.metrics.r2_score",
        "sklearn.metrics._classification.recall_score": "sklearn.metrics.recall_score",
        "sklearn.metrics._ranking.roc_auc_score": "sklearn.metrics.roc_auc_score",
        "sklearn.metrics._ranking.roc_curve": "sklearn.metrics.roc_curve",
        "sklearn.metrics._ranking.top_k_accuracy_score": "sklearn.metrics.top_k_accuracy_score",
        "sklearn.metrics._classification.zero_one_loss": "sklearn.metrics.zero_one_loss",
        "sklearn.model_selection._split.BaseCrossValidator": "sklearn.model_selection.BaseCrossValidator",
        "sklearn.model_selection._split.BaseShuffleSplit": "sklearn.model_selection.BaseShuffleSplit",
        "sklearn.model_selection._search.GridSearchCV": "sklearn.model_selection.GridSearchCV",
        "sklearn.model_selection._split.GroupKFold": "sklearn.model_selection.GroupKFold",
        "sklearn.model_selection._split.GroupShuffleSplit": "sklearn.model_selection.GroupShuffleSplit",
        "sklearn.model_selection._split.KFold": "sklearn.model_selection.KFold",
        "sklearn.model_selection._plot.LearningCurveDisplay": "sklearn.model_selection.LearningCurveDisplay",
        "sklearn.model_selection._split.LeaveOneGroupOut": "sklearn.model_selection.LeaveOneGroupOut",
        "sklearn.model_selection._split.LeaveOneOut": "sklearn.model_selection.LeaveOneOut",
        "sklearn.model_selection._split.LeavePGroupsOut": "sklearn.model_selection.LeavePGroupsOut",
        "sklearn.model_selection._split.LeavePOut": "sklearn.model_selection.LeavePOut",
        "sklearn.model_selection._search.ParameterGrid": "sklearn.model_selection.ParameterGrid",
        "sklearn.model_selection._search.ParameterSampler": "sklearn.model_selection.ParameterSampler",
        "sklearn.model_selection._split.PredefinedSplit": "sklearn.model_selection.PredefinedSplit",
        "sklearn.model_selection._search.RandomizedSearchCV": "sklearn.model_selection.RandomizedSearchCV",
        "sklearn.model_selection._split.RepeatedKFold": "sklearn.model_selection.RepeatedKFold",
        "sklearn.model_selection._split.RepeatedStratifiedKFold": "sklearn.model_selection.RepeatedStratifiedKFold",
        "sklearn.model_selection._split.ShuffleSplit": "sklearn.model_selection.ShuffleSplit",
        "sklearn.model_selection._split.StratifiedGroupKFold": "sklearn.model_selection.StratifiedGroupKFold",
        "sklearn.model_selection._split.StratifiedKFold": "sklearn.model_selection.StratifiedKFold",
        "sklearn.model_selection._split.StratifiedShuffleSplit": "sklearn.model_selection.StratifiedShuffleSplit",
        "sklearn.model_selection._split.TimeSeriesSplit": "sklearn.model_selection.TimeSeriesSplit",
        "sklearn.model_selection._split.check_cv": "sklearn.model_selection.check_cv",
        "sklearn.model_selection._validation.cross_val_predict": "sklearn.model_selection.cross_val_predict",
        "sklearn.model_selection._validation.cross_val_score": "sklearn.model_selection.cross_val_score",
        "sklearn.model_selection._validation.cross_validate": "sklearn.model_selection.cross_validate",
        "sklearn.model_selection._validation.learning_curve": "sklearn.model_selection.learning_curve",
        "sklearn.model_selection._validation.permutation_test_score": "sklearn.model_selection.permutation_test_score",
        "sklearn.model_selection._split.train_test_split": "sklearn.model_selection.train_test_split",
        "sklearn.model_selection._validation.validation_curve": "sklearn.model_selection.validation_curve",
        "sklearn.preprocessing._data.Binarizer": "sklearn.preprocessing.Binarizer",
        "sklearn.preprocessing._function_transformer.FunctionTransformer": "sklearn.preprocessing.FunctionTransformer",
        "sklearn.preprocessing._discretization.KBinsDiscretizer": "sklearn.preprocessing.KBinsDiscretizer",
        "sklearn.preprocessing._data.KernelCenterer": "sklearn.preprocessing.KernelCenterer",
        "sklearn.preprocessing._label.LabelBinarizer": "sklearn.preprocessing.LabelBinarizer",
        "sklearn.preprocessing._label.LabelEncoder": "sklearn.preprocessing.LabelEncoder",
        "sklearn.preprocessing._data.MaxAbsScaler": "sklearn.preprocessing.MaxAbsScaler",
        "sklearn.preprocessing._data.MinMaxScaler": "sklearn.preprocessing.MinMaxScaler",
        "sklearn.preprocessing._label.MultiLabelBinarizer": "sklearn.preprocessing.MultiLabelBinarizer",
        "sklearn.preprocessing._data.Normalizer": "sklearn.preprocessing.Normalizer",
        "sklearn.preprocessing._encoders.OneHotEncoder": "sklearn.preprocessing.OneHotEncoder",
        "sklearn.preprocessing._encoders.OrdinalEncoder": "sklearn.preprocessing.OrdinalEncoder",
        "sklearn.preprocessing._polynomial.PolynomialFeatures": "sklearn.preprocessing.PolynomialFeatures",
        "sklearn.preprocessing._data.PowerTransformer": "sklearn.preprocessing.PowerTransformer",
        "sklearn.preprocessing._data.QuantileTransformer": "sklearn.preprocessing.QuantileTransformer",
        "sklearn.preprocessing._data.RobustScaler": "sklearn.preprocessing.RobustScaler",
        "sklearn.preprocessing._polynomial.SplineTransformer": "sklearn.preprocessing.SplineTransformer",
        "sklearn.preprocessing._data.StandardScaler": "sklearn.preprocessing.StandardScaler",
        "sklearn.preprocessing._data.add_dummy_feature": "sklearn.preprocessing.add_dummy_feature",
        "sklearn.preprocessing._data.binarize": "sklearn.preprocessing.binarize",
        "sklearn.preprocessing._label.label_binarize": "sklearn.preprocessing.label_binarize",
        "sklearn.preprocessing._data.maxabs_scale": "sklearn.preprocessing.maxabs_scale",
        "sklearn.preprocessing._data.minmax_scale": "sklearn.preprocessing.minmax_scale",
        "sklearn.preprocessing._data.power_transform": "sklearn.preprocessing.power_transform",
        "sklearn.preprocessing._data.quantile_transform": "sklearn.preprocessing.quantile_transform",
        "sklearn.preprocessing._data.robust_scale": "sklearn.preprocessing.robust_scale",
        "sklearn.preprocessing._data.scale": "sklearn.preprocessing.scale",
        "sklearn._config.set_config": "sklearn.set_config",
        "sklearn.setup_module": "sklearn.setup_module",
        "sklearn.utils._show_versions.show_versions": "sklearn.show_versions",
        "sklearn.svm._classes.LinearSVC": "sklearn.svm.LinearSVC",
        "sklearn.svm._classes.LinearSVR": "sklearn.svm.LinearSVR",
        "sklearn.svm._classes.NuSVC": "sklearn.svm.NuSVC",
        "sklearn.svm._classes.NuSVR": "sklearn.svm.NuSVR",
        "sklearn.svm._classes.OneClassSVM": "sklearn.svm.OneClassSVM",
        "sklearn.svm._classes.SVC": "sklearn.svm.SVC",
        "sklearn.svm._classes.SVR": "sklearn.svm.SVR",
        "sklearn.svm._bounds.l1_min_c": "sklearn.svm.l1_min_c",
        "sklearn.utils._bunch.Bunch": "sklearn.utils.Bunch",
        "sklearn.utils.discovery.all_estimators": "sklearn.utils.discovery.all_estimators",
        "sklearn.utils.arrayfuncs.cholesky_delete": "sklearn.utils.arrayfuncs.cholesky_delete",
        "sklearn.utils.arrayfuncs.min_pos": "sklearn.utils.arrayfuncs.min_pos",
        "sklearn.utils.validation.as_float_array": "sklearn.utils.validation.as_float_array",
        "sklearn.utils.validation.assert_all_finite": "sklearn.utils.validation.assert_all_finite",
        "sklearn.utils.axis0_safe_slice": "sklearn.utils.axis0_safe_slice",
        "sklearn.utils.validation.check_consistent_length": "sklearn.utils.validation.check_consistent_length",
        "sklearn.utils.check_matplotlib_support": "sklearn.utils.check_matplotlib_support",
        "sklearn.utils.check_pandas_support": "sklearn.utils.check_pandas_support",
        "sklearn.utils.validation.check_scalar": "sklearn.utils.validation.check_scalar",
        "sklearn.utils.validation.check_symmetric": "sklearn.utils.validation.check_symmetric",
        "sklearn.utils.class_weight.compute_class_weight": "sklearn.utils.compute_class_weight",
        "sklearn.utils.class_weight.compute_sample_weight": "sklearn.utils.compute_sample_weight",
        "sklearn.utils.validation.column_or_1d": "sklearn.utils.validation.column_or_1d",
        "sklearn.utils.deprecation.deprecated": "sklearn.utils.fixes.deprecated",
        "sklearn.utils.discovery.all_displays": "sklearn.utils.discovery.all_displays",
        "sklearn.utils.discovery.all_functions": "sklearn.utils.discovery.all_functions",
        "sklearn.utils.extmath.cartesian": "sklearn.utils.extmath.cartesian",
        "sklearn.utils.sparsefuncs_fast.csr_row_norms": "sklearn.utils.sparsefuncs_fast.csr_row_norms",
        "sklearn.utils.extmath.density": "sklearn.utils.extmath.density",
        "sklearn.utils.extmath.fast_logdet": "sklearn.utils.extmath.fast_logdet",
        "sklearn.utils._array_api.get_namespace": "sklearn.utils.validation.get_namespace",
        "sklearn.utils.extmath.log_logistic": "sklearn.utils.extmath.log_logistic",
        "sklearn.utils.extmath.make_nonnegative": "sklearn.utils.extmath.make_nonnegative",
        "sklearn.utils.extmath.randomized_range_finder": "sklearn.utils.extmath.randomized_range_finder",
        "sklearn.utils.extmath.randomized_svd": "sklearn.utils.extmath.randomized_svd",
        "sklearn.utils.extmath.softmax": "sklearn.utils.extmath.softmax",
        "sklearn.utils.extmath.squared_norm": "sklearn.utils.extmath.squared_norm",
        "sklearn.utils.extmath.stable_cumsum": "sklearn.utils.stats.stable_cumsum",
        "sklearn.utils.extmath.svd_flip": "sklearn.utils.extmath.svd_flip",
        "sklearn.utils.extmath.weighted_mode": "sklearn.utils.extmath.weighted_mode",
        "sklearn.utils.fixes.delayed": "sklearn.utils.fixes.delayed",
        "sklearn.utils.fixes.threadpool_info": "sklearn.utils.threadpool_info",
        "sklearn.utils.fixes.threadpool_limits": "sklearn.utils.fixes.threadpool_limits",
        "sklearn.utils.validation.indexable": "sklearn.utils.validation.indexable",
        "sklearn.utils.indices_to_mask": "sklearn.utils.indices_to_mask",
        "sklearn.utils._available_if.available_if": "sklearn.utils.metaestimators.available_if",
        "sklearn.utils.metaestimators.if_delegate_has_method": "sklearn.utils.metaestimators.if_delegate_has_method",
        "sklearn.utils.multiclass.check_classification_targets": "sklearn.utils.multiclass.check_classification_targets",
        "sklearn.utils.multiclass.class_distribution": "sklearn.utils.multiclass.class_distribution",
        "sklearn.utils.multiclass.is_multilabel": "sklearn.utils.multiclass.is_multilabel",
        "sklearn.utils.multiclass.type_of_target": "sklearn.utils.multiclass.type_of_target",
        "sklearn.utils.multiclass.unique_labels": "sklearn.utils.multiclass.unique_labels",
        "sklearn.utils.murmurhash.murmurhash3_32": "sklearn.utils.murmurhash3_32",
        "sklearn.utils.murmurhash.murmurhash3_bytes_s32": "sklearn.utils.murmurhash.murmurhash3_bytes_s32",
        "sklearn.utils.murmurhash.murmurhash3_bytes_u32": "sklearn.utils.murmurhash.murmurhash3_bytes_u32",
        "sklearn.utils.murmurhash.murmurhash3_int_s32": "sklearn.utils.murmurhash.murmurhash3_int_s32",
        "sklearn.utils.murmurhash.murmurhash3_int_u32": "sklearn.utils.murmurhash.murmurhash3_int_u32",
        "sklearn.utils._random.sample_without_replacement": "sklearn.utils.random.sample_without_replacement",
        "sklearn.utils.resample": "sklearn.utils.resample",
        "sklearn.utils.safe_mask": "sklearn.utils.safe_mask",
        "sklearn.utils.safe_sqr": "sklearn.utils.safe_sqr",
        "sklearn.utils.shuffle": "sklearn.utils.shuffle",
        "sklearn.utils.sparsefuncs.count_nonzero": "sklearn.utils.sparsefuncs.count_nonzero",
        "sklearn.utils.sparsefuncs.csc_median_axis_0": "sklearn.utils.sparsefuncs.csc_median_axis_0",
        "sklearn.utils.sparsefuncs.incr_mean_variance_axis": "sklearn.utils.sparsefuncs.incr_mean_variance_axis",
        "sklearn.utils.sparsefuncs.inplace_column_scale": "sklearn.utils.sparsefuncs.inplace_column_scale",
        "sklearn.utils.sparsefuncs.inplace_csr_column_scale": "sklearn.utils.sparsefuncs.inplace_csr_column_scale",
        "sklearn.utils.sparsefuncs.inplace_csr_row_scale": "sklearn.utils.sparsefuncs.inplace_csr_row_scale",
        "sklearn.utils.sparsefuncs.inplace_row_scale": "sklearn.utils.sparsefuncs.inplace_row_scale",
        "sklearn.utils.sparsefuncs.inplace_swap_column": "sklearn.utils.sparsefuncs.inplace_swap_column",
        "sklearn.utils.sparsefuncs.inplace_swap_row": "sklearn.utils.sparsefuncs.inplace_swap_row",
        "sklearn.utils.sparsefuncs.inplace_swap_row_csc": "sklearn.utils.sparsefuncs.inplace_swap_row_csc",
        "sklearn.utils.sparsefuncs.inplace_swap_row_csr": "sklearn.utils.sparsefuncs.inplace_swap_row_csr",
        "sklearn.utils.sparsefuncs.mean_variance_axis": "sklearn.utils.sparsefuncs.mean_variance_axis",
        "sklearn.utils.sparsefuncs.min_max_axis": "sklearn.utils.sparsefuncs.min_max_axis",
        "sklearn.utils.sparsefuncs_fast.assign_rows_csr": "sklearn.utils.sparsefuncs_fast.assign_rows_csr",
        "sklearn.utils.sparsefuncs_fast.csc_mean_variance_axis0": "sklearn.utils.sparsefuncs_fast.csc_mean_variance_axis0",
        "sklearn.utils.sparsefuncs_fast.csr_mean_variance_axis0": "sklearn.utils.sparsefuncs_fast.csr_mean_variance_axis0",
        "sklearn.utils.sparsefuncs_fast.incr_mean_variance_axis0": "sklearn.utils.sparsefuncs_fast.incr_mean_variance_axis0",
        "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l1": "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l1",
        "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l2": "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l2",
        "sklearn.utils.tosequence": "sklearn.utils.tosequence",
        "sklearn.utils.validation.check_memory": "sklearn.utils.validation.check_memory",
        "sklearn.utils._isfinite.cy_isfinite": "sklearn.utils.validation.cy_isfinite",
        "sklearn.utils.validation.has_fit_parameter": "sklearn.utils.validation.has_fit_parameter",
        "sklearn.tree._classes.DecisionTreeClassifier": "sklearn.tree.DecisionTreeClassifier",
        "sklearn.ensemble._gb.GradientBoostingRegressor": "sklearn.ensemble.GradientBoostingRegressor",
        "sklearn.ensemble._forest.RandomForestRegressor": "sklearn.ensemble.RandomForestRegressor",
        "sklearn.tree._classes.DecisionTreeRegressor": "sklearn.tree.DecisionTreeRegressor"
    },
    "scipy": {
        "scipy._lib._ccallback.LowLevelCallable": "scipy.LowLevelCallable",
        "scipy.cluster.hierarchy.ClusterNode": "scipy.cluster.hierarchy.ClusterNode",
        "scipy.cluster.hierarchy.ClusterWarning": "scipy.cluster.hierarchy.ClusterWarning",
        "scipy._lib._disjoint_set.DisjointSet": "scipy.cluster.hierarchy.DisjointSet",
        "scipy._lib._array_api.array_namespace": "scipy.cluster.vq.array_namespace",
        "scipy.cluster.hierarchy.average": "scipy.cluster.hierarchy.average",
        "scipy.cluster.hierarchy.centroid": "scipy.cluster.hierarchy.centroid",
        "scipy.cluster.hierarchy.complete": "scipy.cluster.hierarchy.complete",
        "scipy.cluster.hierarchy.cophenet": "scipy.cluster.hierarchy.cophenet",
        "scipy._lib._array_api.copy": "scipy.cluster.vq.copy",
        "scipy.cluster.hierarchy.correspond": "scipy.cluster.hierarchy.correspond",
        "scipy.cluster.hierarchy.cut_tree": "scipy.cluster.hierarchy.cut_tree",
        "scipy.cluster.hierarchy.dendrogram": "scipy.cluster.hierarchy.dendrogram",
        "scipy.spatial.distance.CDistMetricWrapper": "scipy.spatial.distance.CDistMetricWrapper",
        "scipy.spatial.distance.MetricInfo": "scipy.spatial.distance.MetricInfo",
        "scipy.spatial.distance.PDistMetricWrapper": "scipy.spatial.distance.PDistMetricWrapper",
        "scipy.spatial.distance.braycurtis": "scipy.spatial.distance.braycurtis",
        "scipy.spatial.distance.canberra": "scipy.spatial.distance.canberra",
        "scipy.spatial.distance.cdist": "scipy.stats.stats.cdist",
        "scipy.spatial.distance.chebyshev": "scipy.spatial.distance.chebyshev",
        "scipy.spatial.distance.cityblock": "scipy.spatial.distance.cityblock",
        "scipy.spatial.distance.correlation": "scipy.spatial.distance.correlation",
        "scipy.spatial.distance.cosine": "scipy.spatial.distance.cosine",
        "scipy.spatial.distance.dice": "scipy.spatial.distance.dice",
        "scipy.spatial.distance.directed_hausdorff": "scipy.spatial.distance.directed_hausdorff",
        "scipy.spatial.distance.euclidean": "scipy.spatial.distance.euclidean",
        "scipy.spatial.distance.hamming": "scipy.spatial.distance.hamming",
        "scipy.spatial.distance.is_valid_dm": "scipy.spatial.distance.is_valid_dm",
        "scipy.spatial.distance.is_valid_y": "scipy.spatial.distance.is_valid_y",
        "scipy.spatial.distance.jaccard": "scipy.spatial.distance.jaccard",
        "scipy.spatial.distance.jensenshannon": "scipy.spatial.distance.jensenshannon",
        "scipy.spatial.distance.kulczynski1": "scipy.spatial.distance.kulczynski1",
        "scipy.spatial.distance.mahalanobis": "scipy.spatial.distance.mahalanobis",
        "scipy.spatial.distance.minkowski": "scipy.spatial.distance.minkowski",
        "scipy.linalg._misc.norm": "scipy.optimize.nonlin.norm",
        "scipy.spatial.distance.num_obs_dm": "scipy.spatial.distance.num_obs_dm",
        "scipy.spatial.distance.num_obs_y": "scipy.spatial.distance.num_obs_y",
        "scipy.spatial.distance.pdist": "scipy.interpolate.rbf.pdist",
        "scipy.spatial.distance.rogerstanimoto": "scipy.spatial.distance.rogerstanimoto",
        "scipy.spatial.distance.russellrao": "scipy.spatial.distance.russellrao",
        "scipy.spatial.distance.seuclidean": "scipy.spatial.distance.seuclidean",
        "scipy.spatial.distance.sokalmichener": "scipy.spatial.distance.sokalmichener",
        "scipy.spatial.distance.sokalsneath": "scipy.spatial.distance.sokalsneath",
        "scipy.spatial.distance.sqeuclidean": "scipy.spatial.distance.sqeuclidean",
        "scipy.spatial.distance.squareform": "scipy.interpolate.rbf.squareform",
        "scipy.spatial.distance.yule": "scipy.spatial.distance.yule",
        "scipy.cluster.hierarchy.fcluster": "scipy.cluster.hierarchy.fcluster",
        "scipy.cluster.hierarchy.fclusterdata": "scipy.cluster.hierarchy.fclusterdata",
        "scipy.cluster.hierarchy.from_mlab_linkage": "scipy.cluster.hierarchy.from_mlab_linkage",
        "scipy.cluster.hierarchy.inconsistent": "scipy.cluster.hierarchy.inconsistent",
        "scipy.cluster.hierarchy.int_floor": "scipy.cluster.hierarchy.int_floor",
        "scipy.cluster.hierarchy.is_isomorphic": "scipy.cluster.hierarchy.is_isomorphic",
        "scipy.cluster.hierarchy.is_monotonic": "scipy.cluster.hierarchy.is_monotonic",
        "scipy.cluster.hierarchy.is_valid_im": "scipy.cluster.hierarchy.is_valid_im",
        "scipy.cluster.hierarchy.is_valid_linkage": "scipy.cluster.hierarchy.is_valid_linkage",
        "scipy.cluster.hierarchy.leaders": "scipy.cluster.hierarchy.leaders",
        "scipy.cluster.hierarchy.leaves_list": "scipy.cluster.hierarchy.leaves_list",
        "scipy.cluster.hierarchy.linkage": "scipy.cluster.hierarchy.linkage",
        "scipy.cluster.hierarchy.maxRstat": "scipy.cluster.hierarchy.maxRstat",
        "scipy.cluster.hierarchy.maxdists": "scipy.cluster.hierarchy.maxdists",
        "scipy.cluster.hierarchy.maxinconsts": "scipy.cluster.hierarchy.maxinconsts",
        "scipy.cluster.hierarchy.median": "scipy.cluster.hierarchy.median",
        "scipy.cluster.hierarchy.num_obs_linkage": "scipy.cluster.hierarchy.num_obs_linkage",
        "scipy.cluster.hierarchy.optimal_leaf_ordering": "scipy.cluster.hierarchy.optimal_leaf_ordering",
        "scipy.cluster.hierarchy.set_link_color_palette": "scipy.cluster.hierarchy.set_link_color_palette",
        "scipy.cluster.hierarchy.single": "scipy.cluster.hierarchy.single",
        "scipy.cluster.hierarchy.to_mlab_linkage": "scipy.cluster.hierarchy.to_mlab_linkage",
        "scipy.cluster.hierarchy.to_tree": "scipy.cluster.hierarchy.to_tree",
        "scipy.cluster.hierarchy.ward": "scipy.cluster.hierarchy.ward",
        "scipy.cluster.hierarchy.weighted": "scipy.cluster.hierarchy.weighted",
        "scipy.cluster.vq.ClusterError": "scipy.cluster.vq.ClusterError",
        "scipy._lib._array_api.atleast_nd": "scipy.cluster.vq.atleast_nd",
        "scipy._lib._util.check_random_state": "scipy.optimize.optimize.check_random_state",
        "scipy._lib._array_api.cov": "scipy.cluster.vq.cov",
        "scipy.cluster.vq.kmeans": "scipy.cluster.vq.kmeans",
        "scipy.cluster.vq.kmeans2": "scipy.cluster.vq.kmeans2",
        "scipy.cluster.vq.py_vq": "scipy.cluster.vq.py_vq",
        "scipy._lib._util.rng_integers": "scipy.stats.stats.rng_integers",
        "scipy._lib.array_api_compat.common._helpers.size": "scipy.cluster.vq.size",
        "scipy.cluster.vq.vq": "scipy.cluster.vq.vq",
        "scipy.cluster.vq.whiten": "scipy.cluster.vq.whiten",
        "scipy.constants._codata.ConstantWarning": "scipy.constants.codata.ConstantWarning",
        "scipy.constants._codata.find": "scipy.constants.find",
        "scipy.constants._codata.parse_constants_2002to2014": "scipy.constants.codata.parse_constants_2002to2014",
        "scipy.constants._codata.parse_constants_2018toXXXX": "scipy.constants.codata.parse_constants_2018toXXXX",
        "scipy.constants._codata.precision": "scipy.constants.precision",
        "scipy.constants._codata.unit": "scipy.constants.unit",
        "scipy.constants._codata.value": "scipy.constants.value",
        "scipy.constants._constants.convert_temperature": "scipy.constants.convert_temperature",
        "scipy.constants._constants.lambda2nu": "scipy.constants.lambda2nu",
        "scipy.constants._constants.nu2lambda": "scipy.constants.nu2lambda",
        "scipy.datasets._fetchers.ascent": "scipy.datasets.ascent",
        "scipy.datasets._utils.clear_cache": "scipy.datasets.clear_cache",
        "scipy.datasets._download_all.download_all": "scipy.datasets.download_all",
        "scipy.datasets._fetchers.electrocardiogram": "scipy.datasets.electrocardiogram",
        "scipy.datasets._fetchers.face": "scipy.datasets.face",
        "scipy.fft._realtransforms.dct": "scipy.fft.dct",
        "scipy.fft._realtransforms.dctn": "scipy.fft.dctn",
        "scipy.fft._realtransforms.dst": "scipy.fft.dst",
        "scipy.fft._realtransforms.dstn": "scipy.fft.dstn",
        "scipy.fft._basic.fft": "scipy.fft.fft",
        "scipy.fft._basic.fft2": "scipy.fft.fft2",
        "scipy.fft._helper.fftfreq": "scipy.fft.fftfreq",
        "scipy.fft._basic.fftn": "scipy.fft.fftn",
        "scipy.fft._helper.fftshift": "scipy.fft.fftshift",
        "scipy.fft._fftlog.fht": "scipy.fft.fht",
        "scipy.fft._fftlog_backend.fhtoffset": "scipy.fft.fhtoffset",
        "scipy.fft._pocketfft.helper.get_workers": "scipy.fft.get_workers",
        "scipy.fft._basic.hfft": "scipy.fft.hfft",
        "scipy.fft._basic.hfft2": "scipy.fft.hfft2",
        "scipy.fft._basic.hfftn": "scipy.fft.hfftn",
        "scipy.fft._realtransforms.idct": "scipy.fft.idct",
        "scipy.fft._realtransforms.idctn": "scipy.fft.idctn",
        "scipy.fft._realtransforms.idst": "scipy.fft.idst",
        "scipy.fft._realtransforms.idstn": "scipy.fft.idstn",
        "scipy.fft._basic.ifft": "scipy.fft.ifft",
        "scipy.fft._basic.ifft2": "scipy.fft.ifft2",
        "scipy.fft._basic.ifftn": "scipy.fft.ifftn",
        "scipy.fft._helper.ifftshift": "scipy.fft.ifftshift",
        "scipy.fft._fftlog.ifht": "scipy.fft.ifht",
        "scipy.fft._basic.ihfft": "scipy.fft.ihfft",
        "scipy.fft._basic.ihfft2": "scipy.fft.ihfft2",
        "scipy.fft._basic.ihfftn": "scipy.fft.ihfftn",
        "scipy.fft._basic.irfft": "scipy.fft.irfft",
        "scipy.fft._basic.irfft2": "scipy.fft.irfft2",
        "scipy.fft._basic.irfftn": "scipy.fft.irfftn",
        "scipy.fft._helper.next_fast_len": "scipy.fft.next_fast_len",
        "scipy.fft._backend.register_backend": "scipy.fft.register_backend",
        "scipy.fft._basic.rfft": "scipy.fft.rfft",
        "scipy.fft._basic.rfft2": "scipy.fft.rfft2",
        "scipy.fft._helper.rfftfreq": "scipy.fft.rfftfreq",
        "scipy.fft._basic.rfftn": "scipy.fft.rfftn",
        "scipy.fft._backend.set_backend": "scipy.fft.set_backend",
        "scipy.fft._backend.set_global_backend": "scipy.fft.set_global_backend",
        "scipy.fft._pocketfft.helper.set_workers": "scipy.fft.set_workers",
        "scipy.fft._backend.skip_backend": "scipy.fft.skip_backend",
        "scipy.fftpack._basic.fft": "scipy.fftpack.fft",
        "scipy.fftpack._basic.fft2": "scipy.fftpack.fft2",
        "scipy.fftpack._basic.fftn": "scipy.fftpack.fftn",
        "scipy.fftpack._basic.ifft": "scipy.fftpack.ifft",
        "scipy.fftpack._basic.ifft2": "scipy.fftpack.ifft2",
        "scipy.fftpack._basic.ifftn": "scipy.fftpack.ifftn",
        "scipy.fftpack._basic.irfft": "scipy.fftpack.irfft",
        "scipy.fftpack._basic.rfft": "scipy.fftpack.rfft",
        "scipy.fftpack._pseudo_diffs.cc_diff": "scipy.fftpack.pseudo_diffs.cc_diff",
        "scipy.fftpack.convolve.convolve": "scipy.fftpack.convolve.convolve",
        "scipy.fftpack.convolve.convolve_z": "scipy.fftpack.convolve.convolve_z",
        "scipy.fftpack.convolve.destroy_convolve_cache": "scipy.fftpack.convolve.destroy_convolve_cache",
        "scipy.fftpack.convolve.init_convolution_kernel": "scipy.fftpack.convolve.init_convolution_kernel",
        "scipy.fft._pocketfft.pypocketfft.PyCapsule.r2r_fftpack": "scipy.fftpack.convolve.r2r_fftpack",
        "scipy.fftpack._pseudo_diffs.cs_diff": "scipy.fftpack.pseudo_diffs.cs_diff",
        "scipy.fftpack._realtransforms.dct": "scipy.fftpack.realtransforms.dct",
        "scipy.fftpack._realtransforms.dctn": "scipy.fftpack.realtransforms.dctn",
        "scipy.fftpack._pseudo_diffs.diff": "scipy.fftpack.pseudo_diffs.diff",
        "scipy.fftpack._realtransforms.dst": "scipy.fftpack.realtransforms.dst",
        "scipy.fftpack._realtransforms.dstn": "scipy.fftpack.realtransforms.dstn",
        "scipy.fftpack._helper.next_fast_len": "scipy.fftpack.next_fast_len",
        "scipy.fftpack._helper.rfftfreq": "scipy.fftpack.rfftfreq",
        "scipy.fftpack._pseudo_diffs.hilbert": "scipy.fftpack.pseudo_diffs.hilbert",
        "scipy.fftpack._realtransforms.idct": "scipy.fftpack.realtransforms.idct",
        "scipy.fftpack._realtransforms.idctn": "scipy.fftpack.realtransforms.idctn",
        "scipy.fftpack._realtransforms.idst": "scipy.fftpack.realtransforms.idst",
        "scipy.fftpack._realtransforms.idstn": "scipy.fftpack.realtransforms.idstn",
        "scipy.fftpack._pseudo_diffs.ihilbert": "scipy.fftpack.pseudo_diffs.ihilbert",
        "scipy.fftpack._pseudo_diffs.itilbert": "scipy.fftpack.pseudo_diffs.itilbert",
        "scipy.fftpack._pseudo_diffs.sc_diff": "scipy.fftpack.sc_diff",
        "scipy.fftpack._pseudo_diffs.shift": "scipy.fftpack.shift",
        "scipy.fftpack._pseudo_diffs.ss_diff": "scipy.fftpack.ss_diff",
        "scipy.fftpack._pseudo_diffs.tilbert": "scipy.fftpack.tilbert",
        "scipy.integrate._quadrature.AccuracyWarning": "scipy.integrate.AccuracyWarning",
        "scipy.integrate._ivp.bdf.BDF": "scipy.integrate.BDF",
        "scipy.integrate._ivp.rk.DOP853": "scipy.integrate.DOP853",
        "scipy.integrate._ivp.base.DenseOutput": "scipy.integrate.DenseOutput",
        "scipy.integrate._quadpack_py.IntegrationWarning": "scipy.integrate.quadpack.IntegrationWarning",
        "scipy.integrate._ivp.lsoda.LSODA": "scipy.integrate.LSODA",
        "scipy.integrate._odepack_py.ODEintWarning": "scipy.integrate.odepack.ODEintWarning",
        "scipy.integrate._ivp.common.OdeSolution": "scipy.integrate.OdeSolution",
        "scipy.integrate._ivp.base.OdeSolver": "scipy.integrate.OdeSolver",
        "scipy.integrate._ivp.rk.RK23": "scipy.integrate.RK23",
        "scipy.integrate._ivp.rk.RK45": "scipy.integrate.RK45",
        "scipy.integrate._ivp.radau.Radau": "scipy.integrate.Radau",
        "scipy.integrate._ode.complex_ode": "scipy.integrate.complex_ode",
        "scipy.integrate._quadrature.cumtrapz": "scipy.integrate.cumtrapz",
        "scipy.integrate._quadrature.cumulative_simpson": "scipy.integrate.cumulative_simpson",
        "scipy.integrate._quadrature.cumulative_trapezoid": "scipy.integrate.cumulative_trapezoid",
        "scipy.integrate._quadpack_py.dblquad": "scipy.integrate.quadpack.dblquad",
        "scipy.integrate._quadrature.fixed_quad": "scipy.integrate.fixed_quad",
        "scipy.integrate._quadrature.newton_cotes": "scipy.integrate.newton_cotes",
        "scipy.integrate._quadpack_py.nquad": "scipy.integrate.quadpack.nquad",
        "scipy.integrate._ode.ode": "scipy.integrate.ode",
        "scipy.integrate._odepack_py.odeint": "scipy.integrate.odepack.odeint",
        "scipy.integrate._quadrature.qmc_quad": "scipy.integrate.qmc_quad",
        "scipy.integrate._quadpack_py.quad": "scipy.integrate.quadpack.quad",
        "scipy.integrate._quad_vec.quad_vec": "scipy.integrate.quad_vec",
        "scipy.integrate._quadpack_py.tplquad": "scipy.integrate.tplquad",
        "scipy.integrate._quadrature.quadrature": "scipy.integrate.quadrature",
        "scipy.integrate._quadrature.romb": "scipy.integrate.romb",
        "scipy.integrate._quadrature.romberg": "scipy.integrate.romberg",
        "scipy.integrate._quadrature.simps": "scipy.integrate.simps",
        "scipy.integrate._quadrature.simpson": "scipy.integrate.simpson",
        "scipy.integrate._bvp.solve_bvp": "scipy.integrate.solve_bvp",
        "scipy.integrate._ivp.ivp.solve_ivp": "scipy.integrate.solve_ivp",
        "scipy.integrate._quadrature.trapezoid": "scipy.integrate.trapezoid",
        "scipy.integrate._quadrature.trapz": "scipy.integrate.trapz",
        "scipy.interpolate._cubic.Akima1DInterpolator": "scipy.interpolate.Akima1DInterpolator",
        "scipy.interpolate._interpolate.BPoly": "scipy.interpolate.interpolate.BPoly",
        "scipy.interpolate._bsplines.BSpline": "scipy.interpolate.interpolate.BSpline",
        "scipy.interpolate._polyint.BarycentricInterpolator": "scipy.interpolate.polyint.BarycentricInterpolator",
        "scipy.interpolate._fitpack2.BivariateSpline": "scipy.interpolate.fitpack2.BivariateSpline",
        "scipy.interpolate.interpnd.CloughTocher2DInterpolator": "scipy.interpolate.ndgriddata.CloughTocher2DInterpolator",
        "scipy.interpolate._cubic.CubicHermiteSpline": "scipy.interpolate.CubicHermiteSpline",
        "scipy.interpolate._cubic.CubicSpline": "scipy.interpolate.CubicSpline",
        "scipy.interpolate._fitpack2.InterpolatedUnivariateSpline": "scipy.interpolate.fitpack2.InterpolatedUnivariateSpline",
        "scipy.interpolate._polyint.KroghInterpolator": "scipy.interpolate.polyint.KroghInterpolator",
        "scipy.interpolate._fitpack2.LSQBivariateSpline": "scipy.interpolate.fitpack2.LSQBivariateSpline",
        "scipy.interpolate._fitpack2.LSQSphereBivariateSpline": "scipy.interpolate.fitpack2.LSQSphereBivariateSpline",
        "scipy.interpolate._fitpack2.LSQUnivariateSpline": "scipy.interpolate.fitpack2.LSQUnivariateSpline",
        "scipy.interpolate.interpnd.LinearNDInterpolator": "scipy.interpolate.ndgriddata.LinearNDInterpolator",
        "scipy.interpolate._ndbspline.NdBSpline": "scipy.interpolate.NdBSpline",
        "scipy.interpolate._interpolate.NdPPoly": "scipy.interpolate.interpolate.NdPPoly",
        "scipy.interpolate._ndgriddata.NearestNDInterpolator": "scipy.interpolate.ndgriddata.NearestNDInterpolator",
        "scipy.interpolate._interpolate.PPoly": "scipy.interpolate.interpolate.PPoly",
        "scipy.interpolate._cubic.PchipInterpolator": "scipy.interpolate.pchip",
        "scipy.interpolate._rbfinterp.RBFInterpolator": "scipy.interpolate.RBFInterpolator",
        "scipy.interpolate._rbf.Rbf": "scipy.interpolate.rbf.Rbf",
        "scipy.interpolate._fitpack2.RectBivariateSpline": "scipy.interpolate.interpolate.RectBivariateSpline",
        "scipy.interpolate._fitpack2.RectSphereBivariateSpline": "scipy.interpolate.fitpack2.RectSphereBivariateSpline",
        "scipy.interpolate._rgi.RegularGridInterpolator": "scipy.interpolate.interpolate.RegularGridInterpolator",
        "scipy.interpolate._fitpack2.SmoothBivariateSpline": "scipy.interpolate.fitpack2.SmoothBivariateSpline",
        "scipy.interpolate._fitpack2.SmoothSphereBivariateSpline": "scipy.interpolate.fitpack2.SmoothSphereBivariateSpline",
        "scipy.interpolate._fitpack2.UnivariateSpline": "scipy.interpolate.fitpack2.UnivariateSpline",
        "scipy.interpolate._polyint.approximate_taylor_polynomial": "scipy.interpolate.polyint.approximate_taylor_polynomial",
        "scipy.interpolate._polyint.barycentric_interpolate": "scipy.interpolate.polyint.barycentric_interpolate",
        "scipy.interpolate._fitpack_impl.bisplev": "scipy.interpolate.fitpack.bisplev",
        "scipy.interpolate._fitpack_impl.bisplrep": "scipy.interpolate.fitpack.bisplrep",
        "scipy.interpolate._fitpack_impl.dblint": "scipy.interpolate.fitpack.dblint",
        "scipy.interpolate._fitpack_py.insert": "scipy.interpolate.insert",
        "scipy.interpolate._fitpack_py.spalde": "scipy.interpolate.spalde",
        "scipy.interpolate._fitpack_py.splantider": "scipy.interpolate.splantider",
        "scipy.interpolate._fitpack_py.splder": "scipy.interpolate.splder",
        "scipy.interpolate._fitpack_py.splev": "scipy.interpolate.splev",
        "scipy.interpolate._fitpack_py.splint": "scipy.interpolate.splint",
        "scipy.interpolate._fitpack_py.splprep": "scipy.interpolate.splprep",
        "scipy.interpolate._fitpack_py.splrep": "scipy.interpolate.splrep",
        "scipy.interpolate._fitpack_py.sproot": "scipy.interpolate.sproot",
        "scipy.interpolate._fitpack2.SphereBivariateSpline": "scipy.interpolate.fitpack2.SphereBivariateSpline",
        "scipy.interpolate._ndgriddata.griddata": "scipy.interpolate.ndgriddata.griddata",
        "scipy.interpolate._interpolate.interp1d": "scipy.interpolate.interpolate.interp1d",
        "scipy.interpolate._interpolate.interp2d": "scipy.interpolate.interpolate.interp2d",
        "scipy.interpolate._rgi.interpn": "scipy.interpolate.interpolate.interpn",
        "scipy.interpolate.interpnd.GradientEstimationWarning": "scipy.interpolate.interpnd.GradientEstimationWarning",
        "scipy.interpolate.interpnd.NDInterpolatorBase": "scipy.interpolate.ndgriddata.NDInterpolatorBase",
        "scipy.interpolate.interpnd.estimate_gradients_2d_global": "scipy.interpolate.interpnd.estimate_gradients_2d_global",
        "scipy.spatial._qhull.ConvexHull": "scipy.spatial.qhull.ConvexHull",
        "scipy.spatial._qhull.Delaunay": "scipy.spatial.qhull.Delaunay",
        "scipy.spatial._qhull.HalfspaceIntersection": "scipy.spatial.qhull.HalfspaceIntersection",
        "scipy.spatial._qhull.QhullError": "scipy.spatial.qhull.QhullError",
        "scipy.spatial._qhull.Voronoi": "scipy.spatial.qhull.Voronoi",
        "scipy.spatial._qhull.tsearch": "scipy.spatial.tsearch",
        "scipy.special._basic.comb": "scipy.signal.wavelets.comb",
        "scipy.interpolate._interpolate.lagrange": "scipy.interpolate.lagrange",
        "scipy.interpolate._bsplines.make_interp_spline": "scipy.interpolate.make_interp_spline",
        "scipy.special._sf_error.SpecialFunctionError": "scipy.special.sf_error.SpecialFunctionError",
        "scipy.special._sf_error.SpecialFunctionWarning": "scipy.special.sf_error.SpecialFunctionWarning",
        "scipy.special._add_newdocs.add_newdoc": "scipy.special.add_newdocs.add_newdoc",
        "scipy.special._add_newdocs.get": "scipy.special.add_newdocs.get",
        "scipy.special._basic.ai_zeros": "scipy.special.basic.ai_zeros",
        "scipy.special._basic.assoc_laguerre": "scipy.special.basic.assoc_laguerre",
        "scipy.special._basic.bei_zeros": "scipy.special.bei_zeros",
        "scipy.special._basic.beip_zeros": "scipy.special.beip_zeros",
        "scipy.special._basic.ber_zeros": "scipy.special.ber_zeros",
        "scipy.special._basic.bernoulli": "scipy.special.bernoulli",
        "scipy.special._basic.berp_zeros": "scipy.special.berp_zeros",
        "scipy.special._basic.bi_zeros": "scipy.special.bi_zeros",
        "scipy.special._basic.clpmn": "scipy.special.clpmn",
        "scipy.special._basic.diric": "scipy.special.diric",
        "scipy.special._basic.erf_zeros": "scipy.special.erf_zeros",
        "scipy.special._basic.euler": "scipy.special.euler",
        "scipy.special._basic.factorial": "scipy.interpolate.polyint.factorial",
        "scipy.special._basic.factorial2": "scipy.special.factorial2",
        "scipy.special._basic.factorialk": "scipy.special.factorialk",
        "scipy.special._basic.fresnel_zeros": "scipy.special.fresnel_zeros",
        "scipy.special._basic.fresnelc_zeros": "scipy.special.fresnelc_zeros",
        "scipy.special._basic.fresnels_zeros": "scipy.special.fresnels_zeros",
        "scipy.special._basic.h1vp": "scipy.special.h1vp",
        "scipy.special._basic.h2vp": "scipy.special.h2vp",
        "scipy.special._basic.ivp": "scipy.special.ivp",
        "scipy.special._basic.jn_zeros": "scipy.special.jn_zeros",
        "scipy.special._basic.jnjnp_zeros": "scipy.special.jnjnp_zeros",
        "scipy.special._basic.jnp_zeros": "scipy.special.jnp_zeros",
        "scipy.special._basic.jnyn_zeros": "scipy.special.jnyn_zeros",
        "scipy.special._basic.jvp": "scipy.special.jvp",
        "scipy.special._basic.kei_zeros": "scipy.special.kei_zeros",
        "scipy.special._basic.keip_zeros": "scipy.special.keip_zeros",
        "scipy.special._basic.kelvin_zeros": "scipy.special.kelvin_zeros",
        "scipy.special._basic.ker_zeros": "scipy.special.ker_zeros",
        "scipy.special._basic.kerp_zeros": "scipy.special.kerp_zeros",
        "scipy.special._basic.kvp": "scipy.special.kvp",
        "scipy.special._basic.lmbda": "scipy.special.lmbda",
        "scipy.special._basic.lpmn": "scipy.special.lpmn",
        "scipy.special._basic.lpn": "scipy.special.lpn",
        "scipy.special._basic.lqmn": "scipy.special.lqmn",
        "scipy.special._basic.lqn": "scipy.special.lqn",
        "scipy.special._basic.mathieu_even_coef": "scipy.special.mathieu_even_coef",
        "scipy.special._basic.mathieu_odd_coef": "scipy.special.mathieu_odd_coef",
        "scipy.special._basic.obl_cv_seq": "scipy.special.obl_cv_seq",
        "scipy.special._basic.pbdn_seq": "scipy.special.pbdn_seq",
        "scipy.special._basic.pbdv_seq": "scipy.special.pbdv_seq",
        "scipy.special._basic.pbvv_seq": "scipy.special.pbvv_seq",
        "scipy.special._basic.perm": "scipy.special.perm",
        "scipy.special._basic.polygamma": "scipy.special.polygamma",
        "scipy.special._basic.pro_cv_seq": "scipy.special.pro_cv_seq",
        "scipy.special._basic.riccati_jn": "scipy.special.riccati_jn",
        "scipy.special._basic.riccati_yn": "scipy.special.riccati_yn",
        "scipy.special._basic.y0_zeros": "scipy.special.y0_zeros",
        "scipy.special._basic.y1_zeros": "scipy.special.y1_zeros",
        "scipy.special._basic.y1p_zeros": "scipy.special.y1p_zeros",
        "scipy.special._basic.yn_zeros": "scipy.special.yn_zeros",
        "scipy.special._basic.ynp_zeros": "scipy.special.ynp_zeros",
        "scipy.special._basic.yvp": "scipy.special.yvp",
        "scipy.special._basic.zeta": "scipy.special.zeta",
        "scipy.special.btdtr": "scipy.special.btdtr",
        "scipy.special.btdtri": "scipy.special.btdtri",
        "scipy.special._orthogonal.roots_chebyc": "scipy.special.roots_chebyc",
        "scipy.special._orthogonal.roots_gegenbauer": "scipy.special.roots_gegenbauer",
        "scipy.special._orthogonal.chebyc": "scipy.special.orthogonal.chebyc",
        "scipy.special._orthogonal.chebys": "scipy.special.orthogonal.chebys",
        "scipy.special._orthogonal.chebyt": "scipy.special.orthogonal.chebyt",
        "scipy.special._orthogonal.chebyu": "scipy.special.orthogonal.chebyu",
        "scipy.special.cython_special.agm": "scipy.special.cython_special.agm",
        "scipy.special.cython_special.bdtr": "scipy.special.cython_special.bdtr",
        "scipy.special.cython_special.bdtrc": "scipy.special.cython_special.bdtrc",
        "scipy.special.cython_special.bdtri": "scipy.special.cython_special.bdtri",
        "scipy.special.cython_special.bdtrik": "scipy.special.cython_special.bdtrik",
        "scipy.special.cython_special.bdtrin": "scipy.special.cython_special.bdtrin",
        "scipy.special.cython_special.bei": "scipy.special.cython_special.bei",
        "scipy.special.cython_special.beip": "scipy.special.cython_special.beip",
        "scipy.special.cython_special.ber": "scipy.special.cython_special.ber",
        "scipy.special.cython_special.berp": "scipy.special.cython_special.berp",
        "scipy.special.cython_special.besselpoly": "scipy.special.cython_special.besselpoly",
        "scipy.special.cython_special.beta": "scipy.special.cython_special.beta",
        "scipy.special.cython_special.betainc": "scipy.special.cython_special.betainc",
        "scipy.special.cython_special.betaincc": "scipy.special.cython_special.betaincc",
        "scipy.special.cython_special.betainccinv": "scipy.special.cython_special.betainccinv",
        "scipy.special.cython_special.betaincinv": "scipy.special.cython_special.betaincinv",
        "scipy.special.cython_special.betaln": "scipy.special.cython_special.betaln",
        "scipy.special.cython_special.binom": "scipy.special.cython_special.binom",
        "scipy.special.cython_special.boxcox": "scipy.special.cython_special.boxcox",
        "scipy.special.cython_special.boxcox1p": "scipy.special.cython_special.boxcox1p",
        "scipy.special.cython_special.btdtr": "scipy.special.cython_special.btdtr",
        "scipy.special.cython_special.btdtri": "scipy.special.cython_special.btdtri",
        "scipy.special.cython_special.btdtria": "scipy.special.cython_special.btdtria",
        "scipy.special.cython_special.btdtrib": "scipy.special.cython_special.btdtrib",
        "scipy.special.cython_special.cbrt": "scipy.special.cython_special.cbrt",
        "scipy.special.cython_special.chdtr": "scipy.special.cython_special.chdtr",
        "scipy.special.cython_special.chdtrc": "scipy.special.cython_special.chdtrc",
        "scipy.special.cython_special.chdtri": "scipy.special.cython_special.chdtri",
        "scipy.special.cython_special.chdtriv": "scipy.special.cython_special.chdtriv",
        "scipy.special.cython_special.chndtr": "scipy.special.cython_special.chndtr",
        "scipy.special.cython_special.chndtridf": "scipy.special.cython_special.chndtridf",
        "scipy.special.cython_special.chndtrinc": "scipy.special.cython_special.chndtrinc",
        "scipy.special.cython_special.chndtrix": "scipy.special.cython_special.chndtrix",
        "scipy.special.cython_special.cosdg": "scipy.special.cython_special.cosdg",
        "scipy.special.cython_special.cosm1": "scipy.special.cython_special.cosm1",
        "scipy.special.cython_special.cotdg": "scipy.special.cython_special.cotdg",
        "scipy.special.cython_special.dawsn": "scipy.special.cython_special.dawsn",
        "scipy.special.cython_special.ellipe": "scipy.special.cython_special.ellipe",
        "scipy.special.cython_special.ellipeinc": "scipy.special.cython_special.ellipeinc",
        "scipy.special.cython_special.ellipk": "scipy.special.cython_special.ellipk",
        "scipy.special.cython_special.ellipkinc": "scipy.special.cython_special.ellipkinc",
        "scipy.special.cython_special.ellipkm1": "scipy.special.cython_special.ellipkm1",
        "scipy.special.cython_special.elliprc": "scipy.special.cython_special.elliprc",
        "scipy.special.cython_special.elliprd": "scipy.special.cython_special.elliprd",
        "scipy.special.cython_special.elliprf": "scipy.special.cython_special.elliprf",
        "scipy.special.cython_special.elliprg": "scipy.special.cython_special.elliprg",
        "scipy.special.cython_special.elliprj": "scipy.special.cython_special.elliprj",
        "scipy.special.cython_special.entr": "scipy.special.cython_special.entr",
        "scipy.special.cython_special.erf": "scipy.special.cython_special.erf",
        "scipy.special.cython_special.erfc": "scipy.special.cython_special.erfc",
        "scipy.special.cython_special.erfcinv": "scipy.special.cython_special.erfcinv",
        "scipy.special.cython_special.erfcx": "scipy.special.cython_special.erfcx",
        "scipy.special.cython_special.erfi": "scipy.special.cython_special.erfi",
        "scipy.special.cython_special.erfinv": "scipy.special.cython_special.erfinv",
        "scipy.special.cython_special.eval_chebyc": "scipy.special.cython_special.eval_chebyc",
        "scipy.special.cython_special.eval_chebys": "scipy.special.cython_special.eval_chebys",
        "scipy.special.cython_special.eval_chebyt": "scipy.special.cython_special.eval_chebyt",
        "scipy.special.cython_special.eval_chebyu": "scipy.special.cython_special.eval_chebyu",
        "scipy.special.cython_special.eval_gegenbauer": "scipy.special.cython_special.eval_gegenbauer",
        "scipy.special.cython_special.eval_genlaguerre": "scipy.special.cython_special.eval_genlaguerre",
        "scipy.special.cython_special.eval_hermite": "scipy.special.cython_special.eval_hermite",
        "scipy.special.cython_special.eval_hermitenorm": "scipy.special.cython_special.eval_hermitenorm",
        "scipy.special.cython_special.eval_jacobi": "scipy.special.cython_special.eval_jacobi",
        "scipy.special.cython_special.eval_laguerre": "scipy.special.cython_special.eval_laguerre",
        "scipy.special.cython_special.eval_legendre": "scipy.special.cython_special.eval_legendre",
        "scipy.special.cython_special.eval_sh_chebyt": "scipy.special.cython_special.eval_sh_chebyt",
        "scipy.special.cython_special.eval_sh_chebyu": "scipy.special.cython_special.eval_sh_chebyu",
        "scipy.special.cython_special.eval_sh_jacobi": "scipy.special.cython_special.eval_sh_jacobi",
        "scipy.special.cython_special.eval_sh_legendre": "scipy.special.cython_special.eval_sh_legendre",
        "scipy.special.cython_special.exp1": "scipy.special.cython_special.exp1",
        "scipy.special.cython_special.exp10": "scipy.special.cython_special.exp10",
        "scipy.special.cython_special.exp2": "scipy.special.cython_special.exp2",
        "scipy.special.cython_special.expi": "scipy.special.cython_special.expi",
        "scipy.special.cython_special.expit": "scipy.special.cython_special.expit",
        "scipy.special.cython_special.expm1": "scipy.special.cython_special.expm1",
        "scipy.special.cython_special.expn": "scipy.special.cython_special.expn",
        "scipy.special.cython_special.exprel": "scipy.special.cython_special.exprel",
        "scipy.special.cython_special.fdtr": "scipy.special.cython_special.fdtr",
        "scipy.special.cython_special.fdtrc": "scipy.special.cython_special.fdtrc",
        "scipy.special.cython_special.fdtri": "scipy.special.cython_special.fdtri",
        "scipy.special.cython_special.fdtridfd": "scipy.special.cython_special.fdtridfd",
        "scipy.special.cython_special.gamma": "scipy.special.cython_special.gamma",
        "scipy.special.cython_special.gammainc": "scipy.special.cython_special.gammainc",
        "scipy.special.cython_special.gammaincc": "scipy.special.cython_special.gammaincc",
        "scipy.special.cython_special.gammainccinv": "scipy.special.cython_special.gammainccinv",
        "scipy.special.cython_special.gammaincinv": "scipy.special.cython_special.gammaincinv",
        "scipy.special.cython_special.gammaln": "scipy.special.cython_special.gammaln",
        "scipy.special.cython_special.gammasgn": "scipy.special.cython_special.gammasgn",
        "scipy.special.cython_special.gdtr": "scipy.special.cython_special.gdtr",
        "scipy.special.cython_special.gdtrc": "scipy.special.cython_special.gdtrc",
        "scipy.special.cython_special.gdtria": "scipy.special.cython_special.gdtria",
        "scipy.special.cython_special.gdtrib": "scipy.special.cython_special.gdtrib",
        "scipy.special.cython_special.gdtrix": "scipy.special.cython_special.gdtrix",
        "scipy.special.cython_special.hankel1": "scipy.special.cython_special.hankel1",
        "scipy.special.cython_special.hankel1e": "scipy.special.cython_special.hankel1e",
        "scipy.special.cython_special.hankel2": "scipy.special.cython_special.hankel2",
        "scipy.special.cython_special.hankel2e": "scipy.special.cython_special.hankel2e",
        "scipy.special.cython_special.huber": "scipy.special.cython_special.huber",
        "scipy.special.cython_special.hyp0f1": "scipy.special.cython_special.hyp0f1",
        "scipy.special.cython_special.hyp1f1": "scipy.special.cython_special.hyp1f1",
        "scipy.special.cython_special.hyp2f1": "scipy.special.cython_special.hyp2f1",
        "scipy.special.cython_special.hyperu": "scipy.special.cython_special.hyperu",
        "scipy.special.cython_special.i0": "scipy.special.cython_special.i0",
        "scipy.special.cython_special.i0e": "scipy.special.cython_special.i0e",
        "scipy.special.cython_special.i1": "scipy.special.cython_special.i1",
        "scipy.special.cython_special.i1e": "scipy.special.cython_special.i1e",
        "scipy.special.cython_special.inv_boxcox": "scipy.special.cython_special.inv_boxcox",
        "scipy.special.cython_special.inv_boxcox1p": "scipy.special.cython_special.inv_boxcox1p",
        "scipy.special.cython_special.it2struve0": "scipy.special.cython_special.it2struve0",
        "scipy.special.cython_special.itmodstruve0": "scipy.special.cython_special.itmodstruve0",
        "scipy.special.cython_special.itstruve0": "scipy.special.cython_special.itstruve0",
        "scipy.special.cython_special.iv": "scipy.special.cython_special.iv",
        "scipy.special.cython_special.ive": "scipy.special.cython_special.ive",
        "scipy.special.cython_special.j0": "scipy.special.cython_special.j0",
        "scipy.special.cython_special.j1": "scipy.special.cython_special.j1",
        "scipy.special.cython_special.jv": "scipy.special.cython_special.jv",
        "scipy.special.cython_special.jve": "scipy.special.cython_special.jve",
        "scipy.special.cython_special.k0": "scipy.special.cython_special.k0",
        "scipy.special.cython_special.k0e": "scipy.special.cython_special.k0e",
        "scipy.special.cython_special.k1": "scipy.special.cython_special.k1",
        "scipy.special.cython_special.k1e": "scipy.special.cython_special.k1e",
        "scipy.special.cython_special.kei": "scipy.special.cython_special.kei",
        "scipy.special.cython_special.keip": "scipy.special.cython_special.keip",
        "scipy.special.cython_special.ker": "scipy.special.cython_special.ker",
        "scipy.special.cython_special.kerp": "scipy.special.cython_special.kerp",
        "scipy.special.cython_special.kl_div": "scipy.special.cython_special.kl_div",
        "scipy.special.cython_special.kn": "scipy.special.cython_special.kn",
        "scipy.special.cython_special.kolmogi": "scipy.special.cython_special.kolmogi",
        "scipy.special.cython_special.kolmogorov": "scipy.special.cython_special.kolmogorov",
        "scipy.special.cython_special.kv": "scipy.special.cython_special.kv",
        "scipy.special.cython_special.kve": "scipy.special.cython_special.kve",
        "scipy.special.cython_special.log1p": "scipy.special.cython_special.log1p",
        "scipy.special.cython_special.log_expit": "scipy.special.cython_special.log_expit",
        "scipy.special.cython_special.log_ndtr": "scipy.special.cython_special.log_ndtr",
        "scipy.special.cython_special.loggamma": "scipy.special.cython_special.loggamma",
        "scipy.special.cython_special.logit": "scipy.special.cython_special.logit",
        "scipy.special.cython_special.lpmv": "scipy.special.cython_special.lpmv",
        "scipy.special.cython_special.mathieu_a": "scipy.special.cython_special.mathieu_a",
        "scipy.special.cython_special.mathieu_b": "scipy.special.cython_special.mathieu_b",
        "scipy.special.cython_special.modstruve": "scipy.special.cython_special.modstruve",
        "scipy.special.cython_special.nbdtr": "scipy.special.cython_special.nbdtr",
        "scipy.special.cython_special.nbdtrc": "scipy.special.cython_special.nbdtrc",
        "scipy.special.cython_special.nbdtri": "scipy.special.cython_special.nbdtri",
        "scipy.special.cython_special.nbdtrik": "scipy.special.cython_special.nbdtrik",
        "scipy.special.cython_special.nbdtrin": "scipy.special.cython_special.nbdtrin",
        "scipy.special.cython_special.ncfdtr": "scipy.special.cython_special.ncfdtr",
        "scipy.special.cython_special.ncfdtri": "scipy.special.cython_special.ncfdtri",
        "scipy.special.cython_special.ncfdtridfd": "scipy.special.cython_special.ncfdtridfd",
        "scipy.special.cython_special.ncfdtridfn": "scipy.special.cython_special.ncfdtridfn",
        "scipy.special.cython_special.ncfdtrinc": "scipy.special.cython_special.ncfdtrinc",
        "scipy.special.cython_special.nctdtr": "scipy.special.cython_special.nctdtr",
        "scipy.special.cython_special.nctdtridf": "scipy.special.cython_special.nctdtridf",
        "scipy.special.cython_special.nctdtrinc": "scipy.special.cython_special.nctdtrinc",
        "scipy.special.cython_special.nctdtrit": "scipy.special.cython_special.nctdtrit",
        "scipy.special.cython_special.ndtr": "scipy.special.cython_special.ndtr",
        "scipy.special.cython_special.ndtri": "scipy.special.cython_special.ndtri",
        "scipy.special.cython_special.ndtri_exp": "scipy.special.cython_special.ndtri_exp",
        "scipy.special.cython_special.nrdtrimn": "scipy.special.cython_special.nrdtrimn",
        "scipy.special.cython_special.nrdtrisd": "scipy.special.cython_special.nrdtrisd",
        "scipy.special.cython_special.obl_cv": "scipy.special.cython_special.obl_cv",
        "scipy.special.cython_special.owens_t": "scipy.special.cython_special.owens_t",
        "scipy.special.cython_special.pdtr": "scipy.special.cython_special.pdtr",
        "scipy.special.cython_special.pdtrc": "scipy.special.cython_special.pdtrc",
        "scipy.special.cython_special.pdtri": "scipy.special.cython_special.pdtri",
        "scipy.special.cython_special.pdtrik": "scipy.special.cython_special.pdtrik",
        "scipy.special.cython_special.poch": "scipy.special.cython_special.poch",
        "scipy.special.cython_special.powm1": "scipy.special.cython_special.powm1",
        "scipy.special.cython_special.pro_cv": "scipy.special.cython_special.pro_cv",
        "scipy.special.cython_special.pseudo_huber": "scipy.special.cython_special.pseudo_huber",
        "scipy.special.cython_special.psi": "scipy.special.cython_special.psi",
        "scipy.special.cython_special.radian": "scipy.special.cython_special.radian",
        "scipy.special.cython_special.rel_entr": "scipy.special.cython_special.rel_entr",
        "scipy.special.cython_special.rgamma": "scipy.special.cython_special.rgamma",
        "scipy.special.cython_special.round": "scipy.special.cython_special.round",
        "scipy.special.cython_special.sindg": "scipy.special.cython_special.sindg",
        "scipy.special.cython_special.smirnov": "scipy.special.cython_special.smirnov",
        "scipy.special.cython_special.smirnovi": "scipy.special.cython_special.smirnovi",
        "scipy.special.cython_special.spence": "scipy.special.cython_special.spence",
        "scipy.special.cython_special.sph_harm": "scipy.special.cython_special.sph_harm",
        "scipy.special.cython_special.spherical_in": "scipy.special.cython_special.spherical_in",
        "scipy.special.cython_special.spherical_jn": "scipy.special.cython_special.spherical_jn",
        "scipy.special.cython_special.spherical_kn": "scipy.special.cython_special.spherical_kn",
        "scipy.special.cython_special.spherical_yn": "scipy.special.cython_special.spherical_yn",
        "scipy.special.cython_special.stdtr": "scipy.special.cython_special.stdtr",
        "scipy.special.cython_special.stdtridf": "scipy.special.cython_special.stdtridf",
        "scipy.special.cython_special.stdtrit": "scipy.special.cython_special.stdtrit",
        "scipy.special.cython_special.struve": "scipy.special.cython_special.struve",
        "scipy.special.cython_special.tandg": "scipy.special.cython_special.tandg",
        "scipy.special.cython_special.tklmbda": "scipy.special.cython_special.tklmbda",
        "scipy.special.cython_special.voigt_profile": "scipy.special.cython_special.voigt_profile",
        "scipy.special.cython_special.wofz": "scipy.special.cython_special.wofz",
        "scipy.special.cython_special.wright_bessel": "scipy.special.cython_special.wright_bessel",
        "scipy.special.cython_special.wrightomega": "scipy.special.cython_special.wrightomega",
        "scipy.special.cython_special.xlog1py": "scipy.special.cython_special.xlog1py",
        "scipy.special.cython_special.xlogy": "scipy.special.cython_special.xlogy",
        "scipy.special.cython_special.y0": "scipy.special.cython_special.y0",
        "scipy.special.cython_special.y1": "scipy.special.cython_special.y1",
        "scipy.special.cython_special.yn": "scipy.special.cython_special.yn",
        "scipy.special.cython_special.yv": "scipy.special.cython_special.yv",
        "scipy.special.cython_special.yve": "scipy.special.cython_special.yve",
        "scipy.special.cython_special.zetac": "scipy.special.cython_special.zetac",
        "scipy.special._ellip_harm.ellip_harm": "scipy.special.ellip_harm",
        "scipy.special._ellip_harm.ellip_harm_2": "scipy.special.ellip_harm_2",
        "scipy.special._ellip_harm.ellip_normal": "scipy.special.ellip_normal",
        "scipy.special._ufuncs.errstate": "scipy.special.errstate",
        "scipy.special._orthogonal.gegenbauer": "scipy.special.orthogonal.gegenbauer",
        "scipy.special._orthogonal.genlaguerre": "scipy.special.orthogonal.genlaguerre",
        "scipy.special._ufuncs.geterr": "scipy.special.geterr",
        "scipy.special._orthogonal.roots_hermite": "scipy.special.roots_hermite",
        "scipy.special._orthogonal.roots_hermitenorm": "scipy.special.roots_hermitenorm",
        "scipy.special._orthogonal.hermite": "scipy.special.orthogonal.hermite",
        "scipy.special._orthogonal.hermitenorm": "scipy.special.orthogonal.hermitenorm",
        "scipy.special._orthogonal.roots_jacobi": "scipy.special.roots_jacobi",
        "scipy.special._orthogonal.jacobi": "scipy.special.orthogonal.jacobi",
        "scipy.special._orthogonal.roots_sh_jacobi": "scipy.special.roots_sh_jacobi",
        "scipy.special._orthogonal.roots_laguerre": "scipy.special.roots_laguerre",
        "scipy.special._orthogonal.roots_genlaguerre": "scipy.special.roots_genlaguerre",
        "scipy.special._orthogonal.laguerre": "scipy.special.orthogonal.laguerre",
        "scipy.special._lambertw.lambertw": "scipy.signal.signaltools.lambertw",
        "scipy.special._orthogonal.legendre": "scipy.special.orthogonal.legendre",
        "scipy.special._logsumexp.log_softmax": "scipy.special.log_softmax",
        "scipy.special._logsumexp.logsumexp": "scipy.stats.kde.logsumexp",
        "scipy.special._spfun_stats.multigammaln": "scipy.special.spfun_stats.multigammaln",
        "scipy.linalg._misc.LinAlgWarning": "scipy.signal.fir_filter_design.LinAlgWarning",
        "scipy.linalg._cythonized_array_utils.bandwidth": "scipy.linalg.bandwidth",
        "scipy.linalg._basic.det": "scipy.linalg.det",
        "scipy.linalg.lapack.get_lapack_funcs": "scipy.sparse.linalg._isolve.iterative.get_lapack_funcs",
        "scipy.linalg._basic.inv": "scipy.optimize.nonlin.inv",
        "scipy.linalg._solve_toeplitz.levinson": "scipy.linalg.basic.levinson",
        "scipy.linalg._basic.lstsq": "scipy.signal.fir_filter_design.lstsq",
        "scipy.linalg._basic.matmul_toeplitz": "scipy.linalg.matmul_toeplitz",
        "scipy.linalg._basic.matrix_balance": "scipy.linalg.matrix_balance",
        "scipy.linalg._basic.pinv": "scipy.linalg.pinv",
        "scipy.linalg._basic.pinvh": "scipy.linalg.pinvh",
        "scipy.linalg._basic.solve": "scipy.optimize.nonlin.solve",
        "scipy.linalg._basic.solve_banded": "scipy.linalg.solve_banded",
        "scipy.linalg._basic.solve_circulant": "scipy.linalg.solve_circulant",
        "scipy.linalg._basic.solve_toeplitz": "scipy.linalg.solve_toeplitz",
        "scipy.linalg._basic.solve_triangular": "scipy.sparse.linalg.matfuncs.solve_triangular",
        "scipy.linalg._basic.solveh_banded": "scipy.linalg.solveh_banded",
        "scipy.linalg.blas.find_best_blas_type": "scipy.linalg.find_best_blas_type",
        "scipy.linalg.blas.get_blas_funcs": "scipy.optimize.nonlin.get_blas_funcs",
        "scipy.linalg._special_matrices.block_diag": "scipy.linalg.special_matrices.block_diag",
        "scipy.linalg._decomp.cdf2rdf": "scipy.linalg.decomp.cdf2rdf",
        "scipy.linalg._decomp_cholesky.cho_factor": "scipy.linalg.decomp_cholesky.cho_factor",
        "scipy.linalg._decomp_cholesky.cho_solve": "scipy.linalg.decomp_cholesky.cho_solve",
        "scipy.linalg._decomp_cholesky.cho_solve_banded": "scipy.linalg.decomp_cholesky.cho_solve_banded",
        "scipy.linalg._decomp_cholesky.cholesky": "scipy.optimize.minpack.cholesky",
        "scipy.linalg._decomp_cholesky.cholesky_banded": "scipy.linalg.decomp_cholesky.cholesky_banded",
        "scipy.linalg._special_matrices.circulant": "scipy.linalg.special_matrices.circulant",
        "scipy.linalg._sketches.clarkson_woodruff_transform": "scipy.linalg.clarkson_woodruff_transform",
        "scipy.linalg._special_matrices.companion": "scipy.linalg.special_matrices.companion",
        "scipy.linalg._special_matrices.convolution_matrix": "scipy.linalg.special_matrices.convolution_matrix",
        "scipy.linalg._matfuncs.coshm": "scipy.linalg.matfuncs.coshm",
        "scipy.linalg._matfuncs.cosm": "scipy.linalg.matfuncs.cosm",
        "scipy.linalg._decomp_cossin.cossin": "scipy.linalg.cossin",
        "scipy.linalg._decomp.eig": "scipy.sparse.linalg._eigen.arpack.arpack.eig",
        "scipy.linalg._decomp.eig_banded": "scipy.linalg.eig_banded",
        "scipy.linalg._decomp.eigh": "scipy.sparse.linalg._eigen.arpack.arpack.eigh",
        "scipy.linalg._decomp.eigh_tridiagonal": "scipy.linalg.eigh_tridiagonal",
        "scipy.linalg._decomp.eigvals": "scipy.linalg.eigvals",
        "scipy.linalg._decomp.eigvals_banded": "scipy.linalg.eigvals_banded",
        "scipy.linalg._decomp.eigvalsh": "scipy.linalg.eigvalsh",
        "scipy.linalg._decomp.eigvalsh_tridiagonal": "scipy.linalg.eigvalsh_tridiagonal",
        "scipy.linalg._decomp.hessenberg": "scipy.linalg.hessenberg",
        "scipy.linalg._decomp_lu.lu": "scipy.linalg.lu",
        "scipy.linalg._decomp_lu.lu_factor": "scipy.sparse.linalg._eigen.arpack.arpack.lu_factor",
        "scipy.linalg._decomp_lu.lu_solve": "scipy.sparse.linalg._eigen.arpack.arpack.lu_solve",
        "scipy.linalg._decomp_qr.qr": "scipy.signal.ltisys.s_qr",
        "scipy.linalg._decomp_qr.qr_multiply": "scipy.linalg.qr_multiply",
        "scipy.linalg._decomp_qr.rq": "scipy.linalg.rq",
        "scipy.linalg._decomp_qr.safecall": "scipy.linalg.decomp_qr.safecall",
        "scipy.linalg._decomp_schur.rsf2csf": "scipy.linalg.rsf2csf",
        "scipy.linalg._decomp_schur.schur": "scipy.linalg.schur",
        "scipy.linalg._decomp_svd.diagsvd": "scipy.linalg.diagsvd",
        "scipy.linalg._decomp_svd.null_space": "scipy.linalg.null_space",
        "scipy.linalg._decomp_svd.orth": "scipy.linalg.orth",
        "scipy.linalg._decomp_svd.subspace_angles": "scipy.linalg.subspace_angles",
        "scipy.linalg._decomp_svd.svd": "scipy.optimize.nonlin.svd",
        "scipy.linalg._decomp_svd.svdvals": "scipy.linalg.svdvals",
        "scipy.linalg._special_matrices.dft": "scipy.linalg.special_matrices.dft",
        "scipy.linalg._matfuncs.expm": "scipy.linalg.matfuncs.expm",
        "scipy.linalg._expm_frechet.expm_cond": "scipy.linalg.matfuncs.expm_cond",
        "scipy.linalg._expm_frechet.expm_frechet": "scipy.linalg.matfuncs.expm_frechet",
        "scipy.linalg._special_matrices.fiedler": "scipy.linalg.special_matrices.fiedler",
        "scipy.linalg._special_matrices.fiedler_companion": "scipy.linalg.special_matrices.fiedler_companion",
        "scipy.linalg._matfuncs.fractional_matrix_power": "scipy.linalg.matfuncs.fractional_matrix_power",
        "scipy.linalg._matfuncs.funm": "scipy.linalg.matfuncs.funm",
        "scipy.linalg._special_matrices.hadamard": "scipy.linalg.special_matrices.hadamard",
        "scipy.linalg._special_matrices.hankel": "scipy.signal.fir_filter_design.hankel",
        "scipy.linalg._special_matrices.helmert": "scipy.linalg.special_matrices.helmert",
        "scipy.linalg._special_matrices.hilbert": "scipy.linalg.special_matrices.hilbert",
        "scipy.linalg.interpolative.estimate_rank": "scipy.linalg.interpolative.estimate_rank",
        "scipy.linalg.interpolative.estimate_spectral_norm": "scipy.linalg.interpolative.estimate_spectral_norm",
        "scipy.linalg.interpolative.estimate_spectral_norm_diff": "scipy.linalg.interpolative.estimate_spectral_norm_diff",
        "scipy.linalg.interpolative.id_to_svd": "scipy.linalg.interpolative.id_to_svd",
        "scipy.linalg.interpolative.interp_decomp": "scipy.linalg.interpolative.interp_decomp",
        "scipy.linalg.interpolative.rand": "scipy.linalg.interpolative.rand",
        "scipy.linalg.interpolative.reconstruct_interp_matrix": "scipy.linalg.interpolative.reconstruct_interp_matrix",
        "scipy.linalg.interpolative.reconstruct_matrix_from_id": "scipy.linalg.interpolative.reconstruct_matrix_from_id",
        "scipy.linalg.interpolative.reconstruct_skel_matrix": "scipy.linalg.interpolative.reconstruct_skel_matrix",
        "scipy.linalg.interpolative.seed": "scipy.linalg.interpolative.seed",
        "scipy.linalg.interpolative.svd": "scipy.linalg.interpolative.svd",
        "scipy.linalg._special_matrices.invhilbert": "scipy.linalg.special_matrices.invhilbert",
        "scipy.linalg._special_matrices.invpascal": "scipy.linalg.special_matrices.invpascal",
        "scipy.linalg._cythonized_array_utils.ishermitian": "scipy.linalg.ishermitian",
        "scipy.linalg._cythonized_array_utils.issymmetric": "scipy.linalg.issymmetric",
        "scipy.linalg._matfuncs.khatri_rao": "scipy.linalg.matfuncs.khatri_rao",
        "scipy.linalg._special_matrices.kron": "scipy.linalg.special_matrices.kron",
        "scipy.linalg._decomp_ldl.ldl": "scipy.linalg.ldl",
        "scipy.linalg._special_matrices.leslie": "scipy.linalg.special_matrices.leslie",
        "scipy.linalg._matfuncs.logm": "scipy.linalg.matfuncs.logm",
        "scipy.linalg._matfuncs.signm": "scipy.linalg.signm",
        "scipy.linalg._matfuncs.sinhm": "scipy.linalg.sinhm",
        "scipy.linalg._matfuncs.sinm": "scipy.linalg.sinm",
        "scipy.linalg._matfuncs_sqrtm.sqrtm": "scipy.linalg.sqrtm",
        "scipy.linalg._matfuncs.tanhm": "scipy.linalg.tanhm",
        "scipy.linalg._matfuncs.tanm": "scipy.linalg.tanm",
        "scipy.linalg._decomp_qz.ordqz": "scipy.linalg.ordqz",
        "scipy.linalg._procrustes.orthogonal_procrustes": "scipy.linalg.orthogonal_procrustes",
        "scipy.linalg._special_matrices.pascal": "scipy.linalg.special_matrices.pascal",
        "scipy.linalg._decomp_polar.polar": "scipy.linalg.polar",
        "scipy.linalg._decomp_update.qr_delete": "scipy.linalg.qr_delete",
        "scipy.linalg._decomp_update.qr_insert": "scipy.linalg.qr_insert",
        "scipy.linalg._decomp_update.qr_update": "scipy.linalg.qr_update",
        "scipy.linalg._decomp_qz.qz": "scipy.linalg.qz",
        "scipy.linalg._solvers.solve_continuous_are": "scipy.linalg.solve_continuous_are",
        "scipy.linalg._solvers.solve_continuous_lyapunov": "scipy.linalg.solve_lyapunov",
        "scipy.linalg._solvers.solve_discrete_are": "scipy.linalg.solve_discrete_are",
        "scipy.linalg._solvers.solve_discrete_lyapunov": "scipy.linalg.solve_discrete_lyapunov",
        "scipy.linalg._solvers.solve_sylvester": "scipy.linalg.solve_sylvester",
        "scipy.linalg._special_matrices.toeplitz": "scipy.signal.fir_filter_design.toeplitz",
        "scipy.special._orthogonal.orthopoly1d": "scipy.special.orthogonal.orthopoly1d",
        "scipy.special._orthogonal.roots_legendre": "scipy.special.roots_legendre",
        "scipy.special._orthogonal.roots_sh_legendre": "scipy.special.roots_sh_legendre",
        "scipy.special._orthogonal.roots_chebys": "scipy.special.s_roots",
        "scipy.special._orthogonal.roots_chebyt": "scipy.special.t_roots",
        "scipy.special._orthogonal.roots_chebyu": "scipy.special.u_roots",
        "scipy.special._orthogonal.roots_sh_chebyt": "scipy.special.ts_roots",
        "scipy.special._orthogonal.roots_sh_chebyu": "scipy.special.us_roots",
        "scipy.special._orthogonal.sh_chebyt": "scipy.special.sh_chebyt",
        "scipy.special._orthogonal.sh_chebyu": "scipy.special.sh_chebyu",
        "scipy.special._orthogonal.sh_jacobi": "scipy.special.sh_jacobi",
        "scipy.special._orthogonal.sh_legendre": "scipy.special.sh_legendre",
        "scipy.special._ufuncs.seterr": "scipy.special.seterr",
        "scipy.special._logsumexp.softmax": "scipy.special.softmax",
        "scipy.special._specfun.airyzo": "scipy.special.specfun.airyzo",
        "scipy.special._specfun.bernob": "scipy.special.specfun.bernob",
        "scipy.special._specfun.cerzo": "scipy.special.specfun.cerzo",
        "scipy.special._specfun.clpmn": "scipy.special.specfun.clpmn",
        "scipy.special._specfun.clpn": "scipy.special.specfun.clpn",
        "scipy.special._specfun.clqmn": "scipy.special.specfun.clqmn",
        "scipy.special._specfun.clqn": "scipy.special.specfun.clqn",
        "scipy.special._specfun.cpbdn": "scipy.special.specfun.cpbdn",
        "scipy.special._specfun.cyzo": "scipy.special.specfun.cyzo",
        "scipy.special._specfun.eulerb": "scipy.special.specfun.eulerb",
        "scipy.special._specfun.fcoef": "scipy.special.specfun.fcoef",
        "scipy.special._specfun.fcszo": "scipy.special.specfun.fcszo",
        "scipy.special._specfun.jdzo": "scipy.special.specfun.jdzo",
        "scipy.special._specfun.jyzo": "scipy.special.specfun.jyzo",
        "scipy.special._specfun.klvnzo": "scipy.special.specfun.klvnzo",
        "scipy.special._specfun.lamn": "scipy.special.specfun.lamn",
        "scipy.special._specfun.lamv": "scipy.special.specfun.lamv",
        "scipy.special._specfun.lpmn": "scipy.special.specfun.lpmn",
        "scipy.special._specfun.lpn": "scipy.special.specfun.lpn",
        "scipy.special._specfun.lqmn": "scipy.special.specfun.lqmn",
        "scipy.special._specfun.lqnb": "scipy.special.specfun.lqnb",
        "scipy.special._specfun.pbdv": "scipy.special.specfun.pbdv",
        "scipy.special._specfun.rctj": "scipy.special.specfun.rctj",
        "scipy.special._specfun.rcty": "scipy.special.specfun.rcty",
        "scipy.special._specfun.segv": "scipy.special.specfun.segv",
        "scipy.special._spherical_bessel.spherical_in": "scipy.special.spherical_in",
        "scipy.special._spherical_bessel.spherical_jn": "scipy.special.spherical_jn",
        "scipy.special._spherical_bessel.spherical_kn": "scipy.special.spherical_kn",
        "scipy.special._spherical_bessel.spherical_yn": "scipy.special.spherical_yn",
        "scipy.special._basic.stirling2": "scipy.special.stirling2",
        "scipy.interpolate._polyint.krogh_interpolate": "scipy.interpolate.polyint.krogh_interpolate",
        "scipy.interpolate._bsplines.make_lsq_spline": "scipy.interpolate.make_lsq_spline",
        "scipy.interpolate._bsplines.make_smoothing_spline": "scipy.interpolate.make_smoothing_spline",
        "scipy.spatial._ckdtree.cKDTree": "scipy.spatial.kdtree.cKDTree",
        "scipy.interpolate._pade.pade": "scipy.interpolate.pade",
        "scipy.interpolate._cubic.pchip_interpolate": "scipy.interpolate.pchip_interpolate",
        "scipy._lib._util.float_factorial": "scipy.stats.stats.float_factorial",
        "scipy.io._fortran.FortranEOFError": "scipy.io.FortranEOFError",
        "scipy.io._fortran.FortranFile": "scipy.io.FortranFile",
        "scipy.io._fortran.FortranFormattingError": "scipy.io.FortranFormattingError",
        "scipy.io.arff._arffread.ArffError": "scipy.io.arff.arffread.ArffError",
        "scipy.io.arff._arffread.MetaData": "scipy.io.arff.arffread.MetaData",
        "scipy.io.arff._arffread.ParseArffError": "scipy.io.arff.arffread.ParseArffError",
        "scipy.io.arff._arffread.Attribute": "scipy.io.arff.arffread.Attribute",
        "scipy.io.arff._arffread.DateAttribute": "scipy.io.arff.arffread.DateAttribute",
        "scipy.io.arff._arffread.NominalAttribute": "scipy.io.arff.arffread.NominalAttribute",
        "scipy.io.arff._arffread.NumericAttribute": "scipy.io.arff.arffread.NumericAttribute",
        "scipy.io.arff._arffread.RelationalAttribute": "scipy.io.arff.arffread.RelationalAttribute",
        "scipy.io.arff._arffread.StringAttribute": "scipy.io.arff.arffread.StringAttribute",
        "scipy.io.arff._arffread.basic_stats": "scipy.io.arff.arffread.basic_stats",
        "scipy.io.arff._arffread.csv_sniffer_has_bug_last_field": "scipy.io.arff.arffread.csv_sniffer_has_bug_last_field",
        "scipy.io.arff._arffread.loadarff": "scipy.io.arff.loadarff",
        "scipy.io.arff._arffread.print_attribute": "scipy.io.arff.arffread.print_attribute",
        "scipy.io.arff._arffread.read_header": "scipy.io.arff.arffread.read_header",
        "scipy.io.arff._arffread.read_relational_attribute": "scipy.io.arff.arffread.read_relational_attribute",
        "scipy.io.arff._arffread.split_data_line": "scipy.io.arff.arffread.split_data_line",
        "scipy.io.arff._arffread.test_weka": "scipy.io.arff.arffread.test_weka",
        "scipy.io.arff._arffread.to_attribute": "scipy.io.arff.arffread.to_attribute",
        "scipy.io.arff._arffread.tokenize_attribute": "scipy.io.arff.arffread.tokenize_attribute",
        "scipy.io.arff._arffread.tokenize_single_comma": "scipy.io.arff.arffread.tokenize_single_comma",
        "scipy.io.arff._arffread.tokenize_single_wcomma": "scipy.io.arff.arffread.tokenize_single_wcomma",
        "scipy.io.arff._arffread.workaround_csv_sniffer_bug_last_field": "scipy.io.arff.arffread.workaround_csv_sniffer_bug_last_field",
        "scipy.io._harwell_boeing._fortran_format_parser.BadFortranFormat": "scipy.io.harwell_boeing.BadFortranFormat",
        "scipy.io._harwell_boeing._fortran_format_parser.ExpFormat": "scipy.io._harwell_boeing.hb.ExpFormat",
        "scipy.io._harwell_boeing._fortran_format_parser.FortranFormatParser": "scipy.io._harwell_boeing.hb.FortranFormatParser",
        "scipy.io._harwell_boeing.hb.HBFile": "scipy.io._harwell_boeing.hb.HBFile",
        "scipy.io._harwell_boeing.hb.HBInfo": "scipy.io._harwell_boeing.hb.HBInfo",
        "scipy.io._harwell_boeing.hb.HBMatrixType": "scipy.io._harwell_boeing.hb.HBMatrixType",
        "scipy.io._harwell_boeing._fortran_format_parser.IntFormat": "scipy.io._harwell_boeing.hb.IntFormat",
        "scipy.io._harwell_boeing.hb.MalformedHeader": "scipy.io._harwell_boeing.hb.MalformedHeader",
        "scipy.io._harwell_boeing.hb.LineOverflow": "scipy.io._harwell_boeing.hb.LineOverflow",
        "scipy.sparse._csc.csc_matrix": "scipy.sparse.linalg._dsolve.linsolve.csc_matrix",
        "scipy.io._harwell_boeing.hb.hb_read": "scipy.io.hb_read",
        "scipy.io._harwell_boeing.hb.hb_write": "scipy.io.hb_write",
        "scipy.io._idl.AttrDict": "scipy.io.idl.AttrDict",
        "scipy.io._idl.ObjectPointer": "scipy.io.idl.ObjectPointer",
        "scipy.io._idl.Pointer": "scipy.io.idl.Pointer",
        "scipy.io._idl.readsav": "scipy.io.readsav",
        "scipy.io.matlab._mio.loadmat": "scipy.io.matlab.mio.loadmat",
        "scipy.io.matlab._miobase.MatReadError": "scipy.io.matlab.miobase.MatReadError",
        "scipy.io.matlab._miobase.MatReadWarning": "scipy.io.matlab.miobase.MatReadWarning",
        "scipy.io.matlab._miobase.MatWriteError": "scipy.io.matlab.miobase.MatWriteError",
        "scipy.io.matlab._mio5_params.MatlabFunction": "scipy.io.matlab._mio5_params.MatlabFunction",
        "scipy.io.matlab._mio5_params.MatlabObject": "scipy.io.matlab._mio5_params.MatlabObject",
        "scipy.io.matlab._mio5_params.MatlabOpaque": "scipy.io.matlab._mio5_params.MatlabOpaque",
        "scipy.io.matlab._byteordercodes.to_numpy_code": "scipy.io.matlab._byteordercodes.to_numpy_code",
        "scipy.io.matlab._mio5_params.mat_struct": "scipy.io.matlab._mio5_params.mat_struct",
        "scipy.io.matlab._miobase.matfile_version": "scipy.io.matlab.miobase.get_matfile_version",
        "scipy.io.matlab._mio4.MatFile4Reader": "scipy.io.matlab.mio4.MatFile4Reader",
        "scipy.io.matlab._mio4.MatFile4Writer": "scipy.io.matlab.mio4.MatFile4Writer",
        "scipy.io.matlab._mio5.MatFile5Reader": "scipy.io.matlab.mio5.MatFile5Reader",
        "scipy.io.matlab._mio5.MatFile5Writer": "scipy.io.matlab.mio5.MatFile5Writer",
        "scipy._lib.doccer.filldoc.<locals>.decorate": "scipy.ndimage.interpolation.docfiller",
        "scipy.io.matlab._mio.mat_reader_factory": "scipy.io.matlab.mio.mat_reader_factory",
        "scipy.io.matlab._mio.savemat": "scipy.io.savemat",
        "scipy.io.matlab._mio.whosmat": "scipy.io.whosmat",
        "scipy.io.matlab._miobase.MatFileReader": "scipy.io.matlab.miobase.MatFileReader",
        "scipy.io.matlab._mio4.VarHeader4": "scipy.io.matlab.mio4.VarHeader4",
        "scipy.io.matlab._mio4.VarReader4": "scipy.io.matlab.mio4.VarReader4",
        "scipy.io.matlab._mio4.VarWriter4": "scipy.io.matlab.mio4.VarWriter4",
        "scipy.io.matlab._miobase.arr_dtype_number": "scipy.io.matlab.miobase.arr_dtype_number",
        "scipy.io.matlab._mio4.arr_to_2d": "scipy.io.matlab.mio4.arr_to_2d",
        "scipy.io.matlab._miobase.arr_to_chars": "scipy.io.matlab.miobase.arr_to_chars",
        "scipy.io.matlab._mio_utils.chars_to_strings": "scipy.io.matlab.mio_utils.chars_to_strings",
        "scipy.io.matlab._miobase.convert_dtypes": "scipy.io.matlab.miobase.convert_dtypes",
        "scipy.io.matlab._miobase.matdims": "scipy.io.matlab.miobase.matdims",
        "scipy.io.matlab._miobase.read_dtype": "scipy.io.matlab.miobase.read_dtype",
        "scipy.io.matlab._mio_utils.squeeze_element": "scipy.io.matlab.mio_utils.squeeze_element",
        "scipy.io.matlab._mio5.EmptyStructMarker": "scipy.io.matlab.mio5.EmptyStructMarker",
        "scipy.io.matlab._mio5_utils.VarReader5": "scipy.io.matlab.mio5_utils.VarReader5",
        "scipy.io.matlab._mio5.VarWriter5": "scipy.io.matlab.mio5.VarWriter5",
        "scipy.io.matlab._streams.ZlibInputStream": "scipy.io.matlab.streams.ZlibInputStream",
        "scipy.io.matlab._mio5.to_writeable": "scipy.io.matlab.mio5.to_writeable",
        "scipy.io.matlab._mio5.varmats_from_mat": "scipy.io.matlab.mio5.varmats_from_mat",
        "scipy.io.matlab._mio5_utils.VarHeader5": "scipy.io.matlab.mio5_utils.VarHeader5",
        "scipy.io.matlab._mio5_utils.byteswap_u4": "scipy.io.matlab.mio5_utils.byteswap_u4",
        "scipy.io.matlab._miobase.MatVarReader": "scipy.io.matlab.miobase.MatVarReader",
        "scipy._lib.doccer.doc_replace": "scipy._lib.doccer.doc_replace",
        "scipy._lib.doccer.docformat": "scipy._lib.doccer.docformat",
        "scipy._lib.doccer.extend_notes_in_docstring": "scipy._lib.doccer.extend_notes_in_docstring",
        "scipy._lib.doccer.filldoc": "scipy._lib.doccer.filldoc",
        "scipy._lib.doccer.indentcount_lines": "scipy._lib.doccer.indentcount_lines",
        "scipy._lib.doccer.inherit_docstring_from": "scipy._lib.doccer.inherit_docstring_from",
        "scipy._lib.doccer.replace_notes_in_docstring": "scipy._lib.doccer.replace_notes_in_docstring",
        "scipy._lib.doccer.unindent_dict": "scipy._lib.doccer.unindent_dict",
        "scipy._lib.doccer.unindent_string": "scipy._lib.doccer.unindent_string",
        "scipy.io.matlab._streams.GenericStream": "scipy.io.matlab.streams.GenericStream",
        "scipy.io.matlab._streams.make_stream": "scipy.io.matlab.streams.make_stream",
        "scipy.io._fast_matrix_market.mminfo": "scipy.io.mminfo",
        "scipy.io._mmio.MMFile": "scipy.io.mmio.MMFile",
        "scipy.io._mmio.asstr": "scipy.io.mmio.asstr",
        "scipy.sparse._coo.coo_matrix": "scipy.sparse.extract.coo_matrix",
        "scipy.io._mmio.mminfo": "scipy.io.mmio.mminfo",
        "scipy.io._mmio.mmread": "scipy.io.mmio.mmread",
        "scipy.io._mmio.mmwrite": "scipy.io.mmio.mmwrite",
        "scipy.io._fast_matrix_market.mmread": "scipy.io.mmread",
        "scipy.io._fast_matrix_market.mmwrite": "scipy.io.mmwrite",
        "scipy.io._netcdf.netcdf_file": "scipy.io.netcdf_file",
        "scipy.io._netcdf.netcdf_variable": "scipy.io.netcdf_variable",
        "scipy.io.wavfile.WAVE_FORMAT": "scipy.io.wavfile.WAVE_FORMAT",
        "scipy.io.wavfile.WavFileWarning": "scipy.io.wavfile.WavFileWarning",
        "scipy.io.wavfile.read": "scipy.io.wavfile.read",
        "scipy.io.wavfile.write": "scipy.io.wavfile.write",
        "scipy.misc._common.ascent": "scipy.misc.ascent",
        "scipy.misc._common.central_diff_weights": "scipy.misc.central_diff_weights",
        "scipy.misc._common.derivative": "scipy.misc.derivative",
        "scipy.misc._common.electrocardiogram": "scipy.misc.electrocardiogram",
        "scipy.misc._common.face": "scipy.misc.face",
        "scipy.ndimage._interpolation.affine_transform": "scipy.ndimage.interpolation.affine_transform",
        "scipy.ndimage._morphology.binary_closing": "scipy.ndimage.morphology.binary_closing",
        "scipy.ndimage._morphology.binary_dilation": "scipy.ndimage.morphology.binary_dilation",
        "scipy.ndimage._morphology.binary_erosion": "scipy.ndimage.morphology.binary_erosion",
        "scipy.ndimage._morphology.binary_fill_holes": "scipy.ndimage.morphology.binary_fill_holes",
        "scipy.ndimage._morphology.binary_hit_or_miss": "scipy.ndimage.morphology.binary_hit_or_miss",
        "scipy.ndimage._morphology.binary_opening": "scipy.ndimage.morphology.binary_opening",
        "scipy.ndimage._morphology.binary_propagation": "scipy.ndimage.morphology.binary_propagation",
        "scipy.ndimage._morphology.black_tophat": "scipy.ndimage.morphology.black_tophat",
        "scipy.ndimage._measurements.center_of_mass": "scipy.ndimage.measurements.center_of_mass",
        "scipy.ndimage._filters.convolve": "scipy.ndimage.filters.convolve",
        "scipy.ndimage._filters.convolve1d": "scipy.ndimage.filters.convolve1d",
        "scipy.ndimage._filters.correlate": "scipy.ndimage.filters.correlate",
        "scipy.ndimage._filters.correlate1d": "scipy.ndimage.filters.correlate1d",
        "scipy.ndimage._morphology.distance_transform_bf": "scipy.ndimage.morphology.distance_transform_bf",
        "scipy.ndimage._morphology.distance_transform_cdt": "scipy.ndimage.morphology.distance_transform_cdt",
        "scipy.ndimage._morphology.distance_transform_edt": "scipy.ndimage.morphology.distance_transform_edt",
        "scipy.ndimage._measurements.extrema": "scipy.ndimage.measurements.extrema",
        "scipy.ndimage._filters.gaussian_filter": "scipy.ndimage.gaussian_filter",
        "scipy.ndimage._filters.gaussian_filter1d": "scipy.ndimage.gaussian_filter1d",
        "scipy.ndimage._filters.gaussian_gradient_magnitude": "scipy.ndimage.gaussian_gradient_magnitude",
        "scipy.ndimage._filters.gaussian_laplace": "scipy.ndimage.gaussian_laplace",
        "scipy.ndimage._filters.generic_filter": "scipy.ndimage.generic_filter",
        "scipy.ndimage._filters.generic_filter1d": "scipy.ndimage.generic_filter1d",
        "scipy.ndimage._filters.generic_gradient_magnitude": "scipy.ndimage.generic_gradient_magnitude",
        "scipy.ndimage._filters.generic_laplace": "scipy.ndimage.generic_laplace",
        "scipy.ndimage._filters.laplace": "scipy.ndimage.laplace",
        "scipy.ndimage._filters.maximum_filter": "scipy.ndimage.maximum_filter",
        "scipy.ndimage._filters.maximum_filter1d": "scipy.ndimage.maximum_filter1d",
        "scipy.ndimage._filters.median_filter": "scipy.ndimage.median_filter",
        "scipy.ndimage._filters.minimum_filter": "scipy.ndimage.minimum_filter",
        "scipy.ndimage._filters.minimum_filter1d": "scipy.ndimage.minimum_filter1d",
        "scipy.ndimage._filters.percentile_filter": "scipy.ndimage.percentile_filter",
        "scipy.ndimage._filters.prewitt": "scipy.ndimage.prewitt",
        "scipy.ndimage._filters.rank_filter": "scipy.ndimage.rank_filter",
        "scipy.ndimage._filters.sobel": "scipy.ndimage.sobel",
        "scipy.ndimage._filters.uniform_filter": "scipy.ndimage.uniform_filter",
        "scipy.ndimage._filters.uniform_filter1d": "scipy.ndimage.uniform_filter1d",
        "scipy.ndimage._measurements.find_objects": "scipy.ndimage.measurements.find_objects",
        "scipy.ndimage._fourier.fourier_ellipsoid": "scipy.ndimage.fourier_ellipsoid",
        "scipy.ndimage._fourier.fourier_gaussian": "scipy.ndimage.fourier_gaussian",
        "scipy.ndimage._fourier.fourier_shift": "scipy.ndimage.fourier_shift",
        "scipy.ndimage._fourier.fourier_uniform": "scipy.ndimage.fourier_uniform",
        "scipy.ndimage._morphology.generate_binary_structure": "scipy.ndimage.morphology.generate_binary_structure",
        "scipy.ndimage._interpolation.geometric_transform": "scipy.ndimage.interpolation.geometric_transform",
        "scipy.ndimage._morphology.grey_closing": "scipy.ndimage.morphology.grey_closing",
        "scipy.ndimage._morphology.grey_dilation": "scipy.ndimage.morphology.grey_dilation",
        "scipy.ndimage._morphology.grey_erosion": "scipy.ndimage.morphology.grey_erosion",
        "scipy.ndimage._morphology.grey_opening": "scipy.ndimage.morphology.grey_opening",
        "scipy.ndimage._measurements.histogram": "scipy.ndimage.measurements.histogram",
        "scipy.ndimage._interpolation.map_coordinates": "scipy.ndimage.map_coordinates",
        "scipy.ndimage._interpolation.rotate": "scipy.ndimage.rotate",
        "scipy.ndimage._interpolation.shift": "scipy.ndimage.shift",
        "scipy.ndimage._interpolation.spline_filter": "scipy.ndimage.spline_filter",
        "scipy.ndimage._interpolation.spline_filter1d": "scipy.ndimage.spline_filter1d",
        "scipy.ndimage._interpolation.zoom": "scipy.ndimage.zoom",
        "scipy.ndimage._morphology.iterate_structure": "scipy.ndimage.morphology.iterate_structure",
        "scipy.ndimage._measurements.label": "scipy.ndimage.measurements.label",
        "scipy.ndimage._measurements.labeled_comprehension": "scipy.ndimage.measurements.labeled_comprehension",
        "scipy.ndimage._measurements.maximum": "scipy.ndimage.measurements.maximum",
        "scipy.ndimage._measurements.maximum_position": "scipy.ndimage.measurements.maximum_position",
        "scipy.ndimage._measurements.mean": "scipy.ndimage.measurements.mean",
        "scipy.ndimage._measurements.median": "scipy.ndimage.median",
        "scipy.ndimage._measurements.minimum": "scipy.ndimage.minimum",
        "scipy.ndimage._measurements.minimum_position": "scipy.ndimage.minimum_position",
        "scipy.ndimage._measurements.standard_deviation": "scipy.ndimage.standard_deviation",
        "scipy.ndimage._measurements.sum": "scipy.ndimage.sum",
        "scipy.ndimage._measurements.sum_labels": "scipy.ndimage.sum_labels",
        "scipy.ndimage._measurements.variance": "scipy.ndimage.variance",
        "scipy.ndimage._measurements.watershed_ift": "scipy.ndimage.watershed_ift",
        "scipy.ndimage._morphology.morphological_gradient": "scipy.ndimage.morphology.morphological_gradient",
        "scipy.ndimage._morphology.morphological_laplace": "scipy.ndimage.morphology.morphological_laplace",
        "scipy.ndimage._morphology.white_tophat": "scipy.ndimage.white_tophat",
        "scipy.ndimage._measurements.value_indices": "scipy.ndimage.value_indices",
        "scipy.odr._odrpack.Data": "scipy.odr.odrpack.Data",
        "scipy.odr._odrpack.Model": "scipy.odr.odrpack.Model",
        "scipy.odr._odrpack.ODR": "scipy.odr.odrpack.ODR",
        "scipy.odr._odrpack.OdrError": "scipy.odr.odrpack.odr_error",
        "scipy.odr._odrpack.OdrStop": "scipy.odr.odrpack.odr_stop",
        "scipy.odr._odrpack.OdrWarning": "scipy.odr.odrpack.OdrWarning",
        "scipy.odr._odrpack.Output": "scipy.odr.odrpack.Output",
        "scipy.odr._odrpack.RealData": "scipy.odr.odrpack.RealData",
        "scipy.odr._models.polynomial": "scipy.odr.polynomial",
        "scipy.optimize._hessian_update_strategy.BFGS": "scipy.optimize.BFGS",
        "scipy.optimize._constraints.Bounds": "scipy.optimize.Bounds",
        "scipy.optimize._nonlin.BroydenFirst": "scipy.optimize.nonlin.BroydenFirst",
        "scipy.optimize._hessian_update_strategy.HessianUpdateStrategy": "scipy.optimize.HessianUpdateStrategy",
        "scipy.optimize._nonlin.InverseJacobian": "scipy.optimize.nonlin.InverseJacobian",
        "scipy.optimize._nonlin.KrylovJacobian": "scipy.optimize.nonlin.KrylovJacobian",
        "scipy.optimize._lbfgsb_py.LbfgsInvHessProduct": "scipy.optimize.lbfgsb.LbfgsInvHessProduct",
        "scipy.optimize._constraints.LinearConstraint": "scipy.optimize.LinearConstraint",
        "scipy.optimize._nonlin.NoConvergence": "scipy.optimize.nonlin.NoConvergence",
        "scipy.optimize._constraints.NonlinearConstraint": "scipy.optimize.NonlinearConstraint",
        "scipy.optimize._optimize.OptimizeResult": "scipy.optimize.tnc.OptimizeResult",
        "scipy.optimize._optimize.OptimizeWarning": "scipy.optimize.optimize.OptimizeWarning",
        "scipy.optimize._zeros_py.RootResults": "scipy.optimize.zeros.RootResults",
        "scipy.optimize._hessian_update_strategy.SR1": "scipy.optimize.SR1",
        "scipy.optimize._nonlin.anderson": "scipy.optimize.nonlin.anderson",
        "scipy.optimize._optimize.approx_fprime": "scipy.optimize.optimize.approx_fprime",
        "scipy.optimize._basinhopping.basinhopping": "scipy.optimize.basinhopping",
        "scipy.optimize._zeros_py.bisect": "scipy.optimize.zeros.bisect",
        "scipy.optimize._optimize.bracket": "scipy.optimize.optimize.bracket",
        "scipy.optimize._optimize.brent": "scipy.optimize.optimize.brent",
        "scipy.optimize._zeros_py.brenth": "scipy.optimize.zeros.brenth",
        "scipy.optimize._zeros_py.brentq": "scipy.optimize.zeros.brentq",
        "scipy.optimize._nonlin.broyden1": "scipy.optimize.nonlin.broyden1",
        "scipy.optimize._nonlin.broyden2": "scipy.optimize.nonlin.broyden2",
        "scipy.optimize._optimize.brute": "scipy.optimize.optimize.brute",
        "scipy.optimize._optimize.check_grad": "scipy.optimize.optimize.check_grad",
        "scipy.optimize._cobyla_py.fmin_cobyla": "scipy.optimize.fmin_cobyla",
        "scipy.optimize._cobyla_py.synchronized": "scipy.optimize.cobyla.synchronized",
        "scipy.optimize._minpack_py.curve_fit": "scipy.optimize.minpack.curve_fit",
        "scipy.optimize._nonlin.diagbroyden": "scipy.optimize.nonlin.diagbroyden",
        "scipy.optimize._differentialevolution.differential_evolution": "scipy.optimize.differential_evolution",
        "scipy.optimize._direct_py.direct": "scipy.optimize.direct",
        "scipy.optimize._dual_annealing.dual_annealing": "scipy.optimize.dual_annealing",
        "scipy.optimize._nonlin.excitingmixing": "scipy.optimize.nonlin.excitingmixing",
        "scipy.optimize._minpack_py.fixed_point": "scipy.optimize.minpack.fixed_point",
        "scipy.optimize._optimize.fmin": "scipy.optimize.optimize.fmin",
        "scipy.optimize._optimize.fmin_bfgs": "scipy.optimize.optimize.fmin_bfgs",
        "scipy.optimize._optimize.fmin_cg": "scipy.optimize.optimize.fmin_cg",
        "scipy.optimize._lbfgsb_py.fmin_l_bfgs_b": "scipy.optimize.lbfgsb.fmin_l_bfgs_b",
        "scipy.optimize._optimize.fmin_ncg": "scipy.optimize.optimize.fmin_ncg",
        "scipy.optimize._optimize.fmin_powell": "scipy.optimize.optimize.fmin_powell",
        "scipy.optimize._slsqp_py.fmin_slsqp": "scipy.optimize.slsqp.fmin_slsqp",
        "scipy.optimize._tnc.fmin_tnc": "scipy.optimize.tnc.fmin_tnc",
        "scipy.optimize._optimize.fminbound": "scipy.optimize.optimize.fminbound",
        "scipy.optimize._minpack_py.fsolve": "scipy.optimize.minpack.fsolve",
        "scipy.optimize._optimize.golden": "scipy.optimize.optimize.golden",
        "scipy.optimize._isotonic.isotonic_regression": "scipy.optimize.isotonic_regression",
        "scipy.sparse.linalg._interface.LinearOperator": "scipy.sparse.linalg.matfuncs.LinearOperator",
        "scipy.optimize._optimize.MemoizeJac": "scipy.optimize.tnc.MemoizeJac",
        "scipy.optimize._constraints.old_bound_to_new": "scipy.optimize.tnc.old_bound_to_new",
        "scipy.optimize._lsq.least_squares.least_squares": "scipy.optimize.minpack.least_squares",
        "scipy.optimize._minpack_py.leastsq": "scipy.optimize.minpack.leastsq",
        "scipy.optimize._linesearch.line_search_wolfe2": "scipy.optimize.optimize.line_search_wolfe2",
        "scipy.optimize._lsap.linear_sum_assignment": "scipy.optimize.linear_sum_assignment",
        "scipy.optimize._nonlin.linearmixing": "scipy.optimize.nonlin.linearmixing",
        "scipy.optimize._linesearch.LineSearchWarning": "scipy.optimize.optimize.LineSearchWarning",
        "scipy.optimize._linesearch.line_search_wolfe1": "scipy.optimize.optimize.line_search_wolfe1",
        "scipy.optimize._linesearch.line_search_BFGS": "scipy.optimize.linesearch.line_search_BFGS",
        "scipy.optimize._linesearch.line_search_armijo": "scipy.optimize.linesearch.line_search_armijo",
        "scipy.optimize._linesearch.scalar_search_armijo": "scipy.optimize.nonlin.scalar_search_armijo",
        "scipy.optimize._linesearch.scalar_search_wolfe1": "scipy.optimize.nonlin.scalar_search_wolfe1",
        "scipy.optimize._linesearch.scalar_search_wolfe2": "scipy.optimize.linesearch.scalar_search_wolfe2",
        "scipy.optimize._linprog.linprog": "scipy.optimize.linprog",
        "scipy.optimize._linprog.linprog_verbose_callback": "scipy.optimize.linprog_verbose_callback",
        "scipy.optimize._lsq.lsq_linear.lsq_linear": "scipy.optimize.lsq_linear",
        "scipy.optimize._milp.milp": "scipy.optimize.milp",
        "scipy.optimize._minimize.minimize": "scipy.optimize.minimize",
        "scipy.optimize._minimize.minimize_scalar": "scipy.optimize.minimize_scalar",
        "scipy.optimize._minpack_py.check_gradient": "scipy.optimize.minpack.check_gradient",
        "scipy.optimize._lsq.least_squares.prepare_bounds": "scipy.optimize.minpack.prepare_bounds",
        "scipy.optimize._zeros_py.newton": "scipy.optimize.zeros.newton",
        "scipy.optimize._nonlin.newton_krylov": "scipy.optimize.nonlin.newton_krylov",
        "scipy.optimize._nnls.nnls": "scipy.optimize.nnls",
        "scipy.optimize._nonlin.Anderson": "scipy.optimize.nonlin.Anderson",
        "scipy.optimize._nonlin.BroydenSecond": "scipy.optimize.nonlin.BroydenSecond",
        "scipy.optimize._nonlin.DiagBroyden": "scipy.optimize.nonlin.DiagBroyden",
        "scipy.optimize._nonlin.ExcitingMixing": "scipy.optimize.nonlin.ExcitingMixing",
        "scipy.optimize._nonlin.GenericBroyden": "scipy.optimize.nonlin.GenericBroyden",
        "scipy.optimize._nonlin.Jacobian": "scipy.optimize.nonlin.Jacobian",
        "scipy.optimize._nonlin.LinearMixing": "scipy.optimize.nonlin.LinearMixing",
        "scipy.optimize._nonlin.LowRankMatrix": "scipy.optimize.nonlin.LowRankMatrix",
        "scipy.optimize._nonlin.TerminationCondition": "scipy.optimize.nonlin.TerminationCondition",
        "scipy.optimize._nonlin.asjacobian": "scipy.optimize.nonlin.asjacobian",
        "scipy.optimize._nonlin.maxnorm": "scipy.optimize.nonlin.maxnorm",
        "scipy.optimize._nonlin.nonlin_solve": "scipy.optimize.nonlin.nonlin_solve",
        "scipy.__config__.show": "scipy.show_config",
        "scipy.signal._filter_design.BadCoefficients": "scipy.signal.filter_design.BadCoefficients",
        "scipy.signal._czt.CZT": "scipy.signal.CZT",
        "scipy.signal._short_time_fft.ShortTimeFFT": "scipy.signal.ShortTimeFFT",
        "scipy.signal._ltisys.StateSpace": "scipy.signal.ltisys.StateSpace",
        "scipy.signal._ltisys.TransferFunction": "scipy.signal.ltisys.TransferFunction",
        "scipy.signal._ltisys.ZerosPolesGain": "scipy.signal.ltisys.ZerosPolesGain",
        "scipy.signal._czt.ZoomFFT": "scipy.signal.ZoomFFT",
        "scipy.signal._lti_conversion.abcd_normalize": "scipy.signal.ltisys.abcd_normalize",
        "scipy.signal._peak_finding.argrelextrema": "scipy.signal.argrelextrema",
        "scipy.signal._peak_finding.argrelmax": "scipy.signal.argrelmax",
        "scipy.signal._peak_finding.argrelmin": "scipy.signal.argrelmin",
        "scipy.signal._filter_design.band_stop_obj": "scipy.signal.filter_design.band_stop_obj",
        "scipy.signal._filter_design.bessel": "scipy.signal.filter_design.bessel",
        "scipy.signal._filter_design.besselap": "scipy.signal.filter_design.besselap",
        "scipy.signal._filter_design.bilinear": "scipy.signal.filter_design.bilinear",
        "scipy.signal._filter_design.bilinear_zpk": "scipy.signal.filter_design.bilinear_zpk",
        "scipy.signal._ltisys.bode": "scipy.signal.ltisys.bode",
        "scipy.signal._bsplines.cspline1d": "scipy.signal.cspline1d",
        "scipy.signal._bsplines.cspline1d_eval": "scipy.signal.cspline1d_eval",
        "scipy.signal._spline.cspline2d": "scipy.signal.spline.cspline2d",
        "scipy.signal._bsplines.gauss_spline": "scipy.signal.gauss_spline",
        "scipy.signal._bsplines.qspline1d": "scipy.signal.qspline1d",
        "scipy.signal._bsplines.qspline1d_eval": "scipy.signal.qspline1d_eval",
        "scipy.signal._spline.sepfir2d": "scipy.signal.spline.sepfir2d",
        "scipy.signal._bsplines.spline_filter": "scipy.signal.spline_filter",
        "scipy.signal._filter_design.buttap": "scipy.signal.filter_design.buttap",
        "scipy.signal._filter_design.butter": "scipy.signal.filter_design.butter",
        "scipy.signal._filter_design.buttord": "scipy.signal.filter_design.buttord",
        "scipy.signal._wavelets.cascade": "scipy.signal.wavelets.cascade",
        "scipy.signal._filter_design.cheb1ap": "scipy.signal.filter_design.cheb1ap",
        "scipy.signal._filter_design.cheb1ord": "scipy.signal.filter_design.cheb1ord",
        "scipy.signal._filter_design.cheb2ap": "scipy.signal.filter_design.cheb2ap",
        "scipy.signal._filter_design.cheb2ord": "scipy.signal.filter_design.cheb2ord",
        "scipy.signal._filter_design.cheby1": "scipy.signal.signaltools.cheby1",
        "scipy.signal._filter_design.cheby2": "scipy.signal.filter_design.cheby2",
        "scipy.signal._spectral_py.check_COLA": "scipy.signal.spectral.check_COLA",
        "scipy.signal._spectral_py.check_NOLA": "scipy.signal.spectral.check_NOLA",
        "scipy.signal._waveforms.chirp": "scipy.signal.waveforms.chirp",
        "scipy.signal._signaltools.choose_conv_method": "scipy.signal.signaltools.choose_conv_method",
        "scipy.signal._signaltools.cmplx_sort": "scipy.signal.signaltools.cmplx_sort",
        "scipy.signal._spectral_py.coherence": "scipy.signal.spectral.coherence",
        "scipy.signal._lti_conversion.cont2discrete": "scipy.signal.ltisys.cont2discrete",
        "scipy.signal._signaltools.convolve": "scipy.signal.wavelets.convolve",
        "scipy.signal._signaltools.convolve2d": "scipy.signal.signaltools.convolve2d",
        "scipy.signal._signaltools.correlate": "scipy.signal.signaltools.correlate",
        "scipy.signal._signaltools.correlate2d": "scipy.signal.signaltools.correlate2d",
        "scipy.signal._signaltools.correlation_lags": "scipy.signal.signaltools.correlation_lags",
        "scipy.signal._spectral_py.csd": "scipy.signal.spectral.csd",
        "scipy.signal._wavelets.cwt": "scipy.signal.wavelets.cwt",
        "scipy.signal._czt.czt": "scipy.signal.czt",
        "scipy.signal._czt.czt_points": "scipy.signal.czt_points",
        "scipy.signal._wavelets.daub": "scipy.signal.wavelets.daub",
        "scipy.signal._ltisys.dbode": "scipy.signal.ltisys.dbode",
        "scipy.signal._signaltools.decimate": "scipy.signal.signaltools.decimate",
        "scipy.signal._signaltools.deconvolve": "scipy.signal.signaltools.deconvolve",
        "scipy.signal._signaltools.detrend": "scipy.signal.signaltools.detrend",
        "scipy.signal._ltisys.dfreqresp": "scipy.signal.ltisys.dfreqresp",
        "scipy.signal._ltisys.dimpulse": "scipy.signal.ltisys.dimpulse",
        "scipy.signal._ltisys.dlsim": "scipy.signal.ltisys.dlsim",
        "scipy.signal._ltisys.dlti": "scipy.signal.signaltools.dlti",
        "scipy.signal._ltisys.dstep": "scipy.signal.ltisys.dstep",
        "scipy.signal._filter_design.ellip": "scipy.signal.filter_design.ellip",
        "scipy.signal._filter_design.ellipap": "scipy.signal.filter_design.ellipap",
        "scipy.signal._filter_design.ellipord": "scipy.signal.filter_design.ellipord",
        "scipy.signal._signaltools.fftconvolve": "scipy.signal.signaltools.fftconvolve",
        "scipy.signal._filter_design.findfreqs": "scipy.signal.findfreqs",
        "scipy.signal._filter_design.freqs": "scipy.signal.ltisys.freqs",
        "scipy.signal._filter_design.freqs_zpk": "scipy.signal.ltisys.freqs_zpk",
        "scipy.signal._filter_design.freqz": "scipy.signal.ltisys.freqz",
        "scipy.signal._filter_design.freqz_zpk": "scipy.signal.ltisys.freqz_zpk",
        "scipy.signal._filter_design.gammatone": "scipy.signal.gammatone",
        "scipy.signal._filter_design.group_delay": "scipy.signal.group_delay",
        "scipy.signal._filter_design.iircomb": "scipy.signal.iircomb",
        "scipy.signal._filter_design.iirdesign": "scipy.signal.iirdesign",
        "scipy.signal._filter_design.iirfilter": "scipy.signal.iirfilter",
        "scipy.signal._filter_design.iirnotch": "scipy.signal.iirnotch",
        "scipy.signal._filter_design.iirpeak": "scipy.signal.iirpeak",
        "scipy.signal._filter_design.lp2bp": "scipy.signal.lp2bp",
        "scipy.signal._filter_design.lp2bp_zpk": "scipy.signal.lp2bp_zpk",
        "scipy.signal._filter_design.lp2bs": "scipy.signal.lp2bs",
        "scipy.signal._filter_design.lp2bs_zpk": "scipy.signal.lp2bs_zpk",
        "scipy.signal._filter_design.lp2hp": "scipy.signal.lp2hp",
        "scipy.signal._filter_design.lp2hp_zpk": "scipy.signal.lp2hp_zpk",
        "scipy.signal._filter_design.lp2lp": "scipy.signal.lp2lp",
        "scipy.signal._filter_design.lp2lp_zpk": "scipy.signal.lp2lp_zpk",
        "scipy.signal._filter_design.maxflat": "scipy.signal.filter_design.maxflat",
        "scipy.signal._filter_design.normalize": "scipy.signal.normalize",
        "scipy.signal._filter_design.sos2tf": "scipy.signal.sos2tf",
        "scipy.signal._filter_design.sos2zpk": "scipy.signal.sos2zpk",
        "scipy.signal._filter_design.sosfreqz": "scipy.signal.sosfreqz",
        "scipy.signal._filter_design.tf2sos": "scipy.signal.tf2sos",
        "scipy.signal._filter_design.tf2zpk": "scipy.signal.tf2zpk",
        "scipy.signal._filter_design.yulewalk": "scipy.signal.filter_design.yulewalk",
        "scipy.signal._filter_design.zpk2sos": "scipy.signal.zpk2sos",
        "scipy.signal._filter_design.zpk2tf": "scipy.signal.zpk2tf",
        "scipy.signal._signaltools.filtfilt": "scipy.signal.signaltools.filtfilt",
        "scipy.signal._peak_finding.find_peaks": "scipy.signal.find_peaks",
        "scipy.signal._peak_finding.find_peaks_cwt": "scipy.signal.find_peaks_cwt",
        "scipy.signal._fir_filter_design.firls": "scipy.signal.firls",
        "scipy.signal._fir_filter_design.firwin": "scipy.signal.signaltools.firwin",
        "scipy.signal._fir_filter_design.firwin2": "scipy.signal.firwin2",
        "scipy.signal._fir_filter_design.kaiser_atten": "scipy.signal.kaiser_atten",
        "scipy.signal._fir_filter_design.kaiser_beta": "scipy.signal.kaiser_beta",
        "scipy.signal._fir_filter_design.kaiserord": "scipy.signal.kaiserord",
        "scipy.signal._fir_filter_design.minimum_phase": "scipy.signal.minimum_phase",
        "scipy.signal._fir_filter_design.remez": "scipy.signal.remez",
        "scipy.signal._ltisys.freqresp": "scipy.signal.ltisys.freqresp",
        "scipy.signal._waveforms.gausspulse": "scipy.signal.waveforms.gausspulse",
        "scipy.signal.windows._windows.get_window": "scipy.signal.windows.windows.get_window",
        "scipy.signal._signaltools.hilbert": "scipy.signal.signaltools.hilbert",
        "scipy.signal._signaltools.hilbert2": "scipy.signal.signaltools.hilbert2",
        "scipy.signal._ltisys.impulse": "scipy.signal.ltisys.impulse",
        "scipy.signal._signaltools.invres": "scipy.signal.signaltools.invres",
        "scipy.signal._signaltools.invresz": "scipy.signal.signaltools.invresz",
        "scipy.signal._spectral_py.istft": "scipy.signal.spectral.istft",
        "scipy.signal._signaltools.lfilter": "scipy.signal.signaltools.lfilter",
        "scipy.signal._signaltools.lfilter_zi": "scipy.signal.signaltools.lfilter_zi",
        "scipy.signal._signaltools.lfiltic": "scipy.signal.signaltools.lfiltic",
        "scipy.signal._spectral_py.lombscargle": "scipy.signal.spectral.lombscargle",
        "scipy.signal._ltisys.lsim": "scipy.signal.ltisys.lsim",
        "scipy.signal._ltisys.lti": "scipy.signal.ltisys.lti",
        "scipy.signal._lti_conversion.ss2tf": "scipy.signal.ss2tf",
        "scipy.signal._lti_conversion.ss2zpk": "scipy.signal.ss2zpk",
        "scipy.signal._lti_conversion.tf2ss": "scipy.signal.tf2ss",
        "scipy.signal._lti_conversion.zpk2ss": "scipy.signal.zpk2ss",
        "scipy.signal._ltisys.Bunch": "scipy.signal.ltisys.Bunch",
        "scipy.signal._ltisys.LinearTimeInvariant": "scipy.signal.ltisys.LinearTimeInvariant",
        "scipy.signal._ltisys.StateSpaceContinuous": "scipy.signal.ltisys.StateSpaceContinuous",
        "scipy.signal._ltisys.StateSpaceDiscrete": "scipy.signal.ltisys.StateSpaceDiscrete",
        "scipy.signal._ltisys.TransferFunctionContinuous": "scipy.signal.ltisys.TransferFunctionContinuous",
        "scipy.signal._ltisys.TransferFunctionDiscrete": "scipy.signal.ltisys.TransferFunctionDiscrete",
        "scipy.signal._ltisys.ZerosPolesGainContinuous": "scipy.signal.ltisys.ZerosPolesGainContinuous",
        "scipy.signal._ltisys.ZerosPolesGainDiscrete": "scipy.signal.ltisys.ZerosPolesGainDiscrete",
        "scipy.signal._ltisys.place_poles": "scipy.signal.place_poles",
        "scipy.signal._ltisys.step": "scipy.signal.step",
        "scipy.signal._max_len_seq.max_len_seq": "scipy.signal.max_len_seq",
        "scipy.signal._signaltools.medfilt": "scipy.signal.signaltools.medfilt",
        "scipy.signal._signaltools.medfilt2d": "scipy.signal.signaltools.medfilt2d",
        "scipy.signal._wavelets.morlet": "scipy.signal.wavelets.morlet",
        "scipy.signal._wavelets.morlet2": "scipy.signal.wavelets.morlet2",
        "scipy.signal._signaltools.oaconvolve": "scipy.signal.signaltools.oaconvolve",
        "scipy.signal._signaltools.order_filter": "scipy.signal.signaltools.order_filter",
        "scipy.signal._peak_finding.peak_prominences": "scipy.signal.peak_prominences",
        "scipy.signal._peak_finding.peak_widths": "scipy.signal.peak_widths",
        "scipy.signal._spectral_py.periodogram": "scipy.signal.spectral.periodogram",
        "scipy.signal._wavelets.qmf": "scipy.signal.wavelets.qmf",
        "scipy.signal._spline.qspline2d": "scipy.signal.spline.qspline2d",
        "scipy.signal._signaltools.resample": "scipy.signal.signaltools.resample",
        "scipy.signal._signaltools.resample_poly": "scipy.signal.signaltools.resample_poly",
        "scipy.signal._signaltools.residue": "scipy.signal.signaltools.residue",
        "scipy.signal._signaltools.residuez": "scipy.signal.signaltools.residuez",
        "scipy.signal._wavelets.ricker": "scipy.signal.wavelets.ricker",
        "scipy.signal._savitzky_golay.savgol_coeffs": "scipy.signal.savgol_coeffs",
        "scipy.signal._savitzky_golay.savgol_filter": "scipy.signal.savgol_filter",
        "scipy.signal._waveforms.sawtooth": "scipy.signal.waveforms.sawtooth",
        "scipy.signal._arraytools.axis_reverse": "scipy.signal.signaltools.axis_reverse",
        "scipy.signal._arraytools.axis_slice": "scipy.signal.signaltools.axis_slice",
        "scipy.signal._arraytools.const_ext": "scipy.signal.spectral.const_ext",
        "scipy.signal._arraytools.even_ext": "scipy.signal.spectral.even_ext",
        "scipy.signal._arraytools.odd_ext": "scipy.signal.spectral.odd_ext",
        "scipy.signal._signaltools.sosfilt": "scipy.signal.sosfilt",
        "scipy.signal._signaltools.sosfilt_zi": "scipy.signal.sosfilt_zi",
        "scipy.signal._signaltools.sosfiltfilt": "scipy.signal.sosfiltfilt",
        "scipy.signal._signaltools.unique_roots": "scipy.signal.unique_roots",
        "scipy.signal._upfirdn.upfirdn": "scipy.signal.upfirdn",
        "scipy.signal._signaltools.vectorstrength": "scipy.signal.vectorstrength",
        "scipy.signal._signaltools.wiener": "scipy.signal.wiener",
        "scipy.signal._spectral_py.spectrogram": "scipy.signal.spectrogram",
        "scipy.signal._spectral_py.stft": "scipy.signal.stft",
        "scipy.signal._spectral_py.welch": "scipy.signal.welch",
        "scipy.signal._arraytools.zero_ext": "scipy.signal.spectral.zero_ext",
        "scipy.signal._spline.symiirorder1": "scipy.signal.symiirorder1",
        "scipy.signal._spline.symiirorder2": "scipy.signal.symiirorder2",
        "scipy.signal._waveforms.square": "scipy.signal.waveforms.square",
        "scipy.signal._waveforms.sweep_poly": "scipy.signal.waveforms.sweep_poly",
        "scipy.signal._waveforms.unit_impulse": "scipy.signal.waveforms.unit_impulse",
        "scipy.signal.windows._windows.barthann": "scipy.signal.windows.windows.barthann",
        "scipy.signal.windows._windows.bartlett": "scipy.signal.windows.windows.bartlett",
        "scipy.signal.windows._windows.blackman": "scipy.signal.windows.windows.blackman",
        "scipy.signal.windows._windows.blackmanharris": "scipy.signal.windows.windows.blackmanharris",
        "scipy.signal.windows._windows.bohman": "scipy.signal.windows.windows.bohman",
        "scipy.signal.windows._windows.boxcar": "scipy.signal.windows.windows.boxcar",
        "scipy.signal.windows._windows.chebwin": "scipy.signal.windows.windows.chebwin",
        "scipy.signal.windows._windows.cosine": "scipy.signal.windows.windows.cosine",
        "scipy.signal.windows._windows.dpss": "scipy.signal.windows.windows.dpss",
        "scipy.signal.windows._windows.exponential": "scipy.signal.windows.windows.exponential",
        "scipy.signal.windows._windows.flattop": "scipy.signal.windows.windows.flattop",
        "scipy.signal.windows._windows.gaussian": "scipy.signal.windows.windows.gaussian",
        "scipy.signal.windows._windows.general_cosine": "scipy.signal.windows.windows.general_cosine",
        "scipy.signal.windows._windows.general_gaussian": "scipy.signal.windows.windows.general_gaussian",
        "scipy.signal.windows._windows.general_hamming": "scipy.signal.windows.windows.general_hamming",
        "scipy.signal.windows._windows.hamming": "scipy.signal.windows.windows.hamming",
        "scipy.signal.windows._windows.hann": "scipy.signal.windows.windows.hann",
        "scipy.signal.windows._windows.kaiser": "scipy.signal.windows.windows.kaiser",
        "scipy.signal.windows._windows.kaiser_bessel_derived": "scipy.signal.windows.kaiser_bessel_derived",
        "scipy.signal.windows._windows.lanczos": "scipy.signal.windows.lanczos",
        "scipy.signal.windows._windows.nuttall": "scipy.signal.windows.windows.nuttall",
        "scipy.signal.windows._windows.parzen": "scipy.signal.windows.windows.parzen",
        "scipy.signal.windows._windows.taylor": "scipy.signal.windows.windows.taylor",
        "scipy.signal.windows._windows.triang": "scipy.signal.windows.windows.triang",
        "scipy.signal.windows._windows.tukey": "scipy.signal.windows.windows.tukey",
        "scipy.signal._czt.zoom_fft": "scipy.signal.zoom_fft",
        "scipy.sparse._base.SparseEfficiencyWarning": "scipy.sparse.linalg._dsolve.linsolve.SparseEfficiencyWarning",
        "scipy.sparse._base.SparseWarning": "scipy.sparse.base.SparseWarning",
        "scipy.sparse._base.SparseFormatWarning": "scipy.sparse.base.SparseFormatWarning",
        "scipy.sparse._sputils.asmatrix": "scipy.sparse.sputils.asmatrix",
        "scipy.sparse._sputils.check_reshape_kwargs": "scipy.sparse.sputils.check_reshape_kwargs",
        "scipy.sparse._sputils.check_shape": "scipy.sparse.sputils.check_shape",
        "scipy.sparse._sputils.get_sum_dtype": "scipy.sparse.sputils.get_sum_dtype",
        "scipy.sparse._sputils.isdense": "scipy.sparse.sputils.isdense",
        "scipy.sparse._sputils.isscalarlike": "scipy.sparse.sputils.isscalarlike",
        "scipy.sparse._base.issparse": "scipy.sparse.linalg._eigen.arpack.arpack.issparse",
        "scipy.sparse._base.isspmatrix": "scipy.sparse.isspmatrix",
        "scipy.sparse._matrix.spmatrix": "scipy.sparse.spmatrix",
        "scipy.sparse._sputils.validateaxis": "scipy.sparse.sputils.validateaxis",
        "scipy.sparse._construct.block_array": "scipy.sparse.block_array",
        "scipy.sparse._construct.block_diag": "scipy.sparse.construct.block_diag",
        "scipy.sparse._construct.bmat": "scipy.sparse.construct.bmat",
        "scipy.sparse._sparsetools.bsr_matmat": "scipy.sparse.sparsetools.bsr_matmat",
        "scipy.sparse._bsr.bsr_matrix": "scipy.sparse.construct.bsr_matrix",
        "scipy.sparse._sparsetools.bsr_matvec": "scipy.sparse.sparsetools.bsr_matvec",
        "scipy.sparse._sparsetools.bsr_matvecs": "scipy.sparse.sparsetools.bsr_matvecs",
        "scipy.sparse._sparsetools.bsr_sort_indices": "scipy.sparse.sparsetools.bsr_sort_indices",
        "scipy.sparse._sparsetools.bsr_tocsr": "scipy.sparse.sparsetools.bsr_tocsr",
        "scipy.sparse._sparsetools.bsr_transpose": "scipy.sparse.sparsetools.bsr_transpose",
        "scipy.sparse._sparsetools.csr_matmat_maxnnz": "scipy.sparse.sparsetools.csr_matmat_maxnnz",
        "scipy.sparse._sputils.getdata": "scipy.sparse.sputils.getdata",
        "scipy.sparse._sputils.getdtype": "scipy.sparse.sputils.getdtype",
        "scipy.sparse._sputils.isshape": "scipy.sparse.sputils.isshape",
        "scipy.sparse._bsr.isspmatrix_bsr": "scipy.sparse.isspmatrix_bsr",
        "scipy.sparse._sputils.to_native": "scipy.sparse.sputils.to_native",
        "scipy.sparse._sputils.upcast": "scipy.sparse.sputils.upcast",
        "scipy.sparse._bsr.bsr_array": "scipy.sparse.bsr_array",
        "scipy.sparse._index.IndexMixin": "scipy.sparse.lil.IndexMixin",
        "scipy.sparse._sparsetools.csr_column_index1": "scipy.sparse.sparsetools.csr_column_index1",
        "scipy.sparse._sparsetools.csr_column_index2": "scipy.sparse.sparsetools.csr_column_index2",
        "scipy.sparse._sparsetools.csr_row_index": "scipy.sparse.sparsetools.csr_row_index",
        "scipy.sparse._sparsetools.csr_row_slice": "scipy.sparse.sparsetools.csr_row_slice",
        "scipy.sparse._sparsetools.csr_sample_offsets": "scipy.sparse.sparsetools.csr_sample_offsets",
        "scipy.sparse._sparsetools.csr_sample_values": "scipy.sparse.sparsetools.csr_sample_values",
        "scipy.sparse._sparsetools.csr_todense": "scipy.sparse.sparsetools.csr_todense",
        "scipy.sparse._sputils.downcast_intp_index": "scipy.sparse.sputils.downcast_intp_index",
        "scipy.sparse._sparsetools.get_csr_submatrix": "scipy.sparse.sparsetools.get_csr_submatrix",
        "scipy.sparse._sputils.is_pydata_spmatrix": "scipy.sparse.sputils.is_pydata_spmatrix",
        "scipy.sparse._sputils.isintlike": "scipy.sparse.sputils.isintlike",
        "scipy.sparse._sputils.upcast_char": "scipy.sparse.sputils.upcast_char",
        "scipy.sparse._sparsetools.csr_hstack": "scipy.sparse.sparsetools.csr_hstack",
        "scipy.sparse._csr.csr_matrix": "scipy.sparse.csr_matrix",
        "scipy.sparse._dia.dia_matrix": "scipy.sparse.dia_matrix",
        "scipy.sparse._construct.diags": "scipy.sparse.diags",
        "scipy.sparse._construct.eye": "scipy.sparse.linalg._eigen.arpack.arpack.eye",
        "scipy.sparse._sputils.get_index_dtype": "scipy.sparse.sputils.get_index_dtype",
        "scipy.sparse._construct.hstack": "scipy.sparse.hstack",
        "scipy.sparse._construct.identity": "scipy.sparse.identity",
        "scipy.sparse._construct.kron": "scipy.sparse.kron",
        "scipy.sparse._construct.kronsum": "scipy.sparse.kronsum",
        "scipy.sparse._construct.rand": "scipy.sparse.rand",
        "scipy.sparse._construct.random": "scipy.sparse.random",
        "scipy.sparse._construct.spdiags": "scipy.sparse.spdiags",
        "scipy.sparse._construct.vstack": "scipy.sparse.vstack",
        "scipy.sparse._sparsetools.coo_matvec": "scipy.sparse.sparsetools.coo_matvec",
        "scipy.sparse._sparsetools.coo_tocsr": "scipy.sparse.sparsetools.coo_tocsr",
        "scipy.sparse._sparsetools.coo_todense": "scipy.sparse.sparsetools.coo_todense",
        "scipy.sparse._coo.isspmatrix_coo": "scipy.sparse.isspmatrix_coo",
        "scipy.sparse._coo.coo_array": "scipy.sparse.coo_array",
        "scipy.sparse._sparsetools.csc_tocsr": "scipy.sparse.sparsetools.csc_tocsr",
        "scipy.sparse._sparsetools.expandptr": "scipy.sparse.sparsetools.expandptr",
        "scipy.sparse._csc.isspmatrix_csc": "scipy.sparse.isspmatrix_csc",
        "scipy.sparse._csc.csc_array": "scipy.sparse.csc_array",
        "scipy.sparse.csgraph._shortest_path.NegativeCycleError": "scipy.sparse.csgraph.NegativeCycleError",
        "scipy.sparse.csgraph._shortest_path.bellman_ford": "scipy.sparse.csgraph.bellman_ford",
        "scipy.sparse.csgraph._traversal.breadth_first_order": "scipy.sparse.csgraph.breadth_first_order",
        "scipy.sparse.csgraph._traversal.breadth_first_tree": "scipy.sparse.csgraph.breadth_first_tree",
        "scipy.sparse.csgraph._traversal.connected_components": "scipy.sparse.csgraph.connected_components",
        "scipy.sparse.csgraph._tools.construct_dist_matrix": "scipy.sparse.csgraph.construct_dist_matrix",
        "scipy.sparse.csgraph._tools.csgraph_from_dense": "scipy.sparse.csgraph.csgraph_from_dense",
        "scipy.sparse.csgraph._tools.csgraph_from_masked": "scipy.sparse.csgraph.csgraph_from_masked",
        "scipy.sparse.csgraph._tools.csgraph_masked_from_dense": "scipy.sparse.csgraph.csgraph_masked_from_dense",
        "scipy.sparse.csgraph._tools.csgraph_to_dense": "scipy.sparse.csgraph.csgraph_to_dense",
        "scipy.sparse.csgraph._tools.csgraph_to_masked": "scipy.sparse.csgraph.csgraph_to_masked",
        "scipy.sparse.csgraph._traversal.depth_first_order": "scipy.sparse.csgraph.depth_first_order",
        "scipy.sparse.csgraph._traversal.depth_first_tree": "scipy.sparse.csgraph.depth_first_tree",
        "scipy.sparse.csgraph._shortest_path.dijkstra": "scipy.sparse.csgraph.dijkstra",
        "scipy.sparse.csgraph._shortest_path.floyd_warshall": "scipy.sparse.csgraph.floyd_warshall",
        "scipy.sparse.csgraph._shortest_path.johnson": "scipy.sparse.csgraph.johnson",
        "scipy.sparse.csgraph._laplacian.laplacian": "scipy.sparse.csgraph.laplacian",
        "scipy.sparse.csgraph._matching.maximum_bipartite_matching": "scipy.sparse.csgraph.maximum_bipartite_matching",
        "scipy.sparse.csgraph._flow.maximum_flow": "scipy.sparse.csgraph.maximum_flow",
        "scipy.sparse.csgraph._matching.min_weight_full_bipartite_matching": "scipy.sparse.csgraph.min_weight_full_bipartite_matching",
        "scipy.sparse.csgraph._min_spanning_tree.minimum_spanning_tree": "scipy.sparse.csgraph.minimum_spanning_tree",
        "scipy.sparse.csgraph._tools.reconstruct_path": "scipy.sparse.csgraph.reconstruct_path",
        "scipy.sparse.csgraph._reordering.reverse_cuthill_mckee": "scipy.sparse.csgraph.reverse_cuthill_mckee",
        "scipy.sparse.csgraph._shortest_path.shortest_path": "scipy.sparse.csgraph.shortest_path",
        "scipy.sparse.csgraph._reordering.structural_rank": "scipy.sparse.csgraph.structural_rank",
        "scipy.sparse._sparsetools.csr_count_blocks": "scipy.sparse.sparsetools.csr_count_blocks",
        "scipy.sparse._sparsetools.csr_tobsr": "scipy.sparse.sparsetools.csr_tobsr",
        "scipy.sparse._sparsetools.csr_tocsc": "scipy.sparse.sparsetools.csr_tocsc",
        "scipy.sparse._csr.isspmatrix_csr": "scipy.sparse.isspmatrix_csr",
        "scipy.sparse._csr.csr_array": "scipy.sparse.csr_array",
        "scipy.sparse._sparsetools.dia_matvec": "scipy.sparse.sparsetools.dia_matvec",
        "scipy.sparse._dia.isspmatrix_dia": "scipy.sparse.isspmatrix_dia",
        "scipy.sparse._dia.dia_array": "scipy.sparse.dia_array",
        "scipy.sparse._construct.diags_array": "scipy.sparse.diags_array",
        "scipy.sparse._dok.dok_matrix": "scipy.sparse.dok_matrix",
        "scipy.sparse._dok.isspmatrix_dok": "scipy.sparse.isspmatrix_dok",
        "scipy.sparse._sputils.upcast_scalar": "scipy.sparse.sputils.upcast_scalar",
        "scipy.sparse._dok.dok_array": "scipy.sparse.dok_array",
        "scipy.sparse._extract.find": "scipy.sparse.find",
        "scipy.sparse._extract.tril": "scipy.sparse.tril",
        "scipy.sparse._extract.triu": "scipy.sparse.triu",
        "scipy.sparse._construct.eye_array": "scipy.sparse.eye_array",
        "scipy.sparse._lil.isspmatrix_lil": "scipy.sparse.lil.isspmatrix_lil",
        "scipy.sparse._lil.lil_matrix": "scipy.sparse.lil_matrix",
        "scipy.sparse._lil.lil_array": "scipy.sparse.lil_array",
        "scipy.sparse.linalg._eigen.arpack.arpack.ArpackError": "scipy.sparse.linalg._eigen.arpack.arpack.ArpackError",
        "scipy.sparse.linalg._eigen.arpack.arpack.ArpackNoConvergence": "scipy.sparse.linalg._eigen.arpack.arpack.ArpackNoConvergence",
        "scipy.sparse.linalg._special_sparse_arrays.LaplacianNd": "scipy.sparse.linalg.LaplacianNd",
        "scipy.sparse.linalg._dsolve.linsolve.MatrixRankWarning": "scipy.sparse.linalg._dsolve.linsolve.MatrixRankWarning",
        "scipy.sparse.linalg._interface.aslinearoperator": "scipy.sparse.linalg._isolve.utils.aslinearoperator",
        "scipy.sparse.linalg._isolve.iterative.bicg": "scipy.sparse.linalg._isolve.iterative.bicg",
        "scipy.sparse.linalg._isolve.iterative.bicgstab": "scipy.sparse.linalg._isolve.iterative.bicgstab",
        "scipy.sparse.linalg._isolve.iterative.cg": "scipy.sparse.linalg._isolve.iterative.cg",
        "scipy.sparse.linalg._isolve.iterative.cgs": "scipy.sparse.linalg._isolve.iterative.cgs",
        "scipy.sparse.linalg._dsolve.linsolve.factorized": "scipy.sparse.linalg.factorized",
        "scipy.sparse._sputils.convert_pydata_sparse_to_scipy": "scipy.sparse.linalg._dsolve.linsolve.convert_pydata_sparse_to_scipy",
        "scipy.sparse.linalg._dsolve.linsolve.spilu": "scipy.sparse.linalg.spilu",
        "scipy.sparse.linalg._dsolve.linsolve.splu": "scipy.sparse.linalg.splu",
        "scipy.sparse.linalg._dsolve.linsolve.spsolve": "scipy.sparse.linalg.spsolve",
        "scipy.sparse.linalg._dsolve.linsolve.spsolve_triangular": "scipy.sparse.linalg.spsolve_triangular",
        "scipy.sparse.linalg._dsolve.linsolve.use_solver": "scipy.sparse.linalg.use_solver",
        "scipy.sparse.linalg._eigen.arpack.arpack.IterInv": "scipy.sparse.linalg._eigen.arpack.arpack.IterInv",
        "scipy.sparse.linalg._eigen.arpack.arpack.IterOpInv": "scipy.sparse.linalg._eigen.arpack.arpack.IterOpInv",
        "scipy.sparse.linalg._eigen.arpack.arpack.LuInv": "scipy.sparse.linalg._eigen.arpack.arpack.LuInv",
        "scipy._lib._threadsafety.ReentrancyLock": "scipy.sparse.linalg._eigen.arpack.arpack.ReentrancyLock",
        "scipy.sparse.linalg._eigen.arpack.arpack.SpLuInv": "scipy.sparse.linalg._eigen.arpack.arpack.SpLuInv",
        "scipy.sparse.linalg._eigen.arpack.arpack.choose_ncv": "scipy.sparse.linalg._eigen.arpack.arpack.choose_ncv",
        "scipy.sparse.linalg._eigen.arpack.arpack.eigs": "scipy.sparse.linalg.eigs",
        "scipy.sparse.linalg._eigen.arpack.arpack.eigsh": "scipy.sparse.linalg.eigsh",
        "scipy.sparse.linalg._eigen.arpack.arpack.get_OPinv_matvec": "scipy.sparse.linalg._eigen.arpack.arpack.get_OPinv_matvec",
        "scipy.sparse.linalg._eigen.arpack.arpack.get_inv_matvec": "scipy.sparse.linalg._eigen.arpack.arpack.get_inv_matvec",
        "scipy.sparse.linalg._isolve.iterative.gmres": "scipy.sparse.linalg._isolve.iterative.gmres",
        "scipy.sparse.linalg._eigen.arpack.arpack.gmres_loose": "scipy.sparse.linalg._eigen.arpack.arpack.gmres_loose",
        "scipy.sparse.linalg._eigen.lobpcg.lobpcg.lobpcg": "scipy.sparse.linalg.lobpcg",
        "scipy.sparse.linalg._eigen._svds.svds": "scipy.sparse.linalg.svds",
        "scipy.sparse.linalg._matfuncs.expm": "scipy.sparse.linalg.matfuncs.expm",
        "scipy.sparse.linalg._expm_multiply.expm_multiply": "scipy.sparse.linalg.expm_multiply",
        "scipy.sparse.linalg._isolve._gcrotmk.gcrotmk": "scipy.sparse.linalg.isolve.gcrotmk",
        "scipy.sparse.linalg._interface.IdentityOperator": "scipy.sparse.linalg._isolve.utils.IdentityOperator",
        "scipy.sparse.linalg._interface.MatrixLinearOperator": "scipy.sparse.linalg.interface.MatrixLinearOperator",
        "scipy.sparse.linalg._matfuncs.inv": "scipy.sparse.linalg.matfuncs.inv",
        "scipy.sparse.linalg._isolve.utils.make_system": "scipy.sparse.linalg._isolve.utils.make_system",
        "scipy.sparse.linalg._isolve.iterative.qmr": "scipy.sparse.linalg.qmr",
        "scipy.sparse.linalg._isolve.lgmres.lgmres": "scipy.sparse.linalg.lgmres",
        "scipy.sparse.linalg._isolve.lsmr.lsmr": "scipy.sparse.linalg.lsmr",
        "scipy.sparse.linalg._isolve.lsqr.lsqr": "scipy.sparse.linalg.lsqr",
        "scipy.sparse.linalg._isolve.minres.minres": "scipy.sparse.linalg.minres",
        "scipy.sparse.linalg._isolve.tfqmr.tfqmr": "scipy.sparse.linalg.tfqmr",
        "scipy.sparse.linalg._isolve.utils.coerce": "scipy.sparse.linalg._isolve.utils.coerce",
        "scipy.sparse.linalg._isolve.utils.id": "scipy.sparse.linalg._isolve.utils.id",
        "scipy.sparse.linalg._matfuncs.MatrixPowerOperator": "scipy.sparse.linalg.matfuncs.MatrixPowerOperator",
        "scipy.sparse.linalg._matfuncs.ProductOperator": "scipy.sparse.linalg.matfuncs.ProductOperator",
        "scipy.sparse.linalg._matfuncs.matrix_power": "scipy.sparse.linalg.matrix_power",
        "scipy.sparse.linalg._norm.norm": "scipy.sparse.linalg.norm",
        "scipy.sparse.linalg._onenormest.onenormest": "scipy.sparse.linalg.onenormest",
        "scipy.sparse._matrix_io.load_npz": "scipy.sparse.load_npz",
        "scipy.sparse._construct.random_array": "scipy.sparse.random_array",
        "scipy.sparse._matrix_io.save_npz": "scipy.sparse.save_npz",
        "scipy.sparse._base.sparray": "scipy.sparse.sparray",
        "scipy.sparse._sparsetools.bsr_diagonal": "scipy.sparse.sparsetools.bsr_diagonal",
        "scipy.sparse._sparsetools.bsr_eldiv_bsr": "scipy.sparse.sparsetools.bsr_eldiv_bsr",
        "scipy.sparse._sparsetools.bsr_elmul_bsr": "scipy.sparse.sparsetools.bsr_elmul_bsr",
        "scipy.sparse._sparsetools.bsr_ge_bsr": "scipy.sparse.sparsetools.bsr_ge_bsr",
        "scipy.sparse._sparsetools.bsr_gt_bsr": "scipy.sparse.sparsetools.bsr_gt_bsr",
        "scipy.sparse._sparsetools.bsr_le_bsr": "scipy.sparse.sparsetools.bsr_le_bsr",
        "scipy.sparse._sparsetools.bsr_lt_bsr": "scipy.sparse.sparsetools.bsr_lt_bsr",
        "scipy.sparse._sparsetools.bsr_maximum_bsr": "scipy.sparse.sparsetools.bsr_maximum_bsr",
        "scipy.sparse._sparsetools.bsr_minimum_bsr": "scipy.sparse.sparsetools.bsr_minimum_bsr",
        "scipy.sparse._sparsetools.bsr_minus_bsr": "scipy.sparse.sparsetools.bsr_minus_bsr",
        "scipy.sparse._sparsetools.bsr_ne_bsr": "scipy.sparse.sparsetools.bsr_ne_bsr",
        "scipy.sparse._sparsetools.bsr_plus_bsr": "scipy.sparse.sparsetools.bsr_plus_bsr",
        "scipy.sparse._sparsetools.bsr_scale_columns": "scipy.sparse.sparsetools.bsr_scale_columns",
        "scipy.sparse._sparsetools.bsr_scale_rows": "scipy.sparse.sparsetools.bsr_scale_rows",
        "scipy.sparse._sparsetools.cs_graph_components": "scipy.sparse.sparsetools.cs_graph_components",
        "scipy.sparse._sparsetools.csc_diagonal": "scipy.sparse.sparsetools.csc_diagonal",
        "scipy.sparse._sparsetools.csc_eldiv_csc": "scipy.sparse.sparsetools.csc_eldiv_csc",
        "scipy.sparse._sparsetools.csc_elmul_csc": "scipy.sparse.sparsetools.csc_elmul_csc",
        "scipy.sparse._sparsetools.csc_ge_csc": "scipy.sparse.sparsetools.csc_ge_csc",
        "scipy.sparse._sparsetools.csc_gt_csc": "scipy.sparse.sparsetools.csc_gt_csc",
        "scipy.sparse._sparsetools.csc_le_csc": "scipy.sparse.sparsetools.csc_le_csc",
        "scipy.sparse._sparsetools.csc_lt_csc": "scipy.sparse.sparsetools.csc_lt_csc",
        "scipy.sparse._sparsetools.csc_matmat": "scipy.sparse.sparsetools.csc_matmat",
        "scipy.sparse._sparsetools.csc_matmat_maxnnz": "scipy.sparse.sparsetools.csc_matmat_maxnnz",
        "scipy.sparse._sparsetools.csc_matvec": "scipy.sparse.sparsetools.csc_matvec",
        "scipy.sparse._sparsetools.csc_matvecs": "scipy.sparse.sparsetools.csc_matvecs",
        "scipy.sparse._sparsetools.csc_maximum_csc": "scipy.sparse.sparsetools.csc_maximum_csc",
        "scipy.sparse._sparsetools.csc_minimum_csc": "scipy.sparse.sparsetools.csc_minimum_csc",
        "scipy.sparse._sparsetools.csc_minus_csc": "scipy.sparse.sparsetools.csc_minus_csc",
        "scipy.sparse._sparsetools.csc_ne_csc": "scipy.sparse.sparsetools.csc_ne_csc",
        "scipy.sparse._sparsetools.csc_plus_csc": "scipy.sparse.sparsetools.csc_plus_csc",
        "scipy.sparse._sparsetools.csr_diagonal": "scipy.sparse.sparsetools.csr_diagonal",
        "scipy.sparse._sparsetools.csr_eldiv_csr": "scipy.sparse.sparsetools.csr_eldiv_csr",
        "scipy.sparse._sparsetools.csr_eliminate_zeros": "scipy.sparse.sparsetools.csr_eliminate_zeros",
        "scipy.sparse._sparsetools.csr_elmul_csr": "scipy.sparse.sparsetools.csr_elmul_csr",
        "scipy.sparse._sparsetools.csr_ge_csr": "scipy.sparse.sparsetools.csr_ge_csr",
        "scipy.sparse._sparsetools.csr_gt_csr": "scipy.sparse.sparsetools.csr_gt_csr",
        "scipy.sparse._sparsetools.csr_has_canonical_format": "scipy.sparse.sparsetools.csr_has_canonical_format",
        "scipy.sparse._sparsetools.csr_has_sorted_indices": "scipy.sparse.sparsetools.csr_has_sorted_indices",
        "scipy.sparse._sparsetools.csr_le_csr": "scipy.sparse.sparsetools.csr_le_csr",
        "scipy.sparse._sparsetools.csr_lt_csr": "scipy.sparse.sparsetools.csr_lt_csr",
        "scipy.sparse._sparsetools.csr_matmat": "scipy.sparse.sparsetools.csr_matmat",
        "scipy.sparse._sparsetools.csr_matvec": "scipy.sparse.sparsetools.csr_matvec",
        "scipy.sparse._sparsetools.csr_matvecs": "scipy.sparse.sparsetools.csr_matvecs",
        "scipy.sparse._sparsetools.csr_maximum_csr": "scipy.sparse.sparsetools.csr_maximum_csr",
        "scipy.sparse._sparsetools.csr_minimum_csr": "scipy.sparse.sparsetools.csr_minimum_csr",
        "scipy.sparse._sparsetools.csr_minus_csr": "scipy.sparse.sparsetools.csr_minus_csr",
        "scipy.sparse._sparsetools.csr_ne_csr": "scipy.sparse.sparsetools.csr_ne_csr",
        "scipy.sparse._sparsetools.csr_plus_csr": "scipy.sparse.sparsetools.csr_plus_csr",
        "scipy.sparse._sparsetools.csr_scale_columns": "scipy.sparse.sparsetools.csr_scale_columns",
        "scipy.sparse._sparsetools.csr_scale_rows": "scipy.sparse.sparsetools.csr_scale_rows",
        "scipy.sparse._sparsetools.csr_sort_indices": "scipy.sparse.sparsetools.csr_sort_indices",
        "scipy.sparse._sparsetools.csr_sum_duplicates": "scipy.sparse.sparsetools.csr_sum_duplicates",
        "scipy.sparse._sparsetools.test_throw_error": "scipy.sparse.sparsetools.test_throw_error",
        "scipy.sparse._sputils.ismatrix": "scipy.sparse.sputils.ismatrix",
        "scipy.sparse._sputils.issequence": "scipy.sparse.sputils.issequence",
        "scipy.sparse._sputils.matrix": "scipy.sparse.sputils.matrix",
        "scipy.spatial._kdtree.KDTree": "scipy.spatial.kdtree.KDTree",
        "scipy.spatial._kdtree.Rectangle": "scipy.spatial.kdtree.Rectangle",
        "scipy.spatial._spherical_voronoi.SphericalVoronoi": "scipy.spatial.SphericalVoronoi",
        "scipy.spatial._ckdtree.cKDTreeNode": "scipy.spatial.kdtree.cKDTreeNode",
        "scipy.spatial._ckdtree.coo_entries": "scipy.spatial.ckdtree.coo_entries",
        "scipy.spatial._ckdtree.ordered_pairs": "scipy.spatial.ckdtree.ordered_pairs",
        "scipy.spatial._plotutils.convex_hull_plot_2d": "scipy.spatial.convex_hull_plot_2d",
        "scipy.spatial._plotutils.delaunay_plot_2d": "scipy.spatial.delaunay_plot_2d",
        "scipy.spatial._kdtree.distance_matrix": "scipy.spatial.kdtree.distance_matrix",
        "scipy.spatial._geometric_slerp.geometric_slerp": "scipy.spatial.geometric_slerp",
        "scipy.spatial._kdtree.minkowski_distance": "scipy.spatial.minkowski_distance",
        "scipy.spatial._kdtree.minkowski_distance_p": "scipy.spatial.minkowski_distance_p",
        "scipy.spatial._procrustes.procrustes": "scipy.spatial.procrustes",
        "scipy.spatial.transform._rotation.Rotation": "scipy.spatial.transform.rotation.Rotation",
        "scipy.spatial.transform._rotation_spline.RotationSpline": "scipy.spatial.transform.RotationSpline",
        "scipy.spatial.transform._rotation.Slerp": "scipy.spatial.transform.rotation.Slerp",
        "scipy.spatial.transform._rotation_groups.create_group": "scipy.spatial.transform.rotation.create_group",
        "scipy.spatial._plotutils.voronoi_plot_2d": "scipy.spatial.voronoi_plot_2d",
        "scipy.stats._resampling.BootstrapMethod": "scipy.stats.BootstrapMethod",
        "scipy.stats._censored_data.CensoredData": "scipy.stats.CensoredData",
        "scipy.stats._warnings_errors.ConstantInputWarning": "scipy.stats.ConstantInputWarning",
        "scipy.stats._covariance.Covariance": "scipy.stats.Covariance",
        "scipy.stats._warnings_errors.DegenerateDataWarning": "scipy.stats.DegenerateDataWarning",
        "scipy.stats._warnings_errors.FitError": "scipy.stats.FitError",
        "scipy.stats._resampling.MonteCarloMethod": "scipy.stats.MonteCarloMethod",
        "scipy.stats._warnings_errors.NearConstantInputWarning": "scipy.stats.NearConstantInputWarning",
        "scipy.stats._resampling.PermutationMethod": "scipy.stats.PermutationMethod",
        "scipy.stats._stats_py.alexandergovern": "scipy.stats.stats.alexandergovern",
        "scipy.stats._morestats.anderson": "scipy.stats.morestats.anderson",
        "scipy.stats._morestats.anderson_ksamp": "scipy.stats.morestats.anderson_ksamp",
        "scipy.stats._morestats.ansari": "scipy.stats.morestats.ansari",
        "scipy.stats._hypotests.barnard_exact": "scipy.stats.barnard_exact",
        "scipy.stats._morestats.bartlett": "scipy.stats.morestats.bartlett",
        "scipy.stats._morestats.bayes_mvs": "scipy.stats.morestats.bayes_mvs",
        "scipy.stats._binned_statistic.binned_statistic": "scipy.stats.binned_statistic",
        "scipy.stats._binned_statistic.binned_statistic_2d": "scipy.stats.binned_statistic_2d",
        "scipy.stats._binned_statistic.binned_statistic_dd": "scipy.stats.binned_statistic_dd",
        "scipy.stats._binomtest.binomtest": "scipy.stats.binomtest",
        "scipy.stats._resampling.bootstrap": "scipy.stats.bootstrap",
        "scipy.stats._hypotests.boschloo_exact": "scipy.stats.boschloo_exact",
        "scipy.stats._morestats.boxcox": "scipy.stats.morestats.boxcox",
        "scipy.stats._morestats.boxcox_llf": "scipy.stats.morestats.boxcox_llf",
        "scipy.stats._morestats.boxcox_normmax": "scipy.stats.morestats.boxcox_normmax",
        "scipy.stats._morestats.boxcox_normplot": "scipy.stats.morestats.boxcox_normplot",
        "scipy.stats._stats_py.brunnermunzel": "scipy.stats.stats.brunnermunzel",
        "scipy.stats._bws_test.bws_test": "scipy.stats.bws_test",
        "scipy.stats.contingency.chi2_contingency": "scipy.stats.morestats.chi2_contingency",
        "scipy.stats._stats_py.chisquare": "scipy.stats.stats.chisquare",
        "scipy.stats._morestats.circmean": "scipy.stats.morestats.circmean",
        "scipy.stats._morestats.circstd": "scipy.stats.morestats.circstd",
        "scipy.stats._morestats.circvar": "scipy.stats.morestats.circvar",
        "scipy.stats._stats_py.combine_pvalues": "scipy.stats.stats.combine_pvalues",
        "scipy.stats.contingency.Chi2ContingencyResult": "scipy.stats.contingency.Chi2ContingencyResult",
        "scipy.stats.contingency.association": "scipy.stats.contingency.association",
        "scipy.stats._crosstab.crosstab": "scipy.stats.contingency.crosstab",
        "scipy.stats.contingency.expected_freq": "scipy.stats.contingency.expected_freq",
        "scipy.stats.contingency.margins": "scipy.stats.contingency.margins",
        "scipy.stats._odds_ratio.odds_ratio": "scipy.stats.contingency.odds_ratio",
        "scipy.stats._stats_py.power_divergence": "scipy.stats.stats.power_divergence",
        "scipy.stats._relative_risk.relative_risk": "scipy.stats.contingency.relative_risk",
        "scipy.stats._hypotests.cramervonmises": "scipy.stats.cramervonmises",
        "scipy.stats._hypotests.cramervonmises_2samp": "scipy.stats.cramervonmises_2samp",
        "scipy.stats._stats_py.cumfreq": "scipy.stats.stats.cumfreq",
        "scipy.stats._stats_py.describe": "scipy.stats.stats.describe",
        "scipy.stats._entropy.differential_entropy": "scipy.stats.differential_entropy",
        "scipy.stats._morestats.directional_stats": "scipy.stats.directional_stats",
        "scipy.stats._continuous_distns.alpha_gen": "scipy.stats.distributions.alpha_gen",
        "scipy.stats._continuous_distns.anglit_gen": "scipy.stats.distributions.anglit_gen",
        "scipy.stats._continuous_distns.arcsine_gen": "scipy.stats.distributions.arcsine_gen",
        "scipy.stats._continuous_distns.argus_gen": "scipy.stats.distributions.argus_gen",
        "scipy.stats._discrete_distns.bernoulli_gen": "scipy.stats.distributions.bernoulli_gen",
        "scipy.stats._continuous_distns.beta_gen": "scipy.stats.distributions.beta_gen",
        "scipy.stats._discrete_distns.betabinom_gen": "scipy.stats.distributions.betabinom_gen",
        "scipy.stats._discrete_distns.betanbinom_gen": "scipy.stats.distributions.betanbinom_gen",
        "scipy.stats._continuous_distns.betaprime_gen": "scipy.stats.distributions.betaprime_gen",
        "scipy.stats._discrete_distns.binom_gen": "scipy.stats.distributions.binom_gen",
        "scipy.stats._discrete_distns.boltzmann_gen": "scipy.stats.distributions.boltzmann_gen",
        "scipy.stats._continuous_distns.bradford_gen": "scipy.stats.distributions.bradford_gen",
        "scipy.stats._continuous_distns.burr12_gen": "scipy.stats.distributions.burr12_gen",
        "scipy.stats._continuous_distns.burr_gen": "scipy.stats.distributions.burr_gen",
        "scipy.stats._continuous_distns.cauchy_gen": "scipy.stats.distributions.cauchy_gen",
        "scipy.stats._continuous_distns.chi2_gen": "scipy.stats.distributions.chi2_gen",
        "scipy.stats._continuous_distns.chi_gen": "scipy.stats.distributions.chi_gen",
        "scipy.stats._continuous_distns.cosine_gen": "scipy.stats.distributions.cosine_gen",
        "scipy.stats._continuous_distns.crystalball_gen": "scipy.stats.distributions.crystalball_gen",
        "scipy.stats._continuous_distns.dgamma_gen": "scipy.stats.distributions.dgamma_gen",
        "scipy.stats._discrete_distns.dlaplace_gen": "scipy.stats.distributions.dlaplace_gen",
        "scipy.stats._continuous_distns.dweibull_gen": "scipy.stats.distributions.dweibull_gen",
        "scipy.stats._entropy.entropy": "scipy.stats.entropy",
        "scipy.stats._continuous_distns.erlang_gen": "scipy.stats.distributions.erlang_gen",
        "scipy.stats._continuous_distns.expon_gen": "scipy.stats.distributions.expon_gen",
        "scipy.stats._continuous_distns.exponnorm_gen": "scipy.stats.distributions.exponnorm_gen",
        "scipy.stats._continuous_distns.exponpow_gen": "scipy.stats.distributions.exponpow_gen",
        "scipy.stats._continuous_distns.exponweib_gen": "scipy.stats.distributions.exponweib_gen",
        "scipy.stats._continuous_distns.f_gen": "scipy.stats.distributions.f_gen",
        "scipy.stats._continuous_distns.fatiguelife_gen": "scipy.stats.distributions.fatiguelife_gen",
        "scipy.stats._continuous_distns.fisk_gen": "scipy.stats.distributions.fisk_gen",
        "scipy.stats._continuous_distns.foldcauchy_gen": "scipy.stats.distributions.foldcauchy_gen",
        "scipy.stats._continuous_distns.foldnorm_gen": "scipy.stats.distributions.foldnorm_gen",
        "scipy.stats._continuous_distns.gamma_gen": "scipy.stats.distributions.gamma_gen",
        "scipy.stats._continuous_distns.gausshyper_gen": "scipy.stats.distributions.gausshyper_gen",
        "scipy.stats._continuous_distns.genexpon_gen": "scipy.stats.distributions.genexpon_gen",
        "scipy.stats._continuous_distns.genextreme_gen": "scipy.stats.distributions.genextreme_gen",
        "scipy.stats._continuous_distns.gengamma_gen": "scipy.stats.distributions.gengamma_gen",
        "scipy.stats._continuous_distns.genhalflogistic_gen": "scipy.stats.distributions.genhalflogistic_gen",
        "scipy.stats._continuous_distns.genhyperbolic_gen": "scipy.stats.distributions.genhyperbolic_gen",
        "scipy.stats._continuous_distns.geninvgauss_gen": "scipy.stats.distributions.geninvgauss_gen",
        "scipy.stats._continuous_distns.genlogistic_gen": "scipy.stats.distributions.genlogistic_gen",
        "scipy.stats._continuous_distns.gennorm_gen": "scipy.stats.distributions.gennorm_gen",
        "scipy.stats._continuous_distns.genpareto_gen": "scipy.stats.distributions.genpareto_gen",
        "scipy.stats._discrete_distns.geom_gen": "scipy.stats.distributions.geom_gen",
        "scipy.stats._continuous_distns.gibrat_gen": "scipy.stats.distributions.gibrat_gen",
        "scipy.stats._continuous_distns.gompertz_gen": "scipy.stats.distributions.gompertz_gen",
        "scipy.stats._continuous_distns.gumbel_l_gen": "scipy.stats.distributions.gumbel_l_gen",
        "scipy.stats._continuous_distns.gumbel_r_gen": "scipy.stats.distributions.gumbel_r_gen",
        "scipy.stats._continuous_distns.halfcauchy_gen": "scipy.stats.distributions.halfcauchy_gen",
        "scipy.stats._continuous_distns.halfgennorm_gen": "scipy.stats.distributions.halfgennorm_gen",
        "scipy.stats._continuous_distns.halflogistic_gen": "scipy.stats.distributions.halflogistic_gen",
        "scipy.stats._continuous_distns.halfnorm_gen": "scipy.stats.distributions.halfnorm_gen",
        "scipy.stats._discrete_distns.hypergeom_gen": "scipy.stats.distributions.hypergeom_gen",
        "scipy.stats._continuous_distns.hypsecant_gen": "scipy.stats.distributions.hypsecant_gen",
        "scipy.stats._continuous_distns.invgamma_gen": "scipy.stats.distributions.invgamma_gen",
        "scipy.stats._continuous_distns.invgauss_gen": "scipy.stats.distributions.invgauss_gen",
        "scipy.stats._continuous_distns.invweibull_gen": "scipy.stats.distributions.invweibull_gen",
        "scipy.stats._continuous_distns.jf_skew_t_gen": "scipy.stats.distributions.jf_skew_t_gen",
        "scipy.stats._continuous_distns.johnsonsb_gen": "scipy.stats.distributions.johnsonsb_gen",
        "scipy.stats._continuous_distns.johnsonsu_gen": "scipy.stats.distributions.johnsonsu_gen",
        "scipy.stats._continuous_distns.kappa3_gen": "scipy.stats.distributions.kappa3_gen",
        "scipy.stats._continuous_distns.kappa4_gen": "scipy.stats.distributions.kappa4_gen",
        "scipy.stats._continuous_distns.ksone_gen": "scipy.stats.distributions.ksone_gen",
        "scipy.stats._continuous_distns.kstwo_gen": "scipy.stats.distributions.kstwo_gen",
        "scipy.stats._continuous_distns.kstwobign_gen": "scipy.stats.distributions.kstwobign_gen",
        "scipy.stats._continuous_distns.laplace_asymmetric_gen": "scipy.stats.distributions.laplace_asymmetric_gen",
        "scipy.stats._continuous_distns.laplace_gen": "scipy.stats.distributions.laplace_gen",
        "scipy.stats._continuous_distns.levy_gen": "scipy.stats.distributions.levy_gen",
        "scipy.stats._continuous_distns.levy_l_gen": "scipy.stats.distributions.levy_l_gen",
        "scipy.stats._continuous_distns.loggamma_gen": "scipy.stats.distributions.loggamma_gen",
        "scipy.stats._continuous_distns.logistic_gen": "scipy.stats.distributions.logistic_gen",
        "scipy.stats._continuous_distns.loglaplace_gen": "scipy.stats.distributions.loglaplace_gen",
        "scipy.stats._continuous_distns.lognorm_gen": "scipy.stats.distributions.lognorm_gen",
        "scipy.stats._discrete_distns.logser_gen": "scipy.stats.distributions.logser_gen",
        "scipy.stats._continuous_distns.lomax_gen": "scipy.stats.distributions.lomax_gen",
        "scipy.stats._continuous_distns.maxwell_gen": "scipy.stats.distributions.maxwell_gen",
        "scipy.stats._continuous_distns.mielke_gen": "scipy.stats.distributions.mielke_gen",
        "scipy.stats._continuous_distns.moyal_gen": "scipy.stats.distributions.moyal_gen",
        "scipy.stats._continuous_distns.nakagami_gen": "scipy.stats.distributions.nakagami_gen",
        "scipy.stats._discrete_distns.nbinom_gen": "scipy.stats.distributions.nbinom_gen",
        "scipy.stats._continuous_distns.ncf_gen": "scipy.stats.distributions.ncf_gen",
        "scipy.stats._discrete_distns.nchypergeom_fisher_gen": "scipy.stats.distributions.nchypergeom_fisher_gen",
        "scipy.stats._discrete_distns.nchypergeom_wallenius_gen": "scipy.stats.distributions.nchypergeom_wallenius_gen",
        "scipy.stats._continuous_distns.nct_gen": "scipy.stats.distributions.nct_gen",
        "scipy.stats._continuous_distns.ncx2_gen": "scipy.stats.distributions.ncx2_gen",
        "scipy.stats._discrete_distns.nhypergeom_gen": "scipy.stats.distributions.nhypergeom_gen",
        "scipy.stats._continuous_distns.norm_gen": "scipy.stats.distributions.norm_gen",
        "scipy.stats._continuous_distns.norminvgauss_gen": "scipy.stats.distributions.norminvgauss_gen",
        "scipy.stats._continuous_distns.pareto_gen": "scipy.stats.distributions.pareto_gen",
        "scipy.stats._continuous_distns.pearson3_gen": "scipy.stats.distributions.pearson3_gen",
        "scipy.stats._discrete_distns.planck_gen": "scipy.stats.distributions.planck_gen",
        "scipy.stats._discrete_distns.poisson_gen": "scipy.stats.distributions.poisson_gen",
        "scipy.stats._continuous_distns.powerlaw_gen": "scipy.stats.distributions.powerlaw_gen",
        "scipy.stats._continuous_distns.powerlognorm_gen": "scipy.stats.distributions.powerlognorm_gen",
        "scipy.stats._continuous_distns.powernorm_gen": "scipy.stats.distributions.powernorm_gen",
        "scipy.stats._discrete_distns.randint_gen": "scipy.stats.distributions.randint_gen",
        "scipy.stats._continuous_distns.rayleigh_gen": "scipy.stats.distributions.rayleigh_gen",
        "scipy.stats._continuous_distns.rdist_gen": "scipy.stats.distributions.rdist_gen",
        "scipy.stats._continuous_distns.recipinvgauss_gen": "scipy.stats.distributions.recipinvgauss_gen",
        "scipy.stats._continuous_distns.reciprocal_gen": "scipy.stats.distributions.reciprocal_gen",
        "scipy.stats._continuous_distns.rel_breitwigner_gen": "scipy.stats.distributions.rel_breitwigner_gen",
        "scipy.stats._continuous_distns.rice_gen": "scipy.stats.distributions.rice_gen",
        "scipy.stats._distn_infrastructure.rv_continuous": "scipy.stats.rv_continuous",
        "scipy.stats._distn_infrastructure.rv_discrete": "scipy.stats.rv_discrete",
        "scipy.stats._distn_infrastructure.rv_frozen": "scipy.stats.distributions.rv_frozen",
        "scipy.stats._continuous_distns.rv_histogram": "scipy.stats.rv_histogram",
        "scipy.stats._continuous_distns.semicircular_gen": "scipy.stats.distributions.semicircular_gen",
        "scipy.stats._discrete_distns.skellam_gen": "scipy.stats.distributions.skellam_gen",
        "scipy.stats._continuous_distns.skewcauchy_gen": "scipy.stats.distributions.skewcauchy_gen",
        "scipy.stats._continuous_distns.skewnorm_gen": "scipy.stats.distributions.skewnorm_gen",
        "scipy.stats._continuous_distns.studentized_range_gen": "scipy.stats.distributions.studentized_range_gen",
        "scipy.stats._continuous_distns.t_gen": "scipy.stats.distributions.t_gen",
        "scipy.stats._continuous_distns.trapezoid_gen": "scipy.stats.distributions.trapezoid_gen",
        "scipy.stats._continuous_distns.triang_gen": "scipy.stats.distributions.triang_gen",
        "scipy.stats._continuous_distns.truncexpon_gen": "scipy.stats.distributions.truncexpon_gen",
        "scipy.stats._continuous_distns.truncnorm_gen": "scipy.stats.distributions.truncnorm_gen",
        "scipy.stats._continuous_distns.truncpareto_gen": "scipy.stats.distributions.truncpareto_gen",
        "scipy.stats._continuous_distns.truncweibull_min_gen": "scipy.stats.distributions.truncweibull_min_gen",
        "scipy.stats._continuous_distns.tukeylambda_gen": "scipy.stats.distributions.tukeylambda_gen",
        "scipy.stats._continuous_distns.uniform_gen": "scipy.stats.distributions.uniform_gen",
        "scipy.stats._continuous_distns.vonmises_gen": "scipy.stats.distributions.vonmises_gen",
        "scipy.stats._continuous_distns.wald_gen": "scipy.stats.distributions.wald_gen",
        "scipy.stats._continuous_distns.weibull_max_gen": "scipy.stats.distributions.weibull_max_gen",
        "scipy.stats._continuous_distns.weibull_min_gen": "scipy.stats.distributions.weibull_min_gen",
        "scipy.stats._continuous_distns.wrapcauchy_gen": "scipy.stats.distributions.wrapcauchy_gen",
        "scipy.stats._discrete_distns.yulesimon_gen": "scipy.stats.distributions.yulesimon_gen",
        "scipy.stats._discrete_distns.zipf_gen": "scipy.stats.distributions.zipf_gen",
        "scipy.stats._discrete_distns.zipfian_gen": "scipy.stats.distributions.zipfian_gen",
        "scipy.stats._multicomp.dunnett": "scipy.stats.dunnett",
        "scipy.stats._survival.ecdf": "scipy.stats.ecdf",
        "scipy.stats._stats_py.energy_distance": "scipy.stats.stats.energy_distance",
        "scipy.stats._hypotests.epps_singleton_2samp": "scipy.stats.epps_singleton_2samp",
        "scipy.stats._stats_py.expectile": "scipy.stats.expectile",
        "scipy.stats._stats_py.f_oneway": "scipy.stats.stats.f_oneway",
        "scipy.stats._morestats.false_discovery_control": "scipy.stats.false_discovery_control",
        "scipy.stats._stats_py.find_repeats": "scipy.stats.stats.find_repeats",
        "scipy.stats._stats_py.fisher_exact": "scipy.stats.stats.fisher_exact",
        "scipy.stats._fit.fit": "scipy.stats.fit",
        "scipy.stats._morestats.fligner": "scipy.stats.morestats.fligner",
        "scipy.stats._stats_py.friedmanchisquare": "scipy.stats.stats.friedmanchisquare",
        "scipy.stats._kde.gaussian_kde": "scipy.stats.kde.gaussian_kde",
        "scipy.stats._stats_py.gmean": "scipy.stats.stats.gmean",
        "scipy.stats._fit.goodness_of_fit": "scipy.stats.goodness_of_fit",
        "scipy.stats._stats_py.gstd": "scipy.stats.stats.gstd",
        "scipy.stats._stats_py.gzscore": "scipy.stats.stats.gzscore",
        "scipy.stats._stats_py.hmean": "scipy.stats.stats.hmean",
        "scipy.stats._stats_py.iqr": "scipy.stats.stats.iqr",
        "scipy.stats._stats_py.jarque_bera": "scipy.stats.stats.jarque_bera",
        "scipy.stats._stats.gaussian_kernel_estimate": "scipy.stats.kde.gaussian_kernel_estimate",
        "scipy.stats._stats_py.kendalltau": "scipy.stats.stats.kendalltau",
        "scipy.stats._stats_py.kruskal": "scipy.stats.stats.kruskal",
        "scipy.stats._stats_py.ks_1samp": "scipy.stats.stats.ks_1samp",
        "scipy.stats._stats_py.ks_2samp": "scipy.stats.stats.ks_2samp",
        "scipy.stats._morestats.kstat": "scipy.stats.morestats.kstat",
        "scipy.stats._morestats.kstatvar": "scipy.stats.morestats.kstatvar",
        "scipy.stats._stats_py.kstest": "scipy.stats.stats.kstest",
        "scipy.stats._stats_py.kurtosis": "scipy.stats.stats.kurtosis",
        "scipy.stats._stats_py.kurtosistest": "scipy.stats.stats.kurtosistest",
        "scipy.stats._morestats.levene": "scipy.stats.morestats.levene",
        "scipy.stats._stats_mstats_common.linregress": "scipy.stats.stats.linregress",
        "scipy.stats._survival.logrank": "scipy.stats.logrank",
        "scipy.stats._mannwhitneyu.mannwhitneyu": "scipy.stats.mannwhitneyu",
        "scipy.stats._stats_py.median_abs_deviation": "scipy.stats.stats.median_abs_deviation",
        "scipy.stats._morestats.median_test": "scipy.stats.morestats.median_test",
        "scipy.stats._stats_py.mode": "scipy.stats.stats.mode",
        "scipy.stats._stats_py.moment": "scipy.stats.stats.moment",
        "scipy.stats._resampling.monte_carlo_test": "scipy.stats.monte_carlo_test",
        "scipy.stats._morestats.mood": "scipy.stats.morestats.mood",
        "scipy.stats._morestats.AndersonResult": "scipy.stats.morestats.AndersonResult",
        "scipy.stats._morestats.Anderson_ksampResult": "scipy.stats.morestats.Anderson_ksampResult",
        "scipy.stats._morestats.AnsariResult": "scipy.stats.morestats.AnsariResult",
        "scipy.stats._morestats.BartlettResult": "scipy.stats.morestats.BartlettResult",
        "scipy.stats._morestats.FlignerResult": "scipy.stats.morestats.FlignerResult",
        "scipy.stats._morestats.LeveneResult": "scipy.stats.morestats.LeveneResult",
        "scipy.stats._morestats.Mean": "scipy.stats.morestats.Mean",
        "scipy.stats._morestats.ShapiroResult": "scipy.stats.morestats.ShapiroResult",
        "scipy.stats._morestats.Std_dev": "scipy.stats.morestats.Std_dev",
        "scipy.stats._morestats.Variance": "scipy.stats.morestats.Variance",
        "scipy.stats._morestats.WilcoxonResult": "scipy.stats.morestats.WilcoxonResult",
        "scipy.stats._morestats.mvsdist": "scipy.stats.mvsdist",
        "scipy.stats._morestats.ppcc_max": "scipy.stats.ppcc_max",
        "scipy.stats._morestats.ppcc_plot": "scipy.stats.ppcc_plot",
        "scipy.stats._morestats.probplot": "scipy.stats.probplot",
        "scipy.stats._distn_infrastructure.rv_generic": "scipy.stats.morestats.rv_generic",
        "scipy.stats._morestats.shapiro": "scipy.stats.shapiro",
        "scipy.stats._morestats.wilcoxon": "scipy.stats.wilcoxon",
        "scipy.stats._morestats.yeojohnson": "scipy.stats.yeojohnson",
        "scipy.stats._morestats.yeojohnson_llf": "scipy.stats.yeojohnson_llf",
        "scipy.stats._morestats.yeojohnson_normmax": "scipy.stats.yeojohnson_normmax",
        "scipy.stats._morestats.yeojohnson_normplot": "scipy.stats.yeojohnson_normplot",
        "scipy.stats._mstats_basic.argstoarray": "scipy.stats._mstats_basic.argstoarray",
        "scipy.stats._mstats_basic.brunnermunzel": "scipy.stats._mstats_basic.brunnermunzel",
        "scipy.stats._mstats_extras.compare_medians_ms": "scipy.stats.mstats_extras.compare_medians_ms",
        "scipy.stats._mstats_basic.count_tied_groups": "scipy.stats._mstats_basic.count_tied_groups",
        "scipy.stats._mstats_basic.describe": "scipy.stats._mstats_basic.describe",
        "scipy.stats._mstats_basic.f_oneway": "scipy.stats._mstats_basic.f_oneway",
        "scipy.stats._mstats_basic.find_repeats": "scipy.stats._mstats_basic.find_repeats",
        "scipy.stats._mstats_basic.friedmanchisquare": "scipy.stats._mstats_basic.friedmanchisquare",
        "scipy.stats._mstats_extras.hdmedian": "scipy.stats.mstats_extras.hdmedian",
        "scipy.stats._mstats_extras.hdquantiles": "scipy.stats.mstats_extras.hdquantiles",
        "scipy.stats._mstats_extras.hdquantiles_sd": "scipy.stats.mstats_extras.hdquantiles_sd",
        "scipy.stats._mstats_extras.idealfourths": "scipy.stats.mstats_extras.idealfourths",
        "scipy.stats._mstats_basic.kendalltau": "scipy.stats._mstats_basic.kendalltau",
        "scipy.stats._mstats_basic.kendalltau_seasonal": "scipy.stats._mstats_basic.kendalltau_seasonal",
        "scipy.stats._mstats_basic.kruskal": "scipy.stats._mstats_basic.kruskalwallis",
        "scipy.stats._mstats_basic.ks_1samp": "scipy.stats._mstats_basic.ks_1samp",
        "scipy.stats._mstats_basic.ks_2samp": "scipy.stats._mstats_basic.ks_twosamp",
        "scipy.stats._mstats_basic.kstest": "scipy.stats._mstats_basic.kstest",
        "scipy.stats._mstats_basic.kurtosis": "scipy.stats._mstats_basic.kurtosis",
        "scipy.stats._mstats_basic.kurtosistest": "scipy.stats._mstats_basic.kurtosistest",
        "scipy.stats._mstats_basic.linregress": "scipy.stats._mstats_basic.linregress",
        "scipy.stats._mstats_basic.mannwhitneyu": "scipy.stats._mstats_basic.mannwhitneyu",
        "scipy.stats._mstats_extras.median_cihs": "scipy.stats.mstats_extras.median_cihs",
        "scipy.stats._mstats_basic.plotting_positions": "scipy.stats._mstats_basic.plotting_positions",
        "scipy.stats._mstats_extras.mjci": "scipy.stats.mstats_extras.mjci",
        "scipy.stats._mstats_basic.mode": "scipy.stats._mstats_basic.mode",
        "scipy.stats._mstats_basic.moment": "scipy.stats._mstats_basic.moment",
        "scipy.stats._mstats_basic.mquantiles": "scipy.stats._mstats_basic.mquantiles",
        "scipy.stats._mstats_extras.mquantiles_cimj": "scipy.stats.mstats_extras.mquantiles_cimj",
        "scipy.stats._mstats_basic.msign": "scipy.stats._mstats_basic.msign",
        "scipy.stats._mstats_basic.normaltest": "scipy.stats._mstats_basic.normaltest",
        "scipy.stats._mstats_basic.obrientransform": "scipy.stats._mstats_basic.obrientransform",
        "scipy.stats._mstats_basic.pearsonr": "scipy.stats._mstats_basic.pearsonr",
        "scipy.stats._mstats_basic.pointbiserialr": "scipy.stats._mstats_basic.pointbiserialr",
        "scipy.stats._mstats_basic.rankdata": "scipy.stats._mstats_basic.rankdata",
        "scipy.stats._mstats_extras.rsh": "scipy.stats.mstats_extras.rsh",
        "scipy.stats._mstats_basic.scoreatpercentile": "scipy.stats._mstats_basic.scoreatpercentile",
        "scipy.stats._mstats_basic.sem": "scipy.stats._mstats_basic.sem",
        "scipy.stats._mstats_basic.sen_seasonal_slopes": "scipy.stats._mstats_basic.sen_seasonal_slopes",
        "scipy.stats._mstats_basic.siegelslopes": "scipy.stats._mstats_basic.siegelslopes",
        "scipy.stats._mstats_basic.skew": "scipy.stats._mstats_basic.skew",
        "scipy.stats._mstats_basic.skewtest": "scipy.stats._mstats_basic.skewtest",
        "scipy.stats._mstats_basic.spearmanr": "scipy.stats._mstats_basic.spearmanr",
        "scipy.stats._mstats_basic.theilslopes": "scipy.stats._mstats_basic.theilslopes",
        "scipy.stats._mstats_basic.tmax": "scipy.stats._mstats_basic.tmax",
        "scipy.stats._mstats_basic.tmean": "scipy.stats._mstats_basic.tmean",
        "scipy.stats._mstats_basic.tmin": "scipy.stats._mstats_basic.tmin",
        "scipy.stats._mstats_basic.trim": "scipy.stats._mstats_basic.trim",
        "scipy.stats._mstats_basic.trima": "scipy.stats._mstats_basic.trima",
        "scipy.stats._mstats_basic.trimboth": "scipy.stats._mstats_basic.trimboth",
        "scipy.stats._mstats_basic.trimmed_mean": "scipy.stats._mstats_basic.trimmed_mean",
        "scipy.stats._mstats_extras.trimmed_mean_ci": "scipy.stats.mstats_extras.trimmed_mean_ci",
        "scipy.stats._mstats_basic.trimmed_std": "scipy.stats._mstats_basic.trimmed_std",
        "scipy.stats._mstats_basic.trimmed_stde": "scipy.stats._mstats_basic.trimmed_stde",
        "scipy.stats._mstats_basic.trimmed_var": "scipy.stats._mstats_basic.trimmed_var",
        "scipy.stats._mstats_basic.trimr": "scipy.stats._mstats_basic.trimr",
        "scipy.stats._mstats_basic.trimtail": "scipy.stats._mstats_basic.trimtail",
        "scipy.stats._mstats_basic.tsem": "scipy.stats._mstats_basic.tsem",
        "scipy.stats._mstats_basic.ttest_1samp": "scipy.stats._mstats_basic.ttest_onesamp",
        "scipy.stats._mstats_basic.ttest_ind": "scipy.stats._mstats_basic.ttest_ind",
        "scipy.stats._mstats_basic.ttest_rel": "scipy.stats._mstats_basic.ttest_rel",
        "scipy.stats._mstats_basic.tvar": "scipy.stats._mstats_basic.tvar",
        "scipy.stats._mstats_basic.variation": "scipy.stats._mstats_basic.variation",
        "scipy.stats._mstats_basic.winsorize": "scipy.stats._mstats_basic.winsorize",
        "scipy.stats._stats_py.zmap": "scipy.stats.zmap",
        "scipy.stats._stats_py.zscore": "scipy.stats.zscore",
        "scipy.stats._mstats_basic.BrunnerMunzelResult": "scipy.stats._mstats_basic.BrunnerMunzelResult",
        "scipy.stats._mstats_basic.DescribeResult": "scipy.stats._mstats_basic.DescribeResult",
        "scipy.stats._mstats_basic.F_onewayResult": "scipy.stats._mstats_basic.F_onewayResult",
        "scipy.stats._mstats_basic.FriedmanchisquareResult": "scipy.stats._mstats_basic.FriedmanchisquareResult",
        "scipy.stats._mstats_basic.KruskalResult": "scipy.stats._mstats_basic.KruskalResult",
        "scipy.stats._mstats_basic.KurtosistestResult": "scipy.stats._mstats_basic.KurtosistestResult",
        "scipy.stats._mstats_basic.MannwhitneyuResult": "scipy.stats._mstats_basic.MannwhitneyuResult",
        "scipy.stats._mstats_basic.ModeResult": "scipy.stats._mstats_basic.ModeResult",
        "scipy.stats._mstats_basic.NormaltestResult": "scipy.stats._mstats_basic.NormaltestResult",
        "scipy.stats._mstats_basic.PointbiserialrResult": "scipy.stats.stats.PointbiserialrResult",
        "scipy.stats._mstats_basic.SkewtestResult": "scipy.stats._mstats_basic.SkewtestResult",
        "scipy.stats._mstats_basic.Ttest_1sampResult": "scipy.stats.stats.Ttest_1sampResult",
        "scipy.stats._mstats_basic.Ttest_indResult": "scipy.stats._mstats_basic.Ttest_indResult",
        "scipy.stats._mstats_basic.Ttest_relResult": "scipy.stats.stats.Ttest_relResult",
        "scipy.stats._stats_mstats_common.LinregressResult": "scipy.stats._mstats_basic.stats_LinregressResult",
        "scipy.stats._stats_mstats_common.siegelslopes": "scipy.stats.stats.siegelslopes",
        "scipy.stats._stats_mstats_common.theilslopes": "scipy.stats.theilslopes",
        "scipy.stats._mstats_basic.stde_median": "scipy.stats._mstats_basic.stde_median",
        "scipy.stats._mstats_basic.SenSeasonalSlopesResult": "scipy.stats._mstats_basic.SenSeasonalSlopesResult",
        "scipy.stats._stats_py.multiscale_graphcorr": "scipy.stats.stats.multiscale_graphcorr",
        "scipy.stats._stats_py.normaltest": "scipy.stats.stats.normaltest",
        "scipy.stats._stats_py.obrientransform": "scipy.stats.stats.obrientransform",
        "scipy.stats._page_trend_test.page_trend_test": "scipy.stats.page_trend_test",
        "scipy.stats._stats_py.pearsonr": "scipy.stats.stats.pearsonr",
        "scipy.stats._stats_py.percentileofscore": "scipy.stats.stats.percentileofscore",
        "scipy.stats._resampling.permutation_test": "scipy.stats.permutation_test",
        "scipy.stats._stats_py.pmean": "scipy.stats.stats.pmean",
        "scipy.stats._stats_py.pointbiserialr": "scipy.stats.stats.pointbiserialr",
        "scipy.stats._hypotests.poisson_means_test": "scipy.stats.poisson_means_test",
        "scipy.stats._qmc.Halton": "scipy.stats.qmc.Halton",
        "scipy.stats._qmc.LatinHypercube": "scipy.stats.qmc.LatinHypercube",
        "scipy.stats._qmc.MultinomialQMC": "scipy.stats.qmc.MultinomialQMC",
        "scipy.stats._qmc.MultivariateNormalQMC": "scipy.stats.qmc.MultivariateNormalQMC",
        "scipy.stats._qmc.PoissonDisk": "scipy.stats.qmc.PoissonDisk",
        "scipy.stats._qmc.QMCEngine": "scipy.stats.qmc.QMCEngine",
        "scipy.stats._qmc.Sobol": "scipy.stats.qmc.Sobol",
        "scipy.stats._qmc.discrepancy": "scipy.stats.qmc.discrepancy",
        "scipy.stats._qmc.geometric_discrepancy": "scipy.stats.qmc.geometric_discrepancy",
        "scipy.stats._qmc.scale": "scipy.stats.qmc.scale",
        "scipy.stats._qmc.update_discrepancy": "scipy.stats.qmc.update_discrepancy",
        "scipy.stats._stats_py.quantile_test": "scipy.stats.quantile_test",
        "scipy.stats._stats_py.rankdata": "scipy.stats.stats.rankdata",
        "scipy.stats._stats_py.ranksums": "scipy.stats.stats.ranksums",
        "scipy.stats._stats_py.relfreq": "scipy.stats.stats.relfreq",
        "scipy.stats._rvs_sampling.rvs_ratio_uniforms": "scipy.stats.rvs_ratio_uniforms",
        "scipy.stats._unuran.unuran_wrapper.DiscreteAliasUrn": "scipy.stats.sampling.DiscreteAliasUrn",
        "scipy.stats._unuran.unuran_wrapper.DiscreteGuideTable": "scipy.stats.sampling.DiscreteGuideTable",
        "scipy.stats._sampling.FastGeneratorInversion": "scipy.stats.sampling.FastGeneratorInversion",
        "scipy.stats._unuran.unuran_wrapper.NumericalInverseHermite": "scipy.stats.sampling.NumericalInverseHermite",
        "scipy.stats._unuran.unuran_wrapper.NumericalInversePolynomial": "scipy.stats.sampling.NumericalInversePolynomial",
        "scipy.stats._sampling.RatioUniforms": "scipy.stats.sampling.RatioUniforms",
        "scipy.stats._unuran.unuran_wrapper.SimpleRatioUniforms": "scipy.stats.sampling.SimpleRatioUniforms",
        "scipy.stats._unuran.unuran_wrapper.TransformedDensityRejection": "scipy.stats.sampling.TransformedDensityRejection",
        "scipy.stats._unuran.unuran_wrapper.UNURANError": "scipy.stats.sampling.UNURANError",
        "scipy.stats._stats_py.scoreatpercentile": "scipy.stats.stats.scoreatpercentile",
        "scipy.stats._stats_py.sem": "scipy.stats.stats.sem",
        "scipy.stats._stats_py.sigmaclip": "scipy.stats.stats.sigmaclip",
        "scipy.stats._stats_py.skew": "scipy.stats.stats.skew",
        "scipy.stats._stats_py.skewtest": "scipy.stats.stats.skewtest",
        "scipy.stats._sensitivity_analysis.sobol_indices": "scipy.stats.sobol_indices",
        "scipy.stats._hypotests.somersd": "scipy.stats.somersd",
        "scipy.stats._stats_py.spearmanr": "scipy.stats.stats.spearmanr",
        "scipy.stats._stats_py.AlexanderGovernResult": "scipy.stats.stats.AlexanderGovernResult",
        "scipy.stats._stats_py.BrunnerMunzelResult": "scipy.stats.stats.BrunnerMunzelResult",
        "scipy.stats._stats_py.CumfreqResult": "scipy.stats.stats.CumfreqResult",
        "scipy.stats._stats_py.DescribeResult": "scipy.stats.stats.DescribeResult",
        "scipy.stats._stats_py.F_onewayResult": "scipy.stats.stats.F_onewayResult",
        "scipy.stats._stats_py.FriedmanchisquareResult": "scipy.stats.stats.FriedmanchisquareResult",
        "scipy.stats._stats_py.HistogramResult": "scipy.stats.stats.HistogramResult",
        "scipy.stats._stats_py.KruskalResult": "scipy.stats.stats.KruskalResult",
        "scipy.stats._stats_py.KstestResult": "scipy.stats.stats.KstestResult",
        "scipy.stats._stats_py.KurtosistestResult": "scipy.stats.stats.KurtosistestResult",
        "scipy.stats._stats_py.MGCResult": "scipy.stats.stats.MGCResult",
        "scipy._lib._util.MapWrapper": "scipy.optimize.optimize.MapWrapper",
        "scipy.stats._stats_py.ModeResult": "scipy.stats.stats.ModeResult",
        "scipy.stats._stats_py.NormaltestResult": "scipy.stats.stats.NormaltestResult",
        "scipy.stats._stats_py.Power_divergenceResult": "scipy.stats.stats.Power_divergenceResult",
        "scipy.stats._stats_py.RanksumsResult": "scipy.stats.stats.RanksumsResult",
        "scipy.stats._stats_py.RelfreqResult": "scipy.stats.stats.RelfreqResult",
        "scipy.stats._stats_py.RepeatedResults": "scipy.stats.stats.RepeatedResults",
        "scipy.stats._stats_py.SigmaclipResult": "scipy.stats.stats.SigmaclipResult",
        "scipy.stats._stats_py.SkewtestResult": "scipy.stats.stats.SkewtestResult",
        "scipy.stats._stats_py.Ttest_indResult": "scipy.stats.stats.Ttest_indResult",
        "scipy.stats._stats_py.tiecorrect": "scipy.stats.tiecorrect",
        "scipy.stats._stats_py.tmax": "scipy.stats.tmax",
        "scipy.stats._stats_py.tmean": "scipy.stats.tmean",
        "scipy.stats._stats_py.tmin": "scipy.stats.tmin",
        "scipy.stats._stats_py.trim1": "scipy.stats.trim1",
        "scipy.stats._stats_py.trim_mean": "scipy.stats.trim_mean",
        "scipy.stats._stats_py.trimboth": "scipy.stats.trimboth",
        "scipy.stats._stats_py.tsem": "scipy.stats.tsem",
        "scipy.stats._stats_py.tstd": "scipy.stats.tstd",
        "scipy.stats._stats_py.ttest_1samp": "scipy.stats.ttest_1samp",
        "scipy.stats._stats_py.ttest_ind": "scipy.stats.ttest_ind",
        "scipy.stats._stats_py.ttest_ind_from_stats": "scipy.stats.ttest_ind_from_stats",
        "scipy.stats._stats_py.ttest_rel": "scipy.stats.ttest_rel",
        "scipy.stats._stats_py.tvar": "scipy.stats.tvar",
        "scipy.stats._stats_py.wasserstein_distance": "scipy.stats.wasserstein_distance",
        "scipy.stats._stats_py.weightedtau": "scipy.stats.weightedtau",
        "scipy.stats._hypotests.tukey_hsd": "scipy.stats.tukey_hsd",
        "scipy.stats._variation.variation": "scipy.stats.variation",
        "scipy.stats._stats_py.wasserstein_distance_nd": "scipy.stats.wasserstein_distance_nd",
        "scipy.optimize._optimize.Brent": "scipy.optimize.optimize.Brent",
        "scipy.optimize._differentiable_functions.ScalarFunction": "scipy.optimize.optimize.ScalarFunction",
        "scipy.optimize._numdiff.approx_derivative": "scipy.optimize.slsqp.approx_derivative",
        "scipy.optimize._optimize.approx_fhess_p": "scipy.optimize.optimize.approx_fhess_p",
        "scipy.optimize._optimize.rosen": "scipy.optimize.rosen",
        "scipy.optimize._optimize.rosen_der": "scipy.optimize.rosen_der",
        "scipy.optimize._optimize.rosen_hess": "scipy.optimize.rosen_hess",
        "scipy.optimize._optimize.rosen_hess_prod": "scipy.optimize.rosen_hess_prod",
        "scipy.optimize._optimize.show_options": "scipy.optimize.show_options",
        "scipy.optimize._optimize.vecnorm": "scipy.optimize.optimize.vecnorm",
        "scipy.optimize._qap.quadratic_assignment": "scipy.optimize.quadratic_assignment",
        "scipy.optimize._zeros_py.ridder": "scipy.optimize.zeros.ridder",
        "scipy.optimize._root.root": "scipy.optimize.root",
        "scipy.optimize._root_scalar.root_scalar": "scipy.optimize.root_scalar",
        "scipy.optimize._shgo.shgo": "scipy.optimize.shgo",
        "scipy.optimize._slsqp_py.approx_jacobian": "scipy.optimize.slsqp.approx_jacobian",
        "scipy.optimize._zeros_py.toms748": "scipy.optimize.zeros.toms748",
        "scipy.optimize._zeros_py.TOMS748Solver": "scipy.optimize.zeros.TOMS748Solver",
        "scipy.optimize._zeros_py.results_c": "scipy.optimize.zeros.results_c",
        "scipy.sparse.linalg._dsolve.linsolve.csr_matrix": "scipy.sparse.csr_matrix"
    },
    "matplotlib": {
        "matplotlib.ExecutableNotFoundError": "matplotlib.ExecutableNotFoundError",
        "matplotlib._api.deprecation.MatplotlibDeprecationWarning": "matplotlib.MatplotlibDeprecationWarning",
        "matplotlib.RcParams": "matplotlib.RcParams",
        "matplotlib.artist.Artist": "matplotlib.pyplot.Artist",
        "matplotlib.artist.ArtistInspector": "matplotlib.artist.ArtistInspector",
        "matplotlib.transforms.Bbox": "matplotlib.gridspec.Bbox",
        "matplotlib.colors.BoundaryNorm": "matplotlib.colors.BoundaryNorm",
        "matplotlib.transforms.IdentityTransform": "matplotlib.markers.IdentityTransform",
        "matplotlib.path.Path": "matplotlib.textpath.Path",
        "matplotlib.cm.ScalarMappable": "matplotlib.cm.ScalarMappable",
        "matplotlib.transforms.Transform": "matplotlib.projections.geo.Transform",
        "matplotlib.transforms.TransformedBbox": "matplotlib.figure.TransformedBbox",
        "matplotlib.transforms.TransformedPatchPath": "matplotlib.widgets.TransformedPatchPath",
        "matplotlib.transforms.TransformedPath": "matplotlib.transforms.TransformedPath",
        "matplotlib.artist.allow_rasterization": "matplotlib.figure.allow_rasterization",
        "matplotlib.cbook.CallbackRegistry": "matplotlib.cbook.CallbackRegistry",
        "matplotlib.cbook.Grouper": "matplotlib.cbook.Grouper",
        "matplotlib.cbook.GrouperView": "matplotlib.cbook.GrouperView",
        "matplotlib.cbook.Stack": "matplotlib.cbook.Stack",
        "matplotlib.cbook.boxplot_stats": "matplotlib.cbook.boxplot_stats",
        "matplotlib.cbook.contiguous_regions": "matplotlib.cbook.contiguous_regions",
        "matplotlib.cbook.delete_masked_points": "matplotlib.cbook.delete_masked_points",
        "matplotlib.cbook.file_requires_unicode": "matplotlib.cbook.file_requires_unicode",
        "matplotlib.cbook.flatten": "matplotlib.cbook.flatten",
        "matplotlib.cbook.get_sample_data": "matplotlib.cbook.get_sample_data",
        "matplotlib.cbook.index_of": "matplotlib.cbook.index_of",
        "matplotlib.cbook.is_math_text": "matplotlib.cbook.is_math_text",
        "matplotlib.cbook.is_scalar_or_string": "matplotlib.cbook.is_scalar_or_string",
        "matplotlib.cbook.is_writable_file_like": "matplotlib.cbook.is_writable_file_like",
        "matplotlib.axes._axes.Axes": "matplotlib.pyplot.Subplot",
        "matplotlib.container.BarContainer": "matplotlib.container.BarContainer",
        "matplotlib.container.ErrorbarContainer": "matplotlib.container.ErrorbarContainer",
        "matplotlib.axes._secondary_axes.SecondaryAxis": "matplotlib.axes.SecondaryAxis",
        "matplotlib.container.StemContainer": "matplotlib.container.StemContainer",
        "matplotlib.axes.SubplotBase": "matplotlib.axes.SubplotBase",
        "matplotlib.collections.AsteriskPolygonCollection": "matplotlib.collections.AsteriskPolygonCollection",
        "matplotlib.collections.BrokenBarHCollection": "matplotlib.collections.BrokenBarHCollection",
        "matplotlib._enums.CapStyle": "matplotlib.rcsetup.CapStyle",
        "matplotlib.collections.CircleCollection": "matplotlib.legend.CircleCollection",
        "matplotlib.collections.Collection": "matplotlib.legend.Collection",
        "matplotlib.collections.EllipseCollection": "matplotlib.collections.EllipseCollection",
        "matplotlib.collections.EventCollection": "matplotlib.collections.EventCollection",
        "matplotlib._enums.JoinStyle": "matplotlib.rcsetup.JoinStyle",
        "matplotlib.collections.LineCollection": "matplotlib.legend.LineCollection",
        "matplotlib.collections.PatchCollection": "matplotlib.collections.PatchCollection",
        "matplotlib.collections.PathCollection": "matplotlib.legend.PathCollection",
        "matplotlib.collections.PolyCollection": "matplotlib.legend.PolyCollection",
        "matplotlib.collections.QuadMesh": "matplotlib.collections.QuadMesh",
        "matplotlib.collections.RegularPolyCollection": "matplotlib.legend.RegularPolyCollection",
        "matplotlib.collections.StarPolygonCollection": "matplotlib.collections.StarPolygonCollection",
        "matplotlib.collections.TriMesh": "matplotlib.collections.TriMesh",
        "matplotlib.cm.ColormapRegistry": "matplotlib.cm.ColormapRegistry",
        "matplotlib.colors.AsinhNorm": "matplotlib.colors.AsinhNorm",
        "matplotlib.colors.CenteredNorm": "matplotlib.colors.CenteredNorm",
        "matplotlib.colors.ColorConverter": "matplotlib.colors.ColorConverter",
        "matplotlib.colors.ColorSequenceRegistry": "matplotlib.colors.ColorSequenceRegistry",
        "matplotlib.colors.Colormap": "matplotlib.rcsetup.Colormap",
        "matplotlib.colors.FuncNorm": "matplotlib.colors.FuncNorm",
        "matplotlib.colors.LightSource": "matplotlib.colors.LightSource",
        "matplotlib.colors.LinearSegmentedColormap": "matplotlib.colors.LinearSegmentedColormap",
        "matplotlib.colors.ListedColormap": "matplotlib.colors.ListedColormap",
        "matplotlib.colors.LogNorm": "matplotlib.colors.LogNorm",
        "matplotlib.colors.NoNorm": "matplotlib.colors.NoNorm",
        "matplotlib.colors.Normalize": "matplotlib.pyplot.Normalize",
        "matplotlib.colors.PowerNorm": "matplotlib.colors.PowerNorm",
        "matplotlib.colors.SymLogNorm": "matplotlib.colors.SymLogNorm",
        "matplotlib.colors.TwoSlopeNorm": "matplotlib.colors.TwoSlopeNorm",
        "matplotlib.colors.from_levels_and_colors": "matplotlib.colors.from_levels_and_colors",
        "matplotlib.colors.get_named_colors_mapping": "matplotlib.colors.get_named_colors_mapping",
        "matplotlib.colors.to_rgb": "matplotlib.colors.to_rgb",
        "matplotlib.colors.hsv_to_rgb": "matplotlib.colors.hsv_to_rgb",
        "matplotlib.colors.is_color_like": "matplotlib.rcsetup.is_color_like",
        "matplotlib.colors.make_norm_from_scale": "matplotlib.colors.make_norm_from_scale",
        "matplotlib.colors.to_hex": "matplotlib.colors.to_hex",
        "matplotlib.colors.rgb_to_hsv": "matplotlib.colors.rgb_to_hsv",
        "matplotlib.colors.same_color": "matplotlib.colors.same_color",
        "matplotlib.ticker.AsinhLocator": "matplotlib.ticker.AsinhLocator",
        "matplotlib.scale.AsinhScale": "matplotlib.scale.AsinhScale",
        "matplotlib.scale.AsinhTransform": "matplotlib.scale.AsinhTransform",
        "matplotlib.ticker.AutoLocator": "matplotlib.pyplot.AutoLocator",
        "matplotlib.ticker.AutoMinorLocator": "matplotlib.ticker.AutoMinorLocator",
        "matplotlib.scale.FuncScale": "matplotlib.scale.FuncScale",
        "matplotlib.scale.FuncScaleLog": "matplotlib.scale.FuncScaleLog",
        "matplotlib.scale.FuncTransform": "matplotlib.scale.FuncTransform",
        "matplotlib.scale.InvertedAsinhTransform": "matplotlib.scale.InvertedAsinhTransform",
        "matplotlib.scale.InvertedLogTransform": "matplotlib.scale.InvertedLogTransform",
        "matplotlib.scale.InvertedSymmetricalLogTransform": "matplotlib.scale.InvertedSymmetricalLogTransform",
        "matplotlib.scale.LinearScale": "matplotlib.scale.LinearScale",
        "matplotlib.ticker.LogFormatterSciNotation": "matplotlib.ticker.LogFormatterSciNotation",
        "matplotlib.ticker.LogLocator": "matplotlib.pyplot.LogLocator",
        "matplotlib.scale.LogScale": "matplotlib.scale.LogScale",
        "matplotlib.scale.LogTransform": "matplotlib.scale.LogTransform",
        "matplotlib.scale.LogisticTransform": "matplotlib.scale.LogisticTransform",
        "matplotlib.ticker.LogitFormatter": "matplotlib.ticker.LogitFormatter",
        "matplotlib.ticker.LogitLocator": "matplotlib.ticker.LogitLocator",
        "matplotlib.scale.LogitScale": "matplotlib.scale.LogitScale",
        "matplotlib.scale.LogitTransform": "matplotlib.scale.LogitTransform",
        "matplotlib.ticker.NullFormatter": "matplotlib.pyplot.NullFormatter",
        "matplotlib.ticker.NullLocator": "matplotlib.pyplot.NullLocator",
        "matplotlib.ticker.ScalarFormatter": "matplotlib.pyplot.ScalarFormatter",
        "matplotlib.scale.ScaleBase": "matplotlib.scale.ScaleBase",
        "matplotlib.ticker.SymmetricalLogLocator": "matplotlib.ticker.SymmetricalLogLocator",
        "matplotlib.scale.SymmetricalLogScale": "matplotlib.scale.SymmetricalLogScale",
        "matplotlib.scale.SymmetricalLogTransform": "matplotlib.scale.SymmetricalLogTransform",
        "matplotlib.scale.get_scale_names": "matplotlib.pyplot.get_scale_names",
        "matplotlib.scale.register_scale": "matplotlib.scale.register_scale",
        "matplotlib.scale.scale_factory": "matplotlib.scale.scale_factory",
        "matplotlib.colors.to_rgba": "matplotlib.colors.to_rgba",
        "matplotlib.colors.to_rgba_array": "matplotlib.colors.to_rgba_array",
        "matplotlib.cm._get_cmap": "matplotlib.cm.get_cmap",
        "matplotlib.cm.register_cmap": "matplotlib.pyplot.register_cmap",
        "matplotlib.cm.unregister_cmap": "matplotlib.cm.unregister_cmap",
        "matplotlib.hatch.Circles": "matplotlib.hatch.Circles",
        "matplotlib.hatch.HatchPatternBase": "matplotlib.hatch.HatchPatternBase",
        "matplotlib.hatch.HorizontalHatch": "matplotlib.hatch.HorizontalHatch",
        "matplotlib.hatch.LargeCircles": "matplotlib.hatch.LargeCircles",
        "matplotlib.hatch.NorthEastHatch": "matplotlib.hatch.NorthEastHatch",
        "matplotlib.hatch.Shapes": "matplotlib.hatch.Shapes",
        "matplotlib.hatch.SmallCircles": "matplotlib.hatch.SmallCircles",
        "matplotlib.hatch.SmallFilledCircles": "matplotlib.hatch.SmallFilledCircles",
        "matplotlib.hatch.SouthEastHatch": "matplotlib.hatch.SouthEastHatch",
        "matplotlib.hatch.Stars": "matplotlib.hatch.Stars",
        "matplotlib.hatch.VerticalHatch": "matplotlib.hatch.VerticalHatch",
        "matplotlib.hatch.get_path": "matplotlib.hatch.get_path",
        "matplotlib.transforms.BboxTransformTo": "matplotlib.projections.geo.BboxTransformTo",
        "matplotlib.lines.Line2D": "matplotlib.pyplot.Line2D",
        "matplotlib.markers.MarkerStyle": "matplotlib.markers.MarkerStyle",
        "matplotlib.lines.VertexSelector": "matplotlib.lines.VertexSelector",
        "matplotlib.lines.segment_hits": "matplotlib.lines.segment_hits",
        "matplotlib.bezier.BezierSegment": "matplotlib.bezier.BezierSegment",
        "matplotlib.path.get_path_collection_extents": "matplotlib.path.get_path_collection_extents",
        "matplotlib.cbook.simple_linear_interpolation": "matplotlib.cbook.simple_linear_interpolation",
        "matplotlib.transforms.Affine2D": "matplotlib.textpath.Affine2D",
        "matplotlib.transforms.Affine2DBase": "matplotlib.transforms.Affine2DBase",
        "matplotlib.transforms.AffineBase": "matplotlib.transforms.AffineBase",
        "matplotlib.transforms.AffineDeltaTransform": "matplotlib.transforms.AffineDeltaTransform",
        "matplotlib.transforms.BboxBase": "matplotlib.text.BboxBase",
        "matplotlib.transforms.BboxTransform": "matplotlib.image.BboxTransform",
        "matplotlib.transforms.BboxTransformFrom": "matplotlib.legend.BboxTransformFrom",
        "matplotlib.transforms.BboxTransformToMaxOnly": "matplotlib.transforms.BboxTransformToMaxOnly",
        "matplotlib.transforms.BlendedAffine2D": "matplotlib.transforms.BlendedAffine2D",
        "matplotlib.transforms.BlendedGenericTransform": "matplotlib.transforms.BlendedGenericTransform",
        "matplotlib.transforms.CompositeAffine2D": "matplotlib.transforms.CompositeAffine2D",
        "matplotlib.transforms.CompositeGenericTransform": "matplotlib.transforms.CompositeGenericTransform",
        "matplotlib.transforms.LockableBbox": "matplotlib.transforms.LockableBbox",
        "matplotlib.transforms.ScaledTranslation": "matplotlib.transforms.ScaledTranslation",
        "matplotlib.transforms.TransformNode": "matplotlib.transforms.TransformNode",
        "matplotlib.transforms.TransformWrapper": "matplotlib.transforms.TransformWrapper",
        "matplotlib._path.affine_transform": "matplotlib.transforms.affine_transform",
        "matplotlib.transforms.blended_transform_factory": "matplotlib.transforms.blended_transform_factory",
        "matplotlib.transforms.composite_transform_factory": "matplotlib.transforms.composite_transform_factory",
        "matplotlib._path.count_bboxes_overlapping_bbox": "matplotlib.transforms.count_bboxes_overlapping_bbox",
        "matplotlib.transforms.interval_contains": "matplotlib.transforms.interval_contains",
        "matplotlib.transforms.interval_contains_open": "matplotlib.transforms.interval_contains_open",
        "matplotlib.transforms.nonsingular": "matplotlib.transforms.nonsingular",
        "matplotlib.transforms.offset_copy": "matplotlib.transforms.offset_copy",
        "matplotlib._path.update_path_extents": "matplotlib.transforms.update_path_extents",
        "matplotlib.contour.ClabelText": "matplotlib.contour.ClabelText",
        "matplotlib.contour.ContourLabeler": "matplotlib.contour.ContourLabeler",
        "matplotlib.contour.ContourSet": "matplotlib.contour.ContourSet",
        "matplotlib.backend_bases.MouseButton": "matplotlib.pyplot.MouseButton",
        "matplotlib.contour.QuadContourSet": "matplotlib.contour.QuadContourSet",
        "matplotlib.text.Text": "matplotlib.pyplot.Text",
        "matplotlib.font_manager.FontManager": "matplotlib.font_manager.FontManager",
        "matplotlib.font_manager.FontProperties": "matplotlib.textpath.FontProperties",
        "matplotlib.font_manager.afmFontProperty": "matplotlib.font_manager.afmFontProperty",
        "matplotlib.font_manager.findSystemFonts": "matplotlib.font_manager.findSystemFonts",
        "matplotlib.font_manager.FontManager.findfont": "matplotlib.font_manager.findfont",
        "matplotlib.ft2font.FT2Font": "matplotlib.ft2font.FT2Font",
        "matplotlib.ft2font.FT2Image": "matplotlib.mathtext.FT2Image",
        "matplotlib._fontconfig_pattern.generate_fontconfig_pattern": "matplotlib.font_manager.generate_fontconfig_pattern",
        "matplotlib.font_manager.get_font": "matplotlib.textpath.get_font",
        "matplotlib.font_manager.FontManager.get_font_names": "matplotlib.font_manager.get_font_names",
        "matplotlib.font_manager.get_fontext_synonyms": "matplotlib.font_manager.get_fontext_synonyms",
        "matplotlib.font_manager.is_opentype_cff_font": "matplotlib.font_manager.is_opentype_cff_font",
        "matplotlib.font_manager.json_dump": "matplotlib.font_manager.json_dump",
        "matplotlib.font_manager.json_load": "matplotlib.font_manager.json_load",
        "matplotlib.font_manager.list_fonts": "matplotlib.font_manager.list_fonts",
        "matplotlib._fontconfig_pattern.parse_fontconfig_pattern": "matplotlib.rcsetup.parse_fontconfig_pattern",
        "matplotlib.font_manager.ttfFontProperty": "matplotlib.font_manager.ttfFontProperty",
        "matplotlib.font_manager.win32FontDirectory": "matplotlib.font_manager.win32FontDirectory",
        "matplotlib.patches.Annulus": "matplotlib.patches.Annulus",
        "matplotlib.patches.Arc": "matplotlib.patches.Arc",
        "matplotlib.patches.Arrow": "matplotlib.pyplot.Arrow",
        "matplotlib.patches.ArrowStyle": "matplotlib.patches.ArrowStyle",
        "matplotlib.patches.BoxStyle": "matplotlib.patches.BoxStyle",
        "matplotlib.patches.Circle": "matplotlib.pyplot.Circle",
        "matplotlib.patches.CirclePolygon": "matplotlib.quiver.CirclePolygon",
        "matplotlib.patches.ConnectionPatch": "matplotlib.patches.ConnectionPatch",
        "matplotlib.patches.ConnectionStyle": "matplotlib.patches.ConnectionStyle",
        "matplotlib.patches.Ellipse": "matplotlib.widgets.Ellipse",
        "matplotlib.patches.FancyArrow": "matplotlib.patches.FancyArrow",
        "matplotlib.patches.FancyArrowPatch": "matplotlib.text.FancyArrowPatch",
        "matplotlib.patches.FancyBboxPatch": "matplotlib.text.FancyBboxPatch",
        "matplotlib.bezier.NonIntersectingPathException": "matplotlib.bezier.NonIntersectingPathException",
        "matplotlib.patches.Patch": "matplotlib.legend.Patch",
        "matplotlib.patches.PathPatch": "matplotlib.patches.PathPatch",
        "matplotlib.patches.Polygon": "matplotlib.pyplot.Polygon",
        "matplotlib.patches.Rectangle": "matplotlib.pyplot.Rectangle",
        "matplotlib.patches.RegularPolygon": "matplotlib.patches.RegularPolygon",
        "matplotlib.patches.Shadow": "matplotlib.legend.Shadow",
        "matplotlib.patches.StepPatch": "matplotlib.legend.StepPatch",
        "matplotlib.patches.Wedge": "matplotlib.patches.Wedge",
        "matplotlib.patches.bbox_artist": "matplotlib.offsetbox.mbbox_artist",
        "matplotlib.patches.draw_bbox": "matplotlib.patches.draw_bbox",
        "matplotlib.bezier.get_cos_sin": "matplotlib.bezier.get_cos_sin",
        "matplotlib.bezier.get_intersection": "matplotlib.bezier.get_intersection",
        "matplotlib.bezier.get_parallels": "matplotlib.bezier.get_parallels",
        "matplotlib.bezier.inside_circle": "matplotlib.bezier.inside_circle",
        "matplotlib.bezier.make_wedged_bezier2": "matplotlib.bezier.make_wedged_bezier2",
        "matplotlib.bezier.split_bezier_intersecting_with_closedpath": "matplotlib.bezier.split_bezier_intersecting_with_closedpath",
        "matplotlib.bezier.split_path_inout": "matplotlib.bezier.split_path_inout",
        "matplotlib.ticker.EngFormatter": "matplotlib.ticker.EngFormatter",
        "matplotlib.ticker.FixedFormatter": "matplotlib.pyplot.FixedFormatter",
        "matplotlib.ticker.FixedLocator": "matplotlib.pyplot.FixedLocator",
        "matplotlib.ticker.FormatStrFormatter": "matplotlib.pyplot.FormatStrFormatter",
        "matplotlib.ticker.Formatter": "matplotlib.pyplot.Formatter",
        "matplotlib.ticker.FuncFormatter": "matplotlib.pyplot.FuncFormatter",
        "matplotlib.ticker.IndexLocator": "matplotlib.pyplot.IndexLocator",
        "matplotlib.ticker.LinearLocator": "matplotlib.pyplot.LinearLocator",
        "matplotlib.ticker.Locator": "matplotlib.pyplot.Locator",
        "matplotlib.ticker.LogFormatter": "matplotlib.pyplot.LogFormatter",
        "matplotlib.ticker.LogFormatterExponent": "matplotlib.pyplot.LogFormatterExponent",
        "matplotlib.ticker.LogFormatterMathtext": "matplotlib.pyplot.LogFormatterMathtext",
        "matplotlib.ticker.MaxNLocator": "matplotlib.pyplot.MaxNLocator",
        "matplotlib.ticker.MultipleLocator": "matplotlib.pyplot.MultipleLocator",
        "matplotlib.ticker.PercentFormatter": "matplotlib.ticker.PercentFormatter",
        "matplotlib.ticker.StrMethodFormatter": "matplotlib.ticker.StrMethodFormatter",
        "matplotlib.ticker.TickHelper": "matplotlib.pyplot.TickHelper",
        "matplotlib.ticker.is_close_to_int": "matplotlib.ticker.is_close_to_int",
        "matplotlib.ticker.is_decade": "matplotlib.ticker.is_decade",
        "matplotlib.ticker.scale_range": "matplotlib.ticker.scale_range",
        "matplotlib.image.AxesImage": "matplotlib.image.AxesImage",
        "matplotlib.image.BboxImage": "matplotlib.offsetbox.BboxImage",
        "matplotlib.backend_bases.FigureCanvasBase": "matplotlib.pyplot.FigureCanvasBase",
        "matplotlib.image.FigureImage": "matplotlib.image.FigureImage",
        "matplotlib.image.NonUniformImage": "matplotlib.image.NonUniformImage",
        "matplotlib.image.PcolorImage": "matplotlib.image.PcolorImage",
        "matplotlib.image.composite_images": "matplotlib.image.composite_images",
        "matplotlib.image.imread": "matplotlib.image.imread",
        "matplotlib.image.imsave": "matplotlib.image.imsave",
        "matplotlib.image.pil_to_array": "matplotlib.image.pil_to_array",
        "matplotlib._image.resample": "matplotlib.image.resample",
        "matplotlib.image.thumbnail": "matplotlib.image.thumbnail",
        "matplotlib.mlab.GaussianKDE": "matplotlib.mlab.GaussianKDE",
        "matplotlib.mlab.cohere": "matplotlib.mlab.cohere",
        "matplotlib.mlab.csd": "matplotlib.mlab.csd",
        "matplotlib.mlab.detrend": "matplotlib.mlab.detrend",
        "matplotlib.mlab.detrend_linear": "matplotlib.mlab.detrend_linear",
        "matplotlib.mlab.detrend_mean": "matplotlib.mlab.detrend_mean",
        "matplotlib.mlab.detrend_none": "matplotlib.mlab.detrend_none",
        "matplotlib.mlab.psd": "matplotlib.mlab.psd",
        "matplotlib.mlab.specgram": "matplotlib.mlab.specgram",
        "matplotlib.mlab.stride_windows": "matplotlib.mlab.stride_windows",
        "matplotlib.mlab.window_hanning": "matplotlib.mlab.window_hanning",
        "matplotlib.mlab.window_none": "matplotlib.mlab.window_none",
        "matplotlib.offsetbox.AnchoredOffsetbox": "matplotlib.offsetbox.AnchoredOffsetbox",
        "matplotlib.legend.DraggableLegend": "matplotlib.legend.DraggableLegend",
        "matplotlib.offsetbox.DraggableOffsetBox": "matplotlib.offsetbox.DraggableOffsetBox",
        "matplotlib.offsetbox.DrawingArea": "matplotlib.offsetbox.DrawingArea",
        "matplotlib.offsetbox.HPacker": "matplotlib.offsetbox.HPacker",
        "matplotlib.legend.Legend": "matplotlib.legend.Legend",
        "matplotlib.offsetbox.TextArea": "matplotlib.offsetbox.TextArea",
        "matplotlib.offsetbox.VPacker": "matplotlib.offsetbox.VPacker",
        "matplotlib.legend_handler.HandlerBase": "matplotlib.legend_handler.HandlerBase",
        "matplotlib.legend_handler.HandlerCircleCollection": "matplotlib.legend_handler.HandlerCircleCollection",
        "matplotlib.legend_handler.HandlerErrorbar": "matplotlib.legend_handler.HandlerErrorbar",
        "matplotlib.legend_handler.HandlerLine2D": "matplotlib.legend_handler.HandlerLine2D",
        "matplotlib.legend_handler.HandlerLine2DCompound": "matplotlib.legend_handler.HandlerLine2DCompound",
        "matplotlib.legend_handler.HandlerLineCollection": "matplotlib.legend_handler.HandlerLineCollection",
        "matplotlib.legend_handler.HandlerNpoints": "matplotlib.legend_handler.HandlerNpoints",
        "matplotlib.legend_handler.HandlerNpointsYoffsets": "matplotlib.legend_handler.HandlerNpointsYoffsets",
        "matplotlib.legend_handler.HandlerPatch": "matplotlib.legend_handler.HandlerPatch",
        "matplotlib.legend_handler.HandlerPathCollection": "matplotlib.legend_handler.HandlerPathCollection",
        "matplotlib.legend_handler.HandlerPolyCollection": "matplotlib.legend_handler.HandlerPolyCollection",
        "matplotlib.legend_handler.HandlerRegularPolyCollection": "matplotlib.legend_handler.HandlerRegularPolyCollection",
        "matplotlib.legend_handler.HandlerStem": "matplotlib.legend_handler.HandlerStem",
        "matplotlib.legend_handler.HandlerStepPatch": "matplotlib.legend_handler.HandlerStepPatch",
        "matplotlib.legend_handler.HandlerTuple": "matplotlib.legend_handler.HandlerTuple",
        "matplotlib.legend_handler.update_from_first_child": "matplotlib.legend_handler.update_from_first_child",
        "matplotlib.offsetbox.AnchoredText": "matplotlib.offsetbox.AnchoredText",
        "matplotlib.offsetbox.AnnotationBbox": "matplotlib.offsetbox.AnnotationBbox",
        "matplotlib.offsetbox.AuxTransformBox": "matplotlib.offsetbox.AuxTransformBox",
        "matplotlib.offsetbox.DraggableAnnotation": "matplotlib.offsetbox.DraggableAnnotation",
        "matplotlib.offsetbox.DraggableBase": "matplotlib.offsetbox.DraggableBase",
        "matplotlib.offsetbox.OffsetBox": "matplotlib.offsetbox.OffsetBox",
        "matplotlib.offsetbox.OffsetImage": "matplotlib.offsetbox.OffsetImage",
        "matplotlib.offsetbox.PackerBase": "matplotlib.offsetbox.PackerBase",
        "matplotlib.offsetbox.PaddedBox": "matplotlib.offsetbox.PaddedBox",
        "matplotlib.offsetbox.bbox_artist": "matplotlib.offsetbox.bbox_artist",
        "matplotlib.text.Annotation": "matplotlib.pyplot.Annotation",
        "matplotlib.text.OffsetFrom": "matplotlib.text.OffsetFrom",
        "matplotlib.textpath.TextPath": "matplotlib.textpath.TextPath",
        "matplotlib.textpath.TextToPath": "matplotlib.textpath.TextToPath",
        "matplotlib.text.get_rotation": "matplotlib.text.get_rotation",
        "matplotlib.cbook.silent_list": "matplotlib.cbook.silent_list",
        "matplotlib.quiver.Barbs": "matplotlib.quiver.Barbs",
        "matplotlib.quiver.Quiver": "matplotlib.quiver.Quiver",
        "matplotlib.quiver.QuiverKey": "matplotlib.quiver.QuiverKey",
        "matplotlib.stackplot.stackplot": "matplotlib.stackplot.stackplot",
        "matplotlib.streamplot.DomainMap": "matplotlib.streamplot.DomainMap",
        "matplotlib.streamplot.Grid": "matplotlib.streamplot.Grid",
        "matplotlib.streamplot.InvalidIndexError": "matplotlib.streamplot.InvalidIndexError",
        "matplotlib.streamplot.OutOfBounds": "matplotlib.streamplot.OutOfBounds",
        "matplotlib.streamplot.StreamMask": "matplotlib.streamplot.StreamMask",
        "matplotlib.streamplot.StreamplotSet": "matplotlib.streamplot.StreamplotSet",
        "matplotlib.streamplot.TerminateTrajectory": "matplotlib.streamplot.TerminateTrajectory",
        "matplotlib.streamplot.interpgrid": "matplotlib.streamplot.interpgrid",
        "matplotlib.streamplot.streamplot": "matplotlib.streamplot.streamplot",
        "matplotlib.table.Cell": "matplotlib.table.CustomCell",
        "matplotlib.table.Table": "matplotlib.table.Table",
        "matplotlib.table.table": "matplotlib.table.table",
        "matplotlib.tri._triinterpolate.CubicTriInterpolator": "matplotlib.tri.CubicTriInterpolator",
        "matplotlib.tri._triinterpolate.LinearTriInterpolator": "matplotlib.tri.LinearTriInterpolator",
        "matplotlib.tri._trifinder.TrapezoidMapTriFinder": "matplotlib.tri.TrapezoidMapTriFinder",
        "matplotlib.tri._tritools.TriAnalyzer": "matplotlib.tri.TriAnalyzer",
        "matplotlib.tri._tricontour.TriContourSet": "matplotlib.tri.TriContourSet",
        "matplotlib.tri._trifinder.TriFinder": "matplotlib.tri.TriFinder",
        "matplotlib.tri._triinterpolate.TriInterpolator": "matplotlib.tri.TriInterpolator",
        "matplotlib.tri._trirefine.TriRefiner": "matplotlib.tri.TriRefiner",
        "matplotlib.tri._triangulation.Triangulation": "matplotlib.tri.Triangulation",
        "matplotlib.tri._trirefine.UniformTriRefiner": "matplotlib.tri.UniformTriRefiner",
        "matplotlib.tri._tricontour.tricontour": "matplotlib.tri.tricontour",
        "matplotlib.tri._tricontour.tricontourf": "matplotlib.tri.tricontourf",
        "matplotlib.tri._tripcolor.tripcolor": "matplotlib.tri.tripcolor",
        "matplotlib.tri._triplot.triplot": "matplotlib.tri.triplot",
        "matplotlib.units.AxisInfo": "matplotlib.units.AxisInfo",
        "matplotlib.units.ConversionError": "matplotlib.units.ConversionError",
        "matplotlib.units.ConversionInterface": "matplotlib.units.ConversionInterface",
        "matplotlib.units.DecimalConverter": "matplotlib.units.DecimalConverter",
        "matplotlib.units.Registry": "matplotlib.units.Registry",
        "matplotlib.axes.subplot_class_factory": "matplotlib.axes.subplot_class_factory",
        "matplotlib.axis.Axis": "matplotlib.axis.Axis",
        "matplotlib.axis.Tick": "matplotlib.axis.Tick",
        "matplotlib.axis.Ticker": "matplotlib.axis.Ticker",
        "matplotlib.axis.XAxis": "matplotlib.axis.XAxis",
        "matplotlib.axis.XTick": "matplotlib.axis.XTick",
        "matplotlib.axis.YAxis": "matplotlib.axis.YAxis",
        "matplotlib.axis.YTick": "matplotlib.axis.YTick",
        "matplotlib.backend_bases.CloseEvent": "matplotlib.backend_bases.CloseEvent",
        "matplotlib.backend_bases.DrawEvent": "matplotlib.figure.DrawEvent",
        "matplotlib.backend_bases.Event": "matplotlib.backend_bases.Event",
        "matplotlib.backend_bases.FigureManagerBase": "matplotlib.pyplot.FigureManagerBase",
        "matplotlib._pylab_helpers.Gcf": "matplotlib.backend_tools.Gcf",
        "matplotlib.backend_bases.GraphicsContextBase": "matplotlib.backend_bases.GraphicsContextBase",
        "matplotlib.backend_bases.KeyEvent": "matplotlib.backend_bases.KeyEvent",
        "matplotlib.backend_bases.LocationEvent": "matplotlib.backend_bases.LocationEvent",
        "matplotlib.backend_bases.MouseEvent": "matplotlib.backend_bases.MouseEvent",
        "matplotlib.backend_bases.NavigationToolbar2": "matplotlib.backend_bases.NavigationToolbar2",
        "matplotlib.backend_bases.NonGuiException": "matplotlib.figure.NonGuiException",
        "matplotlib.backend_bases.PickEvent": "matplotlib.backend_bases.PickEvent",
        "matplotlib.backend_bases.RendererBase": "matplotlib.backend_bases.RendererBase",
        "matplotlib.backend_bases.ResizeEvent": "matplotlib.backend_bases.ResizeEvent",
        "matplotlib.backend_bases.ShowBase": "matplotlib.backend_bases.ShowBase",
        "matplotlib.texmanager.TexManager": "matplotlib.textpath.TexManager",
        "matplotlib.backend_bases.TimerBase": "matplotlib.backend_bases.TimerBase",
        "matplotlib.backend_bases.ToolContainerBase": "matplotlib.backend_bases.ToolContainerBase",
        "matplotlib.backend_managers.ToolManager": "matplotlib.backend_managers.ToolManager",
        "matplotlib.backend_bases.button_press_handler": "matplotlib.backend_bases.button_press_handler",
        "matplotlib.backend_tools.Cursors": "matplotlib.backend_tools.cursors",
        "matplotlib.get_backend": "matplotlib.get_backend",
        "matplotlib.backend_bases.get_registered_canvas_class": "matplotlib.backend_bases.get_registered_canvas_class",
        "matplotlib.is_interactive": "matplotlib.is_interactive",
        "matplotlib.backend_bases.key_press_handler": "matplotlib.backend_bases.key_press_handler",
        "matplotlib.backend_bases.register_backend": "matplotlib.backend_bases.register_backend",
        "matplotlib.backend_tools.AxisScaleBase": "matplotlib.backend_tools.AxisScaleBase",
        "matplotlib.backend_tools.ConfigureSubplotsBase": "matplotlib.backend_tools.ConfigureSubplotsBase",
        "matplotlib.backend_tools.RubberbandBase": "matplotlib.backend_tools.RubberbandBase",
        "matplotlib.backend_tools.SaveFigureBase": "matplotlib.backend_tools.SaveFigureBase",
        "matplotlib.backend_tools.ToolBack": "matplotlib.backend_tools.ToolBack",
        "matplotlib.backend_tools.ToolBase": "matplotlib.backend_tools.ToolBase",
        "matplotlib.backend_tools.ToolCopyToClipboardBase": "matplotlib.backend_tools.ToolCopyToClipboardBase",
        "matplotlib.backend_tools.ToolCursorPosition": "matplotlib.backend_tools.ToolCursorPosition",
        "matplotlib.backend_tools.ToolForward": "matplotlib.backend_tools.ToolForward",
        "matplotlib.backend_tools.ToolFullScreen": "matplotlib.backend_tools.ToolFullScreen",
        "matplotlib.backend_tools.ToolGrid": "matplotlib.backend_tools.ToolGrid",
        "matplotlib.backend_tools.ToolHelpBase": "matplotlib.backend_tools.ToolHelpBase",
        "matplotlib.backend_tools.ToolHome": "matplotlib.backend_tools.ToolHome",
        "matplotlib.backend_tools.ToolMinorGrid": "matplotlib.backend_tools.ToolMinorGrid",
        "matplotlib.backend_tools.ToolPan": "matplotlib.backend_tools.ToolPan",
        "matplotlib.backend_tools.ToolQuit": "matplotlib.backend_tools.ToolQuit",
        "matplotlib.backend_tools.ToolQuitAll": "matplotlib.backend_tools.ToolQuitAll",
        "matplotlib.backend_tools.ToolSetCursor": "matplotlib.backend_tools.ToolSetCursor",
        "matplotlib.backend_tools.ToolToggleBase": "matplotlib.backend_tools.ToolToggleBase",
        "matplotlib.backend_tools.ToolViewsPositions": "matplotlib.backend_tools.ToolViewsPositions",
        "matplotlib.backend_tools.ToolXScale": "matplotlib.backend_tools.ToolXScale",
        "matplotlib.backend_tools.ToolYScale": "matplotlib.backend_tools.ToolYScale",
        "matplotlib.backend_tools.ToolZoom": "matplotlib.backend_tools.ToolZoom",
        "matplotlib.backend_tools.ViewsPositionsBase": "matplotlib.backend_tools.ViewsPositionsBase",
        "matplotlib.backend_tools.ZoomPanBase": "matplotlib.backend_tools.ZoomPanBase",
        "matplotlib.backend_tools.add_tools_to_container": "matplotlib.backend_tools.add_tools_to_container",
        "matplotlib.backend_tools.add_tools_to_manager": "matplotlib.backend_tools.add_tools_to_manager",
        "matplotlib.widgets.AxesWidget": "matplotlib.widgets.AxesWidget",
        "matplotlib.widgets.Button": "matplotlib.pyplot.Button",
        "matplotlib.widgets.CheckButtons": "matplotlib.widgets.CheckButtons",
        "matplotlib.widgets.Cursor": "matplotlib.widgets.Cursor",
        "matplotlib.widgets.EllipseSelector": "matplotlib.widgets.EllipseSelector",
        "matplotlib.widgets.Lasso": "matplotlib.widgets.Lasso",
        "matplotlib.widgets.LassoSelector": "matplotlib.widgets.LassoSelector",
        "matplotlib.widgets.LockDraw": "matplotlib.widgets.LockDraw",
        "matplotlib.widgets.MultiCursor": "matplotlib.widgets.MultiCursor",
        "matplotlib.widgets.PolygonSelector": "matplotlib.widgets.PolygonSelector",
        "matplotlib.widgets.RadioButtons": "matplotlib.widgets.RadioButtons",
        "matplotlib.widgets.RangeSlider": "matplotlib.widgets.RangeSlider",
        "matplotlib.widgets.RectangleSelector": "matplotlib.widgets.RectangleSelector",
        "matplotlib.widgets.Slider": "matplotlib.pyplot.Slider",
        "matplotlib.widgets.SliderBase": "matplotlib.widgets.SliderBase",
        "matplotlib.widgets.SpanSelector": "matplotlib.widgets.SpanSelector",
        "matplotlib.widgets.SubplotTool": "matplotlib.widgets.SubplotTool",
        "matplotlib.widgets.TextBox": "matplotlib.widgets.TextBox",
        "matplotlib.widgets.ToolHandles": "matplotlib.widgets.ToolHandles",
        "matplotlib.widgets.ToolLineHandles": "matplotlib.widgets.ToolLineHandles",
        "matplotlib.widgets.Widget": "matplotlib.pyplot.Widget",
        "matplotlib.backend_managers.ToolEvent": "matplotlib.backend_managers.ToolEvent",
        "matplotlib.backend_managers.ToolManagerMessageEvent": "matplotlib.backend_managers.ToolManagerMessageEvent",
        "matplotlib.backend_managers.ToolTriggerEvent": "matplotlib.backend_managers.ToolTriggerEvent",
        "matplotlib.bezier.check_if_parallel": "matplotlib.bezier.check_if_parallel",
        "matplotlib.bezier.find_bezier_t_intersecting_with_closedpath": "matplotlib.bezier.find_bezier_t_intersecting_with_closedpath",
        "matplotlib.bezier.find_control_points": "matplotlib.bezier.find_control_points",
        "matplotlib.bezier.get_normal_points": "matplotlib.bezier.get_normal_points",
        "matplotlib.bezier.split_de_casteljau": "matplotlib.bezier.split_de_casteljau",
        "matplotlib.category.StrCategoryConverter": "matplotlib.category.StrCategoryConverter",
        "matplotlib.category.StrCategoryFormatter": "matplotlib.category.StrCategoryFormatter",
        "matplotlib.category.StrCategoryLocator": "matplotlib.category.StrCategoryLocator",
        "matplotlib.category.UnitData": "matplotlib.category.UnitData",
        "matplotlib.checkdep_usetex": "matplotlib.checkdep_usetex",
        "matplotlib.colorbar.Colorbar": "matplotlib.colorbar.ColorbarBase",
        "matplotlib.colorbar.make_axes": "matplotlib.colorbar.make_axes",
        "matplotlib.colorbar.make_axes_gridspec": "matplotlib.colorbar.make_axes_gridspec",
        "matplotlib.spines.Spine": "matplotlib.projections.polar.Spine",
        "matplotlib.spines.Spines": "matplotlib.spines.Spines",
        "matplotlib.spines.SpinesProxy": "matplotlib.spines.SpinesProxy",
        "matplotlib.container.Container": "matplotlib.container.Container",
        "matplotlib.rcsetup.cycler": "matplotlib.cycler",
        "matplotlib.dates.AutoDateFormatter": "matplotlib.dates.AutoDateFormatter",
        "matplotlib.dates.AutoDateLocator": "matplotlib.dates.AutoDateLocator",
        "matplotlib.dates.ConciseDateConverter": "matplotlib.dates.ConciseDateConverter",
        "matplotlib.dates.ConciseDateFormatter": "matplotlib.dates.ConciseDateFormatter",
        "matplotlib.dates.DateConverter": "matplotlib.dates.DateConverter",
        "matplotlib.dates.DateFormatter": "matplotlib.dates.DateFormatter",
        "matplotlib.dates.DateLocator": "matplotlib.dates.DateLocator",
        "matplotlib.dates.DayLocator": "matplotlib.dates.DayLocator",
        "matplotlib.dates.HourLocator": "matplotlib.dates.HourLocator",
        "matplotlib.dates.MicrosecondLocator": "matplotlib.dates.MicrosecondLocator",
        "matplotlib.dates.MinuteLocator": "matplotlib.dates.MinuteLocator",
        "matplotlib.dates.MonthLocator": "matplotlib.dates.MonthLocator",
        "matplotlib.dates.RRuleLocator": "matplotlib.dates.RRuleLocator",
        "matplotlib.dates.SecondLocator": "matplotlib.dates.SecondLocator",
        "matplotlib.dates.WeekdayLocator": "matplotlib.dates.WeekdayLocator",
        "matplotlib.dates.YearLocator": "matplotlib.dates.YearLocator",
        "matplotlib.dates.date2num": "matplotlib.dates.date2num",
        "matplotlib.dates.date_ticker_factory": "matplotlib.dates.date_ticker_factory",
        "matplotlib.dates.datestr2num": "matplotlib.dates.datestr2num",
        "matplotlib.dates.drange": "matplotlib.dates.drange",
        "matplotlib.dates.get_epoch": "matplotlib.dates.get_epoch",
        "matplotlib.dates.julian2num": "matplotlib.dates.julian2num",
        "matplotlib.dates.num2date": "matplotlib.dates.num2date",
        "matplotlib.dates.num2julian": "matplotlib.dates.num2julian",
        "matplotlib.dates.num2timedelta": "matplotlib.dates.num2timedelta",
        "matplotlib.dates.rrulewrapper": "matplotlib.dates.rrulewrapper",
        "matplotlib.dates.set_epoch": "matplotlib.dates.set_epoch",
        "matplotlib.dviread.Box": "matplotlib.dviread.Box",
        "matplotlib.dviread.Dvi": "matplotlib.dviread.Dvi",
        "matplotlib.dviread.DviFont": "matplotlib.dviread.DviFont",
        "matplotlib.dviread.Page": "matplotlib.dviread.Page",
        "matplotlib.dviread.PsFont": "matplotlib.dviread.PsFont",
        "matplotlib.dviread.PsfontsMap": "matplotlib.dviread.PsfontsMap",
        "matplotlib.dviread.Text": "matplotlib.dviread.Text",
        "matplotlib.dviread.Tfm": "matplotlib.dviread.Tfm",
        "matplotlib.dviread.Vf": "matplotlib.dviread.Vf",
        "matplotlib.dviread.find_tex_file": "matplotlib.dviread.find_tex_file",
        "matplotlib.layout_engine.ConstrainedLayoutEngine": "matplotlib.layout_engine.ConstrainedLayoutEngine",
        "matplotlib.figure.Figure": "matplotlib.pyplot.Figure",
        "matplotlib.figure.FigureBase": "matplotlib.pyplot.FigureBase",
        "matplotlib.gridspec.GridSpec": "matplotlib.pyplot.GridSpec",
        "matplotlib.layout_engine.LayoutEngine": "matplotlib.layout_engine.LayoutEngine",
        "matplotlib.layout_engine.PlaceHolderLayoutEngine": "matplotlib.layout_engine.PlaceHolderLayoutEngine",
        "matplotlib.figure.SubFigure": "matplotlib.figure.SubFigure",
        "matplotlib.figure.SubplotParams": "matplotlib.figure.SubplotParams",
        "matplotlib.layout_engine.TightLayoutEngine": "matplotlib.layout_engine.TightLayoutEngine",
        "matplotlib.figure.figaspect": "matplotlib.pyplot.figaspect",
        "matplotlib.projections.geo.AitoffAxes": "matplotlib.projections.geo.AitoffAxes",
        "matplotlib.projections.geo.HammerAxes": "matplotlib.projections.geo.HammerAxes",
        "matplotlib.projections.geo.LambertAxes": "matplotlib.projections.geo.LambertAxes",
        "matplotlib.projections.geo.MollweideAxes": "matplotlib.projections.geo.MollweideAxes",
        "matplotlib.projections.polar.PolarAxes": "matplotlib.pyplot.PolarAxes",
        "matplotlib.projections.ProjectionRegistry": "matplotlib.projections.ProjectionRegistry",
        "matplotlib.projections.geo.GeoAxes": "matplotlib.projections.geo.GeoAxes",
        "matplotlib.projections.get_projection_class": "matplotlib.projections.get_projection_class",
        "matplotlib.projections.ProjectionRegistry.get_projection_names": "matplotlib.projections.get_projection_names",
        "matplotlib.projections.polar.InvertedPolarTransform": "matplotlib.projections.polar.InvertedPolarTransform",
        "matplotlib.projections.polar.PolarAffine": "matplotlib.projections.polar.PolarAffine",
        "matplotlib.projections.polar.PolarTransform": "matplotlib.projections.polar.PolarTransform",
        "matplotlib.projections.polar.RadialAxis": "matplotlib.projections.polar.RadialAxis",
        "matplotlib.projections.polar.RadialLocator": "matplotlib.projections.polar.RadialLocator",
        "matplotlib.projections.polar.RadialTick": "matplotlib.projections.polar.RadialTick",
        "matplotlib.projections.polar.ThetaAxis": "matplotlib.projections.polar.ThetaAxis",
        "matplotlib.projections.polar.ThetaFormatter": "matplotlib.projections.polar.ThetaFormatter",
        "matplotlib.projections.polar.ThetaLocator": "matplotlib.projections.polar.ThetaLocator",
        "matplotlib.projections.polar.ThetaTick": "matplotlib.projections.polar.ThetaTick",
        "matplotlib.projections.register_projection": "matplotlib.projections.register_projection",
        "matplotlib.get_cachedir": "matplotlib.get_cachedir",
        "matplotlib.get_configdir": "matplotlib.get_configdir",
        "matplotlib.get_data_path": "matplotlib.get_data_path",
        "matplotlib.gridspec.GridSpecBase": "matplotlib.gridspec.GridSpecBase",
        "matplotlib.gridspec.GridSpecFromSubplotSpec": "matplotlib.gridspec.GridSpecFromSubplotSpec",
        "matplotlib.gridspec.SubplotSpec": "matplotlib.pyplot.SubplotSpec",
        "matplotlib.interactive": "matplotlib.interactive",
        "matplotlib._constrained_layout.do_constrained_layout": "matplotlib.layout_engine.do_constrained_layout",
        "matplotlib._tight_layout.get_subplotspec_list": "matplotlib.layout_engine.get_subplotspec_list",
        "matplotlib._tight_layout.get_tight_layout_figure": "matplotlib.layout_engine.get_tight_layout_figure",
        "matplotlib.mathtext.MathTextParser": "matplotlib.textpath.MathTextParser",
        "matplotlib.mathtext.MathTextWarning": "matplotlib.mathtext.MathTextWarning",
        "matplotlib.mathtext.MathtextBackend": "matplotlib.mathtext.MathtextBackend",
        "matplotlib.mathtext.MathtextBackendAgg": "matplotlib.mathtext.MathtextBackendAgg",
        "matplotlib.mathtext.MathtextBackendPath": "matplotlib.mathtext.MathtextBackendPath",
        "matplotlib.mathtext.RasterParse": "matplotlib.mathtext.RasterParse",
        "matplotlib.mathtext.VectorParse": "matplotlib.mathtext.VectorParse",
        "matplotlib.mathtext.get_unicode_index": "matplotlib.mathtext.get_unicode_index",
        "matplotlib.mathtext.math_to_image": "matplotlib.mathtext.math_to_image",
        "matplotlib.matplotlib_fname": "matplotlib.matplotlib_fname",
        "matplotlib.pyplot.acorr": "matplotlib.pyplot.acorr",
        "matplotlib.pyplot.angle_spectrum": "matplotlib.pyplot.angle_spectrum",
        "matplotlib.pyplot.annotate": "matplotlib.pyplot.annotate",
        "matplotlib.pyplot.arrow": "matplotlib.pyplot.arrow",
        "matplotlib.pyplot.autoscale": "matplotlib.pyplot.autoscale",
        "matplotlib.pyplot.autumn": "matplotlib.pyplot.autumn",
        "matplotlib.pyplot.axes": "matplotlib.pyplot.axes",
        "matplotlib.pyplot.axhline": "matplotlib.pyplot.axhline",
        "matplotlib.pyplot.axhspan": "matplotlib.pyplot.axhspan",
        "matplotlib.pyplot.axis": "matplotlib.pyplot.axis",
        "matplotlib.pyplot.axline": "matplotlib.pyplot.axline",
        "matplotlib.pyplot.axvline": "matplotlib.pyplot.axvline",
        "matplotlib.pyplot.axvspan": "matplotlib.pyplot.axvspan",
        "matplotlib.pyplot.bar": "matplotlib.pyplot.bar",
        "matplotlib.pyplot.bar_label": "matplotlib.pyplot.bar_label",
        "matplotlib.pyplot.barbs": "matplotlib.pyplot.barbs",
        "matplotlib.pyplot.barh": "matplotlib.pyplot.barh",
        "matplotlib.pyplot.bone": "matplotlib.pyplot.bone",
        "matplotlib.pyplot.box": "matplotlib.pyplot.box",
        "matplotlib.pyplot.boxplot": "matplotlib.pyplot.boxplot",
        "matplotlib.pyplot.broken_barh": "matplotlib.pyplot.broken_barh",
        "matplotlib.pyplot.cla": "matplotlib.pyplot.cla",
        "matplotlib.pyplot.clabel": "matplotlib.pyplot.clabel",
        "matplotlib.pyplot.clf": "matplotlib.pyplot.clf",
        "matplotlib.pyplot.clim": "matplotlib.pyplot.clim",
        "matplotlib.pyplot.close": "matplotlib.pyplot.close",
        "matplotlib.pyplot.cohere": "matplotlib.pyplot.cohere",
        "matplotlib.pyplot.colorbar": "matplotlib.pyplot.colorbar",
        "matplotlib.pyplot.connect": "matplotlib.pyplot.connect",
        "matplotlib.pyplot.contour": "matplotlib.pyplot.contour",
        "matplotlib.pyplot.contourf": "matplotlib.pyplot.contourf",
        "matplotlib.pyplot.cool": "matplotlib.pyplot.cool",
        "matplotlib.pyplot.copper": "matplotlib.pyplot.copper",
        "matplotlib.pyplot.csd": "matplotlib.pyplot.csd",
        "matplotlib.pyplot.delaxes": "matplotlib.pyplot.delaxes",
        "matplotlib.pyplot.disconnect": "matplotlib.pyplot.disconnect",
        "matplotlib.pyplot.draw": "matplotlib.pyplot.draw",
        "matplotlib._pylab_helpers.Gcf.draw_all": "matplotlib.pyplot.draw_all",
        "matplotlib.pyplot.draw_if_interactive": "matplotlib.pyplot.draw_if_interactive",
        "matplotlib.pyplot.errorbar": "matplotlib.pyplot.errorbar",
        "matplotlib.pyplot.eventplot": "matplotlib.pyplot.eventplot",
        "matplotlib.pyplot.figimage": "matplotlib.pyplot.figimage",
        "matplotlib.pyplot.figlegend": "matplotlib.pyplot.figlegend",
        "matplotlib.pyplot.fignum_exists": "matplotlib.pyplot.fignum_exists",
        "matplotlib.pyplot.figtext": "matplotlib.pyplot.figtext",
        "matplotlib.pyplot.figure": "matplotlib.pyplot.figure",
        "matplotlib.pyplot.fill": "matplotlib.pyplot.fill",
        "matplotlib.pyplot.fill_between": "matplotlib.pyplot.fill_between",
        "matplotlib.pyplot.fill_betweenx": "matplotlib.pyplot.fill_betweenx",
        "matplotlib.pyplot.findobj": "matplotlib.pyplot.findobj",
        "matplotlib.pyplot.flag": "matplotlib.pyplot.flag",
        "matplotlib.pyplot.gca": "matplotlib.pyplot.gca",
        "matplotlib.pyplot.gcf": "matplotlib.pyplot.gcf",
        "matplotlib.pyplot.gci": "matplotlib.pyplot.gci",
        "matplotlib.pyplot.get": "matplotlib.pyplot.get",
        "matplotlib.pyplot.get_cmap": "matplotlib.pyplot.get_cmap",
        "matplotlib.pyplot.get_current_fig_manager": "matplotlib.pyplot.get_current_fig_manager",
        "matplotlib.pyplot.get_figlabels": "matplotlib.pyplot.get_figlabels",
        "matplotlib.pyplot.get_fignums": "matplotlib.pyplot.get_fignums",
        "matplotlib.pyplot.get_plot_commands": "matplotlib.pyplot.get_plot_commands",
        "matplotlib.pyplot.getp": "matplotlib.pyplot.getp",
        "matplotlib.pyplot.ginput": "matplotlib.pyplot.ginput",
        "matplotlib.pyplot.gray": "matplotlib.pyplot.gray",
        "matplotlib.pyplot.grid": "matplotlib.pyplot.grid",
        "matplotlib.pyplot.hexbin": "matplotlib.pyplot.hexbin",
        "matplotlib.pyplot.hist": "matplotlib.pyplot.hist",
        "matplotlib.pyplot.hist2d": "matplotlib.pyplot.hist2d",
        "matplotlib.pyplot.hlines": "matplotlib.pyplot.hlines",
        "matplotlib.pyplot.hot": "matplotlib.pyplot.hot",
        "matplotlib.pyplot.hsv": "matplotlib.pyplot.hsv",
        "matplotlib.pyplot.imread": "matplotlib.pyplot.imread",
        "matplotlib.pyplot.imsave": "matplotlib.pyplot.imsave",
        "matplotlib.pyplot.imshow": "matplotlib.pyplot.imshow",
        "matplotlib.pyplot.inferno": "matplotlib.pyplot.inferno",
        "matplotlib.pyplot.install_repl_displayhook": "matplotlib.pyplot.install_repl_displayhook",
        "matplotlib.pyplot.ioff": "matplotlib.pyplot.ioff",
        "matplotlib.pyplot.ion": "matplotlib.pyplot.ion",
        "matplotlib.pyplot.isinteractive": "matplotlib.pyplot.isinteractive",
        "matplotlib.pyplot.jet": "matplotlib.pyplot.jet",
        "matplotlib.pyplot.legend": "matplotlib.pyplot.legend",
        "matplotlib.pyplot.locator_params": "matplotlib.pyplot.locator_params",
        "matplotlib.pyplot.loglog": "matplotlib.pyplot.loglog",
        "matplotlib.pyplot.magma": "matplotlib.pyplot.magma",
        "matplotlib.pyplot.magnitude_spectrum": "matplotlib.pyplot.magnitude_spectrum",
        "matplotlib.pyplot.margins": "matplotlib.pyplot.margins",
        "matplotlib.pyplot.matshow": "matplotlib.pyplot.matshow",
        "matplotlib.pyplot.minorticks_off": "matplotlib.pyplot.minorticks_off",
        "matplotlib.pyplot.minorticks_on": "matplotlib.pyplot.minorticks_on",
        "matplotlib.pyplot.new_figure_manager": "matplotlib.pyplot.new_figure_manager",
        "matplotlib.pyplot.nipy_spectral": "matplotlib.pyplot.nipy_spectral",
        "matplotlib.pyplot.pause": "matplotlib.pyplot.pause",
        "matplotlib.pyplot.pcolor": "matplotlib.pyplot.pcolor",
        "matplotlib.pyplot.pcolormesh": "matplotlib.pyplot.pcolormesh",
        "matplotlib.pyplot.phase_spectrum": "matplotlib.pyplot.phase_spectrum",
        "matplotlib.pyplot.pie": "matplotlib.pyplot.pie",
        "matplotlib.pyplot.pink": "matplotlib.pyplot.pink",
        "matplotlib.pyplot.plasma": "matplotlib.pyplot.plasma",
        "matplotlib.pyplot.plot": "matplotlib.pyplot.plot",
        "matplotlib.pyplot.plot_date": "matplotlib.pyplot.plot_date",
        "matplotlib.pyplot.polar": "matplotlib.pyplot.polar",
        "matplotlib.pyplot.prism": "matplotlib.pyplot.prism",
        "matplotlib.pyplot.psd": "matplotlib.pyplot.psd",
        "matplotlib.pyplot.quiver": "matplotlib.pyplot.quiver",
        "matplotlib.pyplot.quiverkey": "matplotlib.pyplot.quiverkey",
        "matplotlib.pyplot.rc": "matplotlib.pyplot.rc",
        "matplotlib.pyplot.rc_context": "matplotlib.pyplot.rc_context",
        "matplotlib.pyplot.rcdefaults": "matplotlib.pyplot.rcdefaults",
        "matplotlib.rcsetup.ValidateInStrings": "matplotlib.rcsetup.ValidateInStrings",
        "matplotlib.rcsetup.validate_any": "matplotlib.rcsetup.validate_any",
        "matplotlib.rcsetup._listify_validator.<locals>.validate_anylist": "matplotlib.rcsetup.validate_anylist",
        "matplotlib.rcsetup.validate_aspect": "matplotlib.rcsetup.validate_aspect",
        "matplotlib.rcsetup.validate_axisbelow": "matplotlib.rcsetup.validate_axisbelow",
        "matplotlib.rcsetup.validate_backend": "matplotlib.validate_backend",
        "matplotlib.rcsetup.validate_bbox": "matplotlib.rcsetup.validate_bbox",
        "matplotlib.rcsetup.validate_bool": "matplotlib.rcsetup.validate_bool",
        "matplotlib.rcsetup.validate_color": "matplotlib.rcsetup.validate_color",
        "matplotlib.rcsetup.validate_color_for_prop_cycle": "matplotlib.rcsetup.validate_color_for_prop_cycle",
        "matplotlib.rcsetup.validate_color_or_auto": "matplotlib.rcsetup.validate_color_or_auto",
        "matplotlib.rcsetup.validate_color_or_inherit": "matplotlib.rcsetup.validate_color_or_inherit",
        "matplotlib.rcsetup._listify_validator.<locals>.validate_colorlist": "matplotlib.rcsetup.validate_colorlist",
        "matplotlib.rcsetup.validate_cycler": "matplotlib.rcsetup.validate_cycler",
        "matplotlib.rcsetup._listify_validator.<locals>.validate_floatlistlist": "matplotlib.rcsetup.validate_dashlist",
        "matplotlib.rcsetup.validate_dpi": "matplotlib.rcsetup.validate_dpi",
        "matplotlib.rcsetup._listify_validator.<locals>.ValidateInStringsList": "matplotlib.rcsetup.validate_fillstylelist",
        "matplotlib.rcsetup._make_type_validator.<locals>.validate_float": "matplotlib.rcsetup.validate_float",
        "matplotlib.rcsetup._make_type_validator.<locals>.validate_float_or_None": "matplotlib.rcsetup.validate_float_or_None",
        "matplotlib.rcsetup._listify_validator.<locals>.validate_floatlist": "matplotlib.rcsetup.validate_floatlist",
        "matplotlib.rcsetup.validate_font_properties": "matplotlib.rcsetup.validate_font_properties",
        "matplotlib.rcsetup.validate_fontsize": "matplotlib.rcsetup.validate_fontsize",
        "matplotlib.rcsetup.validate_fontsize_None": "matplotlib.rcsetup.validate_fontsize_None",
        "matplotlib.rcsetup._listify_validator.<locals>.validate_fontsizelist": "matplotlib.rcsetup.validate_fontsizelist",
        "matplotlib.rcsetup.validate_fontstretch": "matplotlib.rcsetup.validate_fontstretch",
        "matplotlib.rcsetup.validate_fonttype": "matplotlib.rcsetup.validate_fonttype",
        "matplotlib.rcsetup.validate_fontweight": "matplotlib.rcsetup.validate_fontweight",
        "matplotlib.rcsetup.validate_hatch": "matplotlib.rcsetup.validate_hatch",
        "matplotlib.rcsetup._listify_validator.<locals>.validate_hatchlist": "matplotlib.rcsetup.validate_hatchlist",
        "matplotlib.rcsetup.validate_hist_bins": "matplotlib.rcsetup.validate_hist_bins",
        "matplotlib.rcsetup._make_type_validator.<locals>.validate_int": "matplotlib.rcsetup.validate_int",
        "matplotlib.rcsetup._make_type_validator.<locals>.validate_int_or_None": "matplotlib.rcsetup.validate_int_or_None",
        "matplotlib.rcsetup.validate_markevery": "matplotlib.rcsetup.validate_markevery",
        "matplotlib.rcsetup._listify_validator.<locals>.validate_markeverylist": "matplotlib.rcsetup.validate_markeverylist",
        "matplotlib.rcsetup.validate_ps_distiller": "matplotlib.rcsetup.validate_ps_distiller",
        "matplotlib.rcsetup.validate_sketch": "matplotlib.rcsetup.validate_sketch",
        "matplotlib.rcsetup._make_type_validator.<locals>.validate_str": "matplotlib.rcsetup.validate_string",
        "matplotlib.rcsetup._make_type_validator.<locals>.validate_str_or_None": "matplotlib.rcsetup.validate_string_or_None",
        "matplotlib.rcsetup._listify_validator.<locals>.validate_strlist": "matplotlib.rcsetup.validate_stringlist",
        "matplotlib.rcsetup.validate_whiskers": "matplotlib.rcsetup.validate_whiskers",
        "matplotlib.pyplot.rgrids": "matplotlib.pyplot.rgrids",
        "matplotlib.pyplot.savefig": "matplotlib.pyplot.savefig",
        "matplotlib.pyplot.sca": "matplotlib.pyplot.sca",
        "matplotlib.pyplot.scatter": "matplotlib.pyplot.scatter",
        "matplotlib.pyplot.sci": "matplotlib.pyplot.sci",
        "matplotlib.pyplot.semilogx": "matplotlib.pyplot.semilogx",
        "matplotlib.pyplot.semilogy": "matplotlib.pyplot.semilogy",
        "matplotlib.pyplot.set_cmap": "matplotlib.pyplot.set_cmap",
        "matplotlib.pyplot.set_loglevel": "matplotlib.pyplot.set_loglevel",
        "matplotlib.pyplot.setp": "matplotlib.pyplot.setp",
        "matplotlib.pyplot.show": "matplotlib.pyplot.show",
        "matplotlib.pyplot.specgram": "matplotlib.pyplot.specgram",
        "matplotlib.pyplot.spring": "matplotlib.pyplot.spring",
        "matplotlib.pyplot.spy": "matplotlib.pyplot.spy",
        "matplotlib.pyplot.stackplot": "matplotlib.pyplot.stackplot",
        "matplotlib.pyplot.stairs": "matplotlib.pyplot.stairs",
        "matplotlib.pyplot.stem": "matplotlib.pyplot.stem",
        "matplotlib.pyplot.step": "matplotlib.pyplot.step",
        "matplotlib.pyplot.streamplot": "matplotlib.pyplot.streamplot",
        "matplotlib.style.core.context": "matplotlib.style.core.context",
        "matplotlib.style.core.read_style_directory": "matplotlib.style.core.read_style_directory",
        "matplotlib.style.core.reload_library": "matplotlib.style.reload_library",
        "matplotlib.style.core.update_nested_dict": "matplotlib.style.core.update_nested_dict",
        "matplotlib.style.core.update_user_library": "matplotlib.style.core.update_user_library",
        "matplotlib.style.core.use": "matplotlib.style.use",
        "matplotlib.pyplot.subplot": "matplotlib.pyplot.subplot",
        "matplotlib.pyplot.subplot2grid": "matplotlib.pyplot.subplot2grid",
        "matplotlib.pyplot.subplot_mosaic": "matplotlib.pyplot.subplot_mosaic",
        "matplotlib.pyplot.subplot_tool": "matplotlib.pyplot.subplot_tool",
        "matplotlib.pyplot.subplots": "matplotlib.pyplot.subplots",
        "matplotlib.pyplot.subplots_adjust": "matplotlib.pyplot.subplots_adjust",
        "matplotlib.pyplot.summer": "matplotlib.pyplot.summer",
        "matplotlib.pyplot.suptitle": "matplotlib.pyplot.suptitle",
        "matplotlib.pyplot.switch_backend": "matplotlib.pyplot.switch_backend",
        "matplotlib.pyplot.table": "matplotlib.pyplot.table",
        "matplotlib.pyplot.text": "matplotlib.pyplot.text",
        "matplotlib.pyplot.thetagrids": "matplotlib.pyplot.thetagrids",
        "matplotlib.pyplot.tick_params": "matplotlib.pyplot.tick_params",
        "matplotlib.pyplot.ticklabel_format": "matplotlib.pyplot.ticklabel_format",
        "matplotlib.pyplot.tight_layout": "matplotlib.pyplot.tight_layout",
        "matplotlib.pyplot.title": "matplotlib.pyplot.title",
        "matplotlib.pyplot.tricontour": "matplotlib.pyplot.tricontour",
        "matplotlib.pyplot.tricontourf": "matplotlib.pyplot.tricontourf",
        "matplotlib.pyplot.tripcolor": "matplotlib.pyplot.tripcolor",
        "matplotlib.pyplot.triplot": "matplotlib.pyplot.triplot",
        "matplotlib.pyplot.twinx": "matplotlib.pyplot.twinx",
        "matplotlib.pyplot.twiny": "matplotlib.pyplot.twiny",
        "matplotlib.pyplot.uninstall_repl_displayhook": "matplotlib.pyplot.uninstall_repl_displayhook",
        "matplotlib.pyplot.violinplot": "matplotlib.pyplot.violinplot",
        "matplotlib.pyplot.viridis": "matplotlib.pyplot.viridis",
        "matplotlib.pyplot.vlines": "matplotlib.pyplot.vlines",
        "matplotlib.pyplot.waitforbuttonpress": "matplotlib.pyplot.waitforbuttonpress",
        "matplotlib.pyplot.winter": "matplotlib.pyplot.winter",
        "matplotlib.pyplot.xcorr": "matplotlib.pyplot.xcorr",
        "matplotlib.pyplot.xkcd": "matplotlib.pyplot.xkcd",
        "matplotlib.pyplot.xlabel": "matplotlib.pyplot.xlabel",
        "matplotlib.pyplot.xlim": "matplotlib.pyplot.xlim",
        "matplotlib.pyplot.xscale": "matplotlib.pyplot.xscale",
        "matplotlib.pyplot.xticks": "matplotlib.pyplot.xticks",
        "matplotlib.pyplot.ylabel": "matplotlib.pyplot.ylabel",
        "matplotlib.pyplot.ylim": "matplotlib.pyplot.ylim",
        "matplotlib.pyplot.yscale": "matplotlib.pyplot.yscale",
        "matplotlib.pyplot.yticks": "matplotlib.pyplot.yticks",
        "matplotlib.rc": "matplotlib.rc",
        "matplotlib.rc_context": "matplotlib.rc_context",
        "matplotlib.rc_file": "matplotlib.rc_file",
        "matplotlib.rc_file_defaults": "matplotlib.rc_file_defaults",
        "matplotlib.rc_params": "matplotlib.rc_params",
        "matplotlib.rc_params_from_file": "matplotlib.rc_params_from_file",
        "matplotlib.rcdefaults": "matplotlib.rcdefaults",
        "matplotlib.cbook.sanitize_sequence": "matplotlib.sanitize_sequence",
        "matplotlib.set_loglevel": "matplotlib.set_loglevel",
        "matplotlib.use": "matplotlib.use",
        "matplotlib.cbook.maxdict": "matplotlib.cbook.maxdict",
        "matplotlib.cbook.normalize_kwargs": "matplotlib.cbook.normalize_kwargs",
        "matplotlib.cbook.open_file_cm": "matplotlib.cbook.open_file_cm",
        "matplotlib.cbook.print_cycles": "matplotlib.cbook.print_cycles",
        "matplotlib.cbook.pts_to_midstep": "matplotlib.cbook.pts_to_midstep",
        "matplotlib.cbook.pts_to_poststep": "matplotlib.cbook.pts_to_poststep",
        "matplotlib.cbook.pts_to_prestep": "matplotlib.cbook.pts_to_prestep",
        "matplotlib.cbook.safe_first_element": "matplotlib.cbook.safe_first_element",
        "matplotlib.cbook.safe_masked_invalid": "matplotlib.cbook.safe_masked_invalid",
        "matplotlib.cbook.strip_math": "matplotlib.cbook.strip_math",
        "matplotlib.cbook.to_filehandle": "matplotlib.cbook.to_filehandle",
        "matplotlib.cbook.violin_stats": "matplotlib.cbook.violin_stats",
        "matplotlib.artist.getp": "matplotlib.artist.getp",
        "matplotlib.artist.kwdoc": "matplotlib.artist.kwdoc",
        "matplotlib.artist.setp": "matplotlib.artist.setp"
    },
    "seaborn": {
        "seaborn.axisgrid.FacetGrid": "seaborn.relational.FacetGrid",
        "seaborn.axisgrid.JointGrid": "seaborn.axisgrid.JointGrid",
        "seaborn.axisgrid.PairGrid": "seaborn.axisgrid.PairGrid",
        "seaborn.algorithms.bootstrap": "seaborn.algorithms.bootstrap",
        "seaborn.rcmod.axes_style": "seaborn.rcmod.axes_style",
        "seaborn._docstrings.DocstringComponents": "seaborn.relational.DocstringComponents",
        "seaborn.axisgrid.Grid": "seaborn.matrix.Grid",
        "seaborn._oldcore.VectorPlotter": "seaborn.relational.VectorPlotter",
        "seaborn.utils.adjust_legend_subtitles": "seaborn.relational.adjust_legend_subtitles",
        "seaborn.palettes.blend_palette": "seaborn.palettes.blend_palette",
        "seaborn._oldcore.categorical_order": "seaborn.categorical.categorical_order",
        "seaborn.palettes.color_palette": "seaborn.widgets.color_palette",
        "seaborn.axisgrid.jointplot": "seaborn.jointplot",
        "seaborn.axisgrid.pairplot": "seaborn.pairplot",
        "seaborn._compat.share_axis": "seaborn.axisgrid.share_axis",
        "seaborn.external.version.Version": "seaborn.external.version.Version",
        "seaborn.utils.axes_ticklabels_overlap": "seaborn.utils.axes_ticklabels_overlap",
        "seaborn.utils.axis_ticklabels_overlap": "seaborn.matrix.axis_ticklabels_overlap",
        "seaborn.utils.axlabel": "seaborn.utils.axlabel",
        "seaborn.utils.ci": "seaborn.utils.ci",
        "seaborn.utils.ci_to_errsize": "seaborn.utils.ci_to_errsize",
        "seaborn.utils.desaturate": "seaborn.palettes.desaturate",
        "seaborn.utils.despine": "seaborn.matrix.despine",
        "seaborn.utils.get_color_cycle": "seaborn.palettes.get_color_cycle",
        "seaborn.utils.get_data_home": "seaborn.get_data_home",
        "seaborn.utils.get_dataset_names": "seaborn.get_dataset_names",
        "seaborn.utils.load_dataset": "seaborn.load_dataset",
        "seaborn.utils.locator_to_legend_entries": "seaborn.relational.locator_to_legend_entries",
        "seaborn.utils.move_legend": "seaborn.move_legend",
        "seaborn.utils.relative_luminance": "seaborn.matrix.relative_luminance",
        "seaborn.utils.remove_na": "seaborn.distributions.remove_na",
        "seaborn.utils.saturate": "seaborn.saturate",
        "seaborn.utils.set_hls_values": "seaborn.set_hls_values",
        "seaborn.utils.to_utf8": "seaborn.matrix.to_utf8",
        "seaborn.external.appdirs.user_cache_dir": "seaborn.external.appdirs.user_cache_dir",
        "seaborn._oldcore.variable_type": "seaborn.categorical.variable_type",
        "seaborn.categorical.barplot": "seaborn.categorical.barplot",
        "seaborn.categorical.boxenplot": "seaborn.categorical.boxenplot",
        "seaborn.categorical.boxplot": "seaborn.categorical.boxplot",
        "seaborn.categorical.Beeswarm": "seaborn.categorical.Beeswarm",
        "seaborn._statistics.EstimateAggregator": "seaborn.relational.EstimateAggregator",
        "seaborn.categorical.catplot": "seaborn.catplot",
        "seaborn.categorical.countplot": "seaborn.countplot",
        "seaborn.palettes.dark_palette": "seaborn.widgets.dark_palette",
        "seaborn.palettes.husl_palette": "seaborn.palettes.husl_palette",
        "seaborn._oldcore.infer_orient": "seaborn.categorical.infer_orient",
        "seaborn.palettes.light_palette": "seaborn.widgets.light_palette",
        "seaborn.categorical.pointplot": "seaborn.pointplot",
        "seaborn.categorical.stripplot": "seaborn.stripplot",
        "seaborn.categorical.swarmplot": "seaborn.swarmplot",
        "seaborn.categorical.violinplot": "seaborn.violinplot",
        "seaborn.widgets.choose_colorbrewer_palette": "seaborn.widgets.choose_colorbrewer_palette",
        "seaborn.widgets.choose_cubehelix_palette": "seaborn.widgets.choose_cubehelix_palette",
        "seaborn.widgets.choose_dark_palette": "seaborn.widgets.choose_dark_palette",
        "seaborn.widgets.choose_diverging_palette": "seaborn.widgets.choose_diverging_palette",
        "seaborn.widgets.choose_light_palette": "seaborn.widgets.choose_light_palette",
        "seaborn.matrix.clustermap": "seaborn.matrix.clustermap",
        "seaborn.palettes.crayon_palette": "seaborn.palettes.crayon_palette",
        "seaborn.palettes.cubehelix_palette": "seaborn.widgets.cubehelix_palette",
        "seaborn.distributions.displot": "seaborn.distributions.displot",
        "seaborn.distributions.distplot": "seaborn.distributions.distplot",
        "seaborn._statistics.ECDF": "seaborn.distributions.ECDF",
        "seaborn._stats.counting.Hist": "seaborn.distributions.Hist",
        "seaborn._statistics.Histogram": "seaborn.distributions.Histogram",
        "seaborn._statistics.KDE": "seaborn.distributions.KDE",
        "seaborn.distributions.ecdfplot": "seaborn.ecdfplot",
        "seaborn.external.kde.gaussian_kde": "seaborn.external.kde.gaussian_kde",
        "seaborn.distributions.histplot": "seaborn.histplot",
        "seaborn.external.husl.dot_product": "seaborn.external.husl.dot_product",
        "seaborn.external.husl.f": "seaborn.external.husl.f",
        "seaborn.external.husl.f_inv": "seaborn.external.husl.f_inv",
        "seaborn.external.husl.from_linear": "seaborn.external.husl.from_linear",
        "seaborn.external.husl.hex_to_husl": "seaborn.external.husl.hex_to_husl",
        "seaborn.external.husl.hex_to_huslp": "seaborn.external.husl.hex_to_huslp",
        "seaborn.external.husl.hex_to_rgb": "seaborn.external.husl.hex_to_rgb",
        "seaborn.external.husl.husl_to_hex": "seaborn.external.husl.husl_to_hex",
        "seaborn.external.husl.husl_to_lch": "seaborn.external.husl.husl_to_lch",
        "seaborn.external.husl.husl_to_rgb": "seaborn.external.husl.husl_to_rgb",
        "seaborn.external.husl.huslp_to_hex": "seaborn.external.husl.huslp_to_hex",
        "seaborn.external.husl.huslp_to_lch": "seaborn.external.husl.huslp_to_lch",
        "seaborn.external.husl.huslp_to_rgb": "seaborn.external.husl.huslp_to_rgb",
        "seaborn.external.husl.lch_to_husl": "seaborn.external.husl.lch_to_husl",
        "seaborn.external.husl.lch_to_huslp": "seaborn.external.husl.lch_to_huslp",
        "seaborn.external.husl.lch_to_luv": "seaborn.external.husl.lch_to_luv",
        "seaborn.external.husl.lch_to_rgb": "seaborn.external.husl.lch_to_rgb",
        "seaborn.external.husl.luv_to_lch": "seaborn.external.husl.luv_to_lch",
        "seaborn.external.husl.luv_to_xyz": "seaborn.external.husl.luv_to_xyz",
        "seaborn.external.husl.max_chroma": "seaborn.external.husl.max_chroma",
        "seaborn.external.husl.max_chroma_pastel": "seaborn.external.husl.max_chroma_pastel",
        "seaborn.external.husl.rgb_prepare": "seaborn.external.husl.rgb_prepare",
        "seaborn.external.husl.rgb_to_hex": "seaborn.external.husl.rgb_to_hex",
        "seaborn.external.husl.rgb_to_husl": "seaborn.external.husl.rgb_to_husl",
        "seaborn.external.husl.rgb_to_huslp": "seaborn.external.husl.rgb_to_huslp",
        "seaborn.external.husl.rgb_to_lch": "seaborn.external.husl.rgb_to_lch",
        "seaborn.external.husl.rgb_to_xyz": "seaborn.external.husl.rgb_to_xyz",
        "seaborn.external.husl.to_linear": "seaborn.external.husl.to_linear",
        "seaborn.external.husl.xyz_to_luv": "seaborn.external.husl.xyz_to_luv",
        "seaborn.external.husl.xyz_to_rgb": "seaborn.external.husl.xyz_to_rgb",
        "seaborn.distributions.kdeplot": "seaborn.kdeplot",
        "seaborn.distributions.rugplot": "seaborn.rugplot",
        "seaborn.palettes.diverging_palette": "seaborn.widgets.diverging_palette",
        "seaborn.miscplot.dogplot": "seaborn.miscplot.dogplot",
        "seaborn.external.docscrape.ClassDoc": "seaborn.external.docscrape.ClassDoc",
        "seaborn.external.docscrape.FunctionDoc": "seaborn.external.docscrape.FunctionDoc",
        "seaborn.external.docscrape.NumpyDocString": "seaborn.external.docscrape.NumpyDocString",
        "seaborn.external.docscrape.Parameter": "seaborn.external.docscrape.Parameter",
        "seaborn.external.docscrape.ParseError": "seaborn.external.docscrape.ParseError",
        "seaborn.external.docscrape.Reader": "seaborn.external.docscrape.Reader",
        "seaborn.external.docscrape.dedent_lines": "seaborn.external.docscrape.dedent_lines",
        "seaborn.external.docscrape.header": "seaborn.external.docscrape.header",
        "seaborn.external.docscrape.indent": "seaborn.external.docscrape.indent",
        "seaborn.external.docscrape.strip_blank_lines": "seaborn.external.docscrape.strip_blank_lines",
        "seaborn.external.version.InfinityType": "seaborn.external.version.InfinityType",
        "seaborn.external.version.InvalidVersion": "seaborn.external.version.InvalidVersion",
        "seaborn.external.version.NegativeInfinityType": "seaborn.external.version.NegativeInfinityType",
        "seaborn.matrix.heatmap": "seaborn.matrix.heatmap",
        "seaborn.palettes.hls_palette": "seaborn.palettes.hls_palette",
        "seaborn.relational.lineplot": "seaborn.relational.lineplot",
        "seaborn.regression.lmplot": "seaborn.regression.lmplot",
        "seaborn.matrix.ClusterGrid": "seaborn.matrix.ClusterGrid",
        "seaborn.matrix.dendrogram": "seaborn.matrix.dendrogram",
        "seaborn._compat.get_colormap": "seaborn.palettes.get_colormap",
        "seaborn.miscplot.palplot": "seaborn.widgets.palplot",
        "seaborn.palettes.mpl_palette": "seaborn.palettes.mpl_palette",
        "seaborn.palettes.set_color_codes": "seaborn.set_color_codes",
        "seaborn.palettes.xkcd_palette": "seaborn.xkcd_palette",
        "seaborn.rcmod.plotting_context": "seaborn.rcmod.plotting_context",
        "seaborn.rcmod.reset_defaults": "seaborn.reset_defaults",
        "seaborn.rcmod.reset_orig": "seaborn.reset_orig",
        "seaborn.rcmod.set": "seaborn.set",
        "seaborn.rcmod.set_context": "seaborn.set_context",
        "seaborn.rcmod.set_palette": "seaborn.set_palette",
        "seaborn.rcmod.set_style": "seaborn.set_style",
        "seaborn.rcmod.set_theme": "seaborn.set_theme",
        "seaborn.regression.regplot": "seaborn.regression.regplot",
        "seaborn.regression.residplot": "seaborn.residplot",
        "seaborn.relational.relplot": "seaborn.relplot",
        "seaborn.relational.scatterplot": "seaborn.scatterplot"
    },
    "xgboost": {
        "xgboost.core.Booster": "xgboost.training.Booster",
        "xgboost.core.DMatrix": "xgboost.training.DMatrix",
        "xgboost.core.DataIter": "xgboost.data.DataIter",
        "xgboost.core.DeviceQuantileDMatrix": "xgboost.core.DeviceQuantileDMatrix",
        "xgboost.core.QuantileDMatrix": "xgboost.sklearn.QuantileDMatrix",
        "xgboost.tracker.RabitTracker": "xgboost.tracker.RabitTracker",
        "xgboost.sklearn.XGBClassifier": "xgboost.sklearn.XGBClassifier",
        "xgboost.sklearn.XGBModel": "xgboost.sklearn.XGBModel",
        "xgboost.sklearn.XGBRFClassifier": "xgboost.sklearn.XGBRFClassifier",
        "xgboost.sklearn.XGBRFRegressor": "xgboost.sklearn.XGBRFRegressor",
        "xgboost.sklearn.XGBRanker": "xgboost.sklearn.XGBRanker",
        "xgboost.sklearn.XGBRegressor": "xgboost.sklearn.XGBRegressor",
        "xgboost.core.build_info": "xgboost.core.build_info",
        "xgboost.callback.CallbackContainer": "xgboost.training.CallbackContainer",
        "xgboost.callback.EarlyStopping": "xgboost.training.EarlyStopping",
        "xgboost.callback.EvaluationMonitor": "xgboost.training.EvaluationMonitor",
        "xgboost.callback.LearningRateScheduler": "xgboost.callback.LearningRateScheduler",
        "xgboost.callback.TrainingCallback": "xgboost.training.TrainingCallback",
        "xgboost.callback.TrainingCheckPoint": "xgboost.callback.TrainingCheckPoint",
        "xgboost.core.XGBoostError": "xgboost.training.XGBoostError",
        "xgboost.collective.CommunicatorContext": "xgboost.collective.CommunicatorContext",
        "xgboost.collective.Op": "xgboost.collective.Op",
        "xgboost.collective.allreduce": "xgboost.collective.allreduce",
        "xgboost.collective.broadcast": "xgboost.collective.broadcast",
        "xgboost.core.c_str": "xgboost.data.c_str",
        "xgboost.collective.communicator_print": "xgboost.collective.communicator_print",
        "xgboost.collective.finalize": "xgboost.collective.finalize",
        "xgboost.core.from_pystr_to_cstr": "xgboost.data.from_pystr_to_cstr",
        "xgboost.collective.get_processor_name": "xgboost.collective.get_processor_name",
        "xgboost.collective.get_rank": "xgboost.collective.get_rank",
        "xgboost.collective.get_world_size": "xgboost.collective.get_world_size",
        "xgboost.collective.init": "xgboost.collective.init",
        "xgboost.collective.is_distributed": "xgboost.collective.is_distributed",
        "xgboost.compat.py_str": "xgboost.core.py_str",
        "xgboost.compat.LazyLoader": "xgboost.dask.LazyLoader",
        "xgboost.compat.concat": "xgboost.dask.concat",
        "xgboost.compat.is_cudf_available": "xgboost.compat.is_cudf_available",
        "xgboost.compat.is_cupy_available": "xgboost.compat.is_cupy_available",
        "xgboost.compat.lazy_isinstance": "xgboost.data.lazy_isinstance",
        "xgboost.config.config_context": "xgboost.sklearn.config_context",
        "xgboost.config.config_doc": "xgboost.config.config_doc",
        "xgboost.config.get_config": "xgboost.get_config",
        "xgboost.config.set_config": "xgboost.set_config",
        "xgboost.core.DataSplitMode": "xgboost.data.DataSplitMode",
        "xgboost.core.c_array": "xgboost.core.c_array",
        "xgboost.core.ctypes2buffer": "xgboost.core.ctypes2buffer",
        "xgboost.core.ctypes2cupy": "xgboost.core.ctypes2cupy",
        "xgboost.core.ctypes2numpy": "xgboost.core.ctypes2numpy",
        "xgboost.libpath.find_lib_path": "xgboost.libpath.find_lib_path",
        "xgboost.core.from_array_interface": "xgboost.core.from_array_interface",
        "xgboost.core.from_cstr_to_pystr": "xgboost.core.from_cstr_to_pystr",
        "xgboost.core.make_jcargs": "xgboost.data.make_jcargs",
        "xgboost.core.require_keyword_args": "xgboost.core.require_keyword_args",
        "xgboost.training.cv": "xgboost.training.cv",
        "xgboost.dask.CommunicatorContext": "xgboost.dask.CommunicatorContext",
        "xgboost.dask.DaskDMatrix": "xgboost.dask.DaskDMatrix",
        "xgboost.dask.DaskDeviceQuantileDMatrix": "xgboost.dask.DaskDeviceQuantileDMatrix",
        "xgboost.dask.DaskPartitionIter": "xgboost.dask.DaskPartitionIter",
        "xgboost.dask.DaskQuantileDMatrix": "xgboost.dask.DaskQuantileDMatrix",
        "xgboost.dask.DaskScikitLearnBase": "xgboost.dask.DaskScikitLearnBase",
        "xgboost.dask.DaskXGBClassifier": "xgboost.dask.DaskXGBClassifier",
        "xgboost.dask.DaskXGBRFClassifier": "xgboost.dask.DaskXGBRFClassifier",
        "xgboost.dask.DaskXGBRFRegressor": "xgboost.dask.DaskXGBRFRegressor",
        "xgboost.dask.DaskXGBRanker": "xgboost.dask.DaskXGBRanker",
        "xgboost.dask.DaskXGBRegressor": "xgboost.dask.DaskXGBRegressor",
        "xgboost.dask.TrainReturnT": "xgboost.dask.TrainReturnT",
        "xgboost.sklearn.XGBRankerMixIn": "xgboost.sklearn.XGBRankerMixIn",
        "xgboost.dask.dconcat": "xgboost.dask.dconcat",
        "xgboost.tracker.get_host_ip": "xgboost.tracker.get_host_ip",
        "xgboost.dask.inplace_predict": "xgboost.dask.inplace_predict",
        "xgboost.dask.map_worker_partitions": "xgboost.dask.map_worker_partitions",
        "xgboost.dask.predict": "xgboost.dask.predict",
        "xgboost.dask.train": "xgboost.dask.train",
        "xgboost.training.train": "xgboost.training.train",
        "xgboost.sklearn.xgboost_model_doc": "xgboost.sklearn.xgboost_model_doc",
        "xgboost.data.SingleBatchInternalIter": "xgboost.data.SingleBatchInternalIter",
        "xgboost.data.dispatch_data_backend": "xgboost.data.dispatch_data_backend",
        "xgboost.data.dispatch_meta_backend": "xgboost.data.dispatch_meta_backend",
        "xgboost.data.dispatch_proxy_set_data": "xgboost.data.dispatch_proxy_set_data",
        "xgboost.data.is_nullable_dtype": "xgboost.data.is_nullable_dtype",
        "xgboost.data.is_pa_ext_categorical_dtype": "xgboost.data.is_pa_ext_categorical_dtype",
        "xgboost.data.is_pa_ext_dtype": "xgboost.data.is_pa_ext_dtype",
        "xgboost.data.is_pd_cat_dtype": "xgboost.data.is_pd_cat_dtype",
        "xgboost.data.is_pd_sparse_dtype": "xgboost.data.is_pd_sparse_dtype",
        "xgboost.data.pandas_cat_null": "xgboost.data.pandas_cat_null",
        "xgboost.data.pandas_ext_num_types": "xgboost.data.pandas_ext_num_types",
        "xgboost.data.pandas_feature_info": "xgboost.data.pandas_feature_info",
        "xgboost.data.record_batch_data_iter": "xgboost.data.record_batch_data_iter",
        "xgboost.data.transform_scipy_sparse": "xgboost.data.transform_scipy_sparse",
        "xgboost.libpath.XGBoostLibraryNotFound": "xgboost.libpath.XGBoostLibraryNotFound",
        "xgboost.plotting.plot_importance": "xgboost.plotting.plot_importance",
        "xgboost.plotting.plot_tree": "xgboost.plotting.plot_tree",
        "xgboost.plotting.to_graphviz": "xgboost.to_graphviz",
        "xgboost.rabit.Op": "xgboost.rabit.Op",
        "xgboost.rabit.RabitContext": "xgboost.rabit.RabitContext",
        "xgboost.rabit.allreduce": "xgboost.rabit.allreduce",
        "xgboost.rabit.broadcast": "xgboost.rabit.broadcast",
        "xgboost.rabit.finalize": "xgboost.rabit.finalize",
        "xgboost.rabit.get_processor_name": "xgboost.rabit.get_processor_name",
        "xgboost.rabit.get_rank": "xgboost.rabit.get_rank",
        "xgboost.rabit.get_world_size": "xgboost.rabit.get_world_size",
        "xgboost.rabit.init": "xgboost.rabit.init",
        "xgboost.rabit.is_distributed": "xgboost.rabit.is_distributed",
        "xgboost.rabit.tracker_print": "xgboost.rabit.tracker_print",
        "xgboost.rabit.version_number": "xgboost.rabit.version_number",
        "xgboost.sklearn.ltr_metric_decorator": "xgboost.sklearn.ltr_metric_decorator",
        "xgboost.tracker.ExSocket": "xgboost.tracker.ExSocket",
        "xgboost.tracker.WorkerEntry": "xgboost.tracker.WorkerEntry",
        "xgboost.tracker.get_family": "xgboost.tracker.get_family",
        "xgboost.tracker.get_some_ip": "xgboost.tracker.get_some_ip",
        "xgboost.tracker.main": "xgboost.tracker.main",
        "xgboost.tracker.start_rabit_tracker": "xgboost.tracker.start_rabit_tracker",
        "xgboost.training.CVPack": "xgboost.training.CVPack",
        "xgboost.training.groups_to_rows": "xgboost.training.groups_to_rows",
        "xgboost.training.mkgroupfold": "xgboost.training.mkgroupfold",
        "xgboost.training.mknfold": "xgboost.training.mknfold"
    },
    "lightgbm": {
        "lightgbm.basic.Booster": "lightgbm.sklearn.Booster",
        "lightgbm.engine.CVBooster": "lightgbm.engine.CVBooster",
        "lightgbm.dask.DaskLGBMClassifier": "lightgbm.dask.DaskLGBMClassifier",
        "lightgbm.dask.DaskLGBMRanker": "lightgbm.dask.DaskLGBMRanker",
        "lightgbm.dask.DaskLGBMRegressor": "lightgbm.dask.DaskLGBMRegressor",
        "lightgbm.basic.Dataset": "lightgbm.sklearn.Dataset",
        "lightgbm.callback.EarlyStopException": "lightgbm.callback.EarlyStopException",
        "lightgbm.sklearn.LGBMClassifier": "lightgbm.sklearn.LGBMClassifier",
        "lightgbm.sklearn.LGBMModel": "lightgbm.sklearn.LGBMModel",
        "lightgbm.sklearn.LGBMRanker": "lightgbm.sklearn.LGBMRanker",
        "lightgbm.sklearn.LGBMRegressor": "lightgbm.sklearn.LGBMRegressor",
        "lightgbm.basic.Sequence": "lightgbm.basic.Sequence",
        "lightgbm.basic.LGBMDeprecationWarning": "lightgbm.basic.LGBMDeprecationWarning",
        "lightgbm.basic.LightGBMError": "lightgbm.sklearn.LightGBMError",
        "lightgbm.compat.dt_DataTable": "lightgbm.sklearn.dt_DataTable",
        "lightgbm.basic.register_logger": "lightgbm.register_logger",
        "lightgbm.callback.CallbackEnv": "lightgbm.callback.CallbackEnv",
        "lightgbm.callback.early_stopping": "lightgbm.early_stopping",
        "lightgbm.callback.log_evaluation": "lightgbm.log_evaluation",
        "lightgbm.callback.record_evaluation": "lightgbm.sklearn.record_evaluation",
        "lightgbm.callback.reset_parameter": "lightgbm.reset_parameter",
        "lightgbm.compat.validate_data": "lightgbm.compat.validate_data",
        "lightgbm.plotting.create_tree_digraph": "lightgbm.plotting.create_tree_digraph",
        "lightgbm.engine.cv": "lightgbm.engine.cv",
        "lightgbm.engine.train": "lightgbm.train",
        "lightgbm.plotting.plot_importance": "lightgbm.plotting.plot_importance",
        "lightgbm.plotting.plot_metric": "lightgbm.plotting.plot_metric",
        "lightgbm.plotting.plot_split_value_histogram": "lightgbm.plotting.plot_split_value_histogram",
        "lightgbm.plotting.plot_tree": "lightgbm.plotting.plot_tree"
    },
    "plotly": {
        "plotly.data.carshare": "plotly.data.carshare",
        "plotly.data.election": "plotly.data.election",
        "plotly.data.election_geojson": "plotly.data.election_geojson",
        "plotly.data.experiment": "plotly.data.experiment",
        "plotly.data.gapminder": "plotly.data.gapminder",
        "plotly.data.iris": "plotly.data.iris",
        "plotly.data.medals_long": "plotly.data.medals_long",
        "plotly.data.medals_wide": "plotly.data.medals_wide",
        "plotly.data.stocks": "plotly.data.stocks",
        "plotly.data.tips": "plotly.data.tips",
        "plotly.data.wind": "plotly.data.wind",
        "plotly.graph_objs._deprecations.AngularAxis": "plotly.graph_objs.AngularAxis",
        "plotly.graph_objs._deprecations.Annotation": "plotly.graph_objs.Annotation",
        "plotly.graph_objs._deprecations.Annotations": "plotly.graph_objs.Annotations",
        "plotly.graph_objs._bar.Bar": "plotly.graph_objs.Bar",
        "plotly.graph_objs._barpolar.Barpolar": "plotly.graph_objs.Barpolar",
        "plotly.graph_objs._box.Box": "plotly.graph_objs.Box",
        "plotly.graph_objs._candlestick.Candlestick": "plotly.graph_objs.Candlestick",
        "plotly.graph_objs._carpet.Carpet": "plotly.graph_objs.Carpet",
        "plotly.graph_objs._choropleth.Choropleth": "plotly.graph_objs.Choropleth",
        "plotly.graph_objs._choroplethmap.Choroplethmap": "plotly.graph_objs.Choroplethmap",
        "plotly.graph_objs._choroplethmapbox.Choroplethmapbox": "plotly.graph_objs.Choroplethmapbox",
        "plotly.graph_objs._deprecations.ColorBar": "plotly.graph_objs.ColorBar",
        "plotly.graph_objs._cone.Cone": "plotly.graph_objs.Cone",
        "plotly.graph_objs._contour.Contour": "plotly.graph_objs.Contour",
        "plotly.graph_objs._contourcarpet.Contourcarpet": "plotly.graph_objs.Contourcarpet",
        "plotly.graph_objs._deprecations.Contours": "plotly.graph_objs.Contours",
        "plotly.graph_objs._deprecations.Data": "plotly.graph_objs.Data",
        "plotly.graph_objs._densitymap.Densitymap": "plotly.graph_objs.Densitymap",
        "plotly.graph_objs._densitymapbox.Densitymapbox": "plotly.graph_objs.Densitymapbox",
        "plotly.graph_objs._deprecations.ErrorX": "plotly.graph_objs.ErrorX",
        "plotly.graph_objs._deprecations.ErrorY": "plotly.graph_objs.ErrorY",
        "plotly.graph_objs._deprecations.ErrorZ": "plotly.graph_objs.ErrorZ",
        "plotly.graph_objs._figure.Figure": "plotly.graph_objs.Figure",
        "plotly.graph_objs._figurewidget.FigureWidget": "plotly.graph_objs.FigureWidget",
        "plotly.graph_objs._deprecations.Font": "plotly.graph_objs.Font",
        "plotly.graph_objs._frame.Frame": "plotly.graph_objs.Frame",
        "plotly.graph_objs._deprecations.Frames": "plotly.graph_objs.Frames",
        "plotly.graph_objs._funnel.Funnel": "plotly.graph_objs.Funnel",
        "plotly.graph_objs._funnelarea.Funnelarea": "plotly.graph_objs.Funnelarea",
        "plotly.graph_objs._heatmap.Heatmap": "plotly.graph_objs.Heatmap",
        "plotly.graph_objs._heatmapgl.Heatmapgl": "plotly.graph_objs.Heatmapgl",
        "plotly.graph_objs._histogram.Histogram": "plotly.graph_objs.Histogram",
        "plotly.graph_objs._histogram2d.Histogram2d": "plotly.graph_objs.Histogram2d",
        "plotly.graph_objs._histogram2dcontour.Histogram2dContour": "plotly.graph_objs.Histogram2dContour",
        "plotly.graph_objs._deprecations.Histogram2dcontour": "plotly.graph_objs.Histogram2dcontour",
        "plotly.graph_objs._icicle.Icicle": "plotly.graph_objs.Icicle",
        "plotly.graph_objs._image.Image": "plotly.graph_objs.Image",
        "plotly.graph_objs._indicator.Indicator": "plotly.graph_objs.Indicator",
        "plotly.graph_objs._isosurface.Isosurface": "plotly.graph_objs.Isosurface",
        "plotly.graph_objs._layout.Layout": "plotly.graph_objs.Layout",
        "plotly.graph_objs._deprecations.Legend": "plotly.graph_objs.Legend",
        "plotly.graph_objs._deprecations.Line": "plotly.graph_objs.Line",
        "plotly.graph_objs._deprecations.Margin": "plotly.graph_objs.Margin",
        "plotly.graph_objs._deprecations.Marker": "plotly.graph_objs.Marker",
        "plotly.graph_objs._mesh3d.Mesh3d": "plotly.graph_objs.Mesh3d",
        "plotly.graph_objs._ohlc.Ohlc": "plotly.graph_objs.Ohlc",
        "plotly.graph_objs._parcats.Parcats": "plotly.graph_objs.Parcats",
        "plotly.graph_objs._parcoords.Parcoords": "plotly.graph_objs.Parcoords",
        "plotly.graph_objs._pie.Pie": "plotly.graph_objs.Pie",
        "plotly.graph_objs._pointcloud.Pointcloud": "plotly.graph_objs.Pointcloud",
        "plotly.graph_objs._deprecations.RadialAxis": "plotly.graph_objs.RadialAxis",
        "plotly.graph_objs._sankey.Sankey": "plotly.graph_objs.Sankey",
        "plotly.graph_objs._scatter.Scatter": "plotly.graph_objs.Scatter",
        "plotly.graph_objs._scatter3d.Scatter3d": "plotly.graph_objs.Scatter3d",
        "plotly.graph_objs._scattercarpet.Scattercarpet": "plotly.graph_objs.Scattercarpet",
        "plotly.graph_objs._scattergeo.Scattergeo": "plotly.graph_objs.Scattergeo",
        "plotly.graph_objs._scattergl.Scattergl": "plotly.graph_objs.Scattergl",
        "plotly.graph_objs._scattermap.Scattermap": "plotly.graph_objs.Scattermap",
        "plotly.graph_objs._scattermapbox.Scattermapbox": "plotly.graph_objs.Scattermapbox",
        "plotly.graph_objs._scatterpolar.Scatterpolar": "plotly.graph_objs.Scatterpolar",
        "plotly.graph_objs._scatterpolargl.Scatterpolargl": "plotly.graph_objs.Scatterpolargl",
        "plotly.graph_objs._scattersmith.Scattersmith": "plotly.graph_objs.Scattersmith",
        "plotly.graph_objs._scatterternary.Scatterternary": "plotly.graph_objs.Scatterternary",
        "plotly.graph_objs._deprecations.Scene": "plotly.graph_objs.Scene",
        "plotly.graph_objs._splom.Splom": "plotly.graph_objs.Splom",
        "plotly.graph_objs._deprecations.Stream": "plotly.graph_objs.Stream",
        "plotly.graph_objs._streamtube.Streamtube": "plotly.graph_objs.Streamtube",
        "plotly.graph_objs._sunburst.Sunburst": "plotly.graph_objs.Sunburst",
        "plotly.graph_objs._surface.Surface": "plotly.graph_objs.Surface",
        "plotly.graph_objs._table.Table": "plotly.graph_objs.Table",
        "plotly.graph_objs._deprecations.Trace": "plotly.graph_objs.Trace",
        "plotly.graph_objs._treemap.Treemap": "plotly.graph_objs.Treemap",
        "plotly.graph_objs._violin.Violin": "plotly.graph_objs.Violin",
        "plotly.graph_objs._volume.Volume": "plotly.graph_objs.Volume",
        "plotly.graph_objs._waterfall.Waterfall": "plotly.graph_objs.Waterfall",
        "plotly.graph_objs._deprecations.XAxis": "plotly.graph_objs.XAxis",
        "plotly.graph_objs._deprecations.XBins": "plotly.graph_objs.XBins",
        "plotly.graph_objs._deprecations.YAxis": "plotly.graph_objs.YAxis",
        "plotly.graph_objs._deprecations.YBins": "plotly.graph_objs.YBins",
        "plotly.graph_objs._deprecations.ZAxis": "plotly.graph_objs.ZAxis",
        "plotly.graph_objs.bar._error_x.ErrorX": "plotly.graph_objs.bar.ErrorX",
        "plotly.graph_objs.bar._error_y.ErrorY": "plotly.graph_objs.bar.ErrorY",
        "plotly.graph_objs.bar._hoverlabel.Hoverlabel": "plotly.graph_objs.bar.Hoverlabel",
        "plotly.graph_objs.bar._insidetextfont.Insidetextfont": "plotly.graph_objs.bar.Insidetextfont",
        "plotly.graph_objs.bar._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.bar.Legendgrouptitle",
        "plotly.graph_objs.bar._marker.Marker": "plotly.graph_objs.bar.Marker",
        "plotly.graph_objs.bar._outsidetextfont.Outsidetextfont": "plotly.graph_objs.bar.Outsidetextfont",
        "plotly.graph_objs.bar._selected.Selected": "plotly.graph_objs.bar.Selected",
        "plotly.graph_objs.bar._stream.Stream": "plotly.graph_objs.bar.Stream",
        "plotly.graph_objs.bar._textfont.Textfont": "plotly.graph_objs.bar.Textfont",
        "plotly.graph_objs.bar._unselected.Unselected": "plotly.graph_objs.bar.Unselected",
        "plotly.graph_objs.bar.hoverlabel._font.Font": "plotly.graph_objs.bar.hoverlabel.Font",
        "plotly.graph_objs.bar.legendgrouptitle._font.Font": "plotly.graph_objs.bar.legendgrouptitle.Font",
        "plotly.graph_objs.bar.marker._colorbar.ColorBar": "plotly.graph_objs.bar.marker.ColorBar",
        "plotly.graph_objs.bar.marker._line.Line": "plotly.graph_objs.bar.marker.Line",
        "plotly.graph_objs.bar.marker._pattern.Pattern": "plotly.graph_objs.bar.marker.Pattern",
        "plotly.graph_objs.bar.marker.colorbar._tickfont.Tickfont": "plotly.graph_objs.bar.marker.colorbar.Tickfont",
        "plotly.graph_objs.bar.marker.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.bar.marker.colorbar.Tickformatstop",
        "plotly.graph_objs.bar.marker.colorbar._title.Title": "plotly.graph_objs.bar.marker.colorbar.Title",
        "plotly.graph_objs.bar.marker.colorbar.title._font.Font": "plotly.graph_objs.bar.marker.colorbar.title.Font",
        "plotly.graph_objs.bar.selected._marker.Marker": "plotly.graph_objs.bar.selected.Marker",
        "plotly.graph_objs.bar.selected._textfont.Textfont": "plotly.graph_objs.bar.selected.Textfont",
        "plotly.graph_objs.bar.unselected._marker.Marker": "plotly.graph_objs.bar.unselected.Marker",
        "plotly.graph_objs.bar.unselected._textfont.Textfont": "plotly.graph_objs.bar.unselected.Textfont",
        "plotly.graph_objs.barpolar._hoverlabel.Hoverlabel": "plotly.graph_objs.barpolar.Hoverlabel",
        "plotly.graph_objs.barpolar._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.barpolar.Legendgrouptitle",
        "plotly.graph_objs.barpolar._marker.Marker": "plotly.graph_objs.barpolar.Marker",
        "plotly.graph_objs.barpolar._selected.Selected": "plotly.graph_objs.barpolar.Selected",
        "plotly.graph_objs.barpolar._stream.Stream": "plotly.graph_objs.barpolar.Stream",
        "plotly.graph_objs.barpolar._unselected.Unselected": "plotly.graph_objs.barpolar.Unselected",
        "plotly.graph_objs.barpolar.hoverlabel._font.Font": "plotly.graph_objs.barpolar.hoverlabel.Font",
        "plotly.graph_objs.barpolar.legendgrouptitle._font.Font": "plotly.graph_objs.barpolar.legendgrouptitle.Font",
        "plotly.graph_objs.barpolar.marker._colorbar.ColorBar": "plotly.graph_objs.barpolar.marker.ColorBar",
        "plotly.graph_objs.barpolar.marker._line.Line": "plotly.graph_objs.barpolar.marker.Line",
        "plotly.graph_objs.barpolar.marker._pattern.Pattern": "plotly.graph_objs.barpolar.marker.Pattern",
        "plotly.graph_objs.barpolar.marker.colorbar._tickfont.Tickfont": "plotly.graph_objs.barpolar.marker.colorbar.Tickfont",
        "plotly.graph_objs.barpolar.marker.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.barpolar.marker.colorbar.Tickformatstop",
        "plotly.graph_objs.barpolar.marker.colorbar._title.Title": "plotly.graph_objs.barpolar.marker.colorbar.Title",
        "plotly.graph_objs.barpolar.marker.colorbar.title._font.Font": "plotly.graph_objs.barpolar.marker.colorbar.title.Font",
        "plotly.graph_objs.barpolar.selected._marker.Marker": "plotly.graph_objs.barpolar.selected.Marker",
        "plotly.graph_objs.barpolar.selected._textfont.Textfont": "plotly.graph_objs.barpolar.selected.Textfont",
        "plotly.graph_objs.barpolar.unselected._marker.Marker": "plotly.graph_objs.barpolar.unselected.Marker",
        "plotly.graph_objs.barpolar.unselected._textfont.Textfont": "plotly.graph_objs.barpolar.unselected.Textfont",
        "plotly.graph_objs.box._hoverlabel.Hoverlabel": "plotly.graph_objs.box.Hoverlabel",
        "plotly.graph_objs.box._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.box.Legendgrouptitle",
        "plotly.graph_objs.box._line.Line": "plotly.graph_objs.box.Line",
        "plotly.graph_objs.box._marker.Marker": "plotly.graph_objs.box.Marker",
        "plotly.graph_objs.box._selected.Selected": "plotly.graph_objs.box.Selected",
        "plotly.graph_objs.box._stream.Stream": "plotly.graph_objs.box.Stream",
        "plotly.graph_objs.box._unselected.Unselected": "plotly.graph_objs.box.Unselected",
        "plotly.graph_objs.box.hoverlabel._font.Font": "plotly.graph_objs.box.hoverlabel.Font",
        "plotly.graph_objs.box.legendgrouptitle._font.Font": "plotly.graph_objs.box.legendgrouptitle.Font",
        "plotly.graph_objs.box.marker._line.Line": "plotly.graph_objs.box.marker.Line",
        "plotly.graph_objs.box.selected._marker.Marker": "plotly.graph_objs.box.selected.Marker",
        "plotly.graph_objs.box.unselected._marker.Marker": "plotly.graph_objs.box.unselected.Marker",
        "plotly.graph_objs.candlestick._decreasing.Decreasing": "plotly.graph_objs.candlestick.Decreasing",
        "plotly.graph_objs.candlestick._hoverlabel.Hoverlabel": "plotly.graph_objs.candlestick.Hoverlabel",
        "plotly.graph_objs.candlestick._increasing.Increasing": "plotly.graph_objs.candlestick.Increasing",
        "plotly.graph_objs.candlestick._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.candlestick.Legendgrouptitle",
        "plotly.graph_objs.candlestick._line.Line": "plotly.graph_objs.candlestick.Line",
        "plotly.graph_objs.candlestick._stream.Stream": "plotly.graph_objs.candlestick.Stream",
        "plotly.graph_objs.candlestick.decreasing._line.Line": "plotly.graph_objs.candlestick.decreasing.Line",
        "plotly.graph_objs.candlestick.hoverlabel._font.Font": "plotly.graph_objs.candlestick.hoverlabel.Font",
        "plotly.graph_objs.candlestick.increasing._line.Line": "plotly.graph_objs.candlestick.increasing.Line",
        "plotly.graph_objs.candlestick.legendgrouptitle._font.Font": "plotly.graph_objs.candlestick.legendgrouptitle.Font",
        "plotly.graph_objs.carpet._aaxis.Aaxis": "plotly.graph_objs.carpet.Aaxis",
        "plotly.graph_objs.carpet._baxis.Baxis": "plotly.graph_objs.carpet.Baxis",
        "plotly.graph_objs.carpet._font.Font": "plotly.graph_objs.carpet.Font",
        "plotly.graph_objs.carpet._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.carpet.Legendgrouptitle",
        "plotly.graph_objs.carpet._stream.Stream": "plotly.graph_objs.carpet.Stream",
        "plotly.graph_objs.carpet.aaxis._tickfont.Tickfont": "plotly.graph_objs.carpet.aaxis.Tickfont",
        "plotly.graph_objs.carpet.aaxis._tickformatstop.Tickformatstop": "plotly.graph_objs.carpet.aaxis.Tickformatstop",
        "plotly.graph_objs.carpet.aaxis._title.Title": "plotly.graph_objs.carpet.aaxis.Title",
        "plotly.graph_objs.carpet.aaxis.title._font.Font": "plotly.graph_objs.carpet.aaxis.title.Font",
        "plotly.graph_objs.carpet.baxis._tickfont.Tickfont": "plotly.graph_objs.carpet.baxis.Tickfont",
        "plotly.graph_objs.carpet.baxis._tickformatstop.Tickformatstop": "plotly.graph_objs.carpet.baxis.Tickformatstop",
        "plotly.graph_objs.carpet.baxis._title.Title": "plotly.graph_objs.carpet.baxis.Title",
        "plotly.graph_objs.carpet.baxis.title._font.Font": "plotly.graph_objs.carpet.baxis.title.Font",
        "plotly.graph_objs.carpet.legendgrouptitle._font.Font": "plotly.graph_objs.carpet.legendgrouptitle.Font",
        "plotly.graph_objs.choropleth._colorbar.ColorBar": "plotly.graph_objs.choropleth.ColorBar",
        "plotly.graph_objs.choropleth._hoverlabel.Hoverlabel": "plotly.graph_objs.choropleth.Hoverlabel",
        "plotly.graph_objs.choropleth._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.choropleth.Legendgrouptitle",
        "plotly.graph_objs.choropleth._marker.Marker": "plotly.graph_objs.choropleth.Marker",
        "plotly.graph_objs.choropleth._selected.Selected": "plotly.graph_objs.choropleth.Selected",
        "plotly.graph_objs.choropleth._stream.Stream": "plotly.graph_objs.choropleth.Stream",
        "plotly.graph_objs.choropleth._unselected.Unselected": "plotly.graph_objs.choropleth.Unselected",
        "plotly.graph_objs.choropleth.colorbar._tickfont.Tickfont": "plotly.graph_objs.choropleth.colorbar.Tickfont",
        "plotly.graph_objs.choropleth.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.choropleth.colorbar.Tickformatstop",
        "plotly.graph_objs.choropleth.colorbar._title.Title": "plotly.graph_objs.choropleth.colorbar.Title",
        "plotly.graph_objs.choropleth.colorbar.title._font.Font": "plotly.graph_objs.choropleth.colorbar.title.Font",
        "plotly.graph_objs.choropleth.hoverlabel._font.Font": "plotly.graph_objs.choropleth.hoverlabel.Font",
        "plotly.graph_objs.choropleth.legendgrouptitle._font.Font": "plotly.graph_objs.choropleth.legendgrouptitle.Font",
        "plotly.graph_objs.choropleth.marker._line.Line": "plotly.graph_objs.choropleth.marker.Line",
        "plotly.graph_objs.choropleth.selected._marker.Marker": "plotly.graph_objs.choropleth.selected.Marker",
        "plotly.graph_objs.choropleth.unselected._marker.Marker": "plotly.graph_objs.choropleth.unselected.Marker",
        "plotly.graph_objs.choroplethmap._colorbar.ColorBar": "plotly.graph_objs.choroplethmap.ColorBar",
        "plotly.graph_objs.choroplethmap._hoverlabel.Hoverlabel": "plotly.graph_objs.choroplethmap.Hoverlabel",
        "plotly.graph_objs.choroplethmap._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.choroplethmap.Legendgrouptitle",
        "plotly.graph_objs.choroplethmap._marker.Marker": "plotly.graph_objs.choroplethmap.Marker",
        "plotly.graph_objs.choroplethmap._selected.Selected": "plotly.graph_objs.choroplethmap.Selected",
        "plotly.graph_objs.choroplethmap._stream.Stream": "plotly.graph_objs.choroplethmap.Stream",
        "plotly.graph_objs.choroplethmap._unselected.Unselected": "plotly.graph_objs.choroplethmap.Unselected",
        "plotly.graph_objs.choroplethmap.colorbar._tickfont.Tickfont": "plotly.graph_objs.choroplethmap.colorbar.Tickfont",
        "plotly.graph_objs.choroplethmap.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.choroplethmap.colorbar.Tickformatstop",
        "plotly.graph_objs.choroplethmap.colorbar._title.Title": "plotly.graph_objs.choroplethmap.colorbar.Title",
        "plotly.graph_objs.choroplethmap.colorbar.title._font.Font": "plotly.graph_objs.choroplethmap.colorbar.title.Font",
        "plotly.graph_objs.choroplethmap.hoverlabel._font.Font": "plotly.graph_objs.choroplethmap.hoverlabel.Font",
        "plotly.graph_objs.choroplethmap.legendgrouptitle._font.Font": "plotly.graph_objs.choroplethmap.legendgrouptitle.Font",
        "plotly.graph_objs.choroplethmap.marker._line.Line": "plotly.graph_objs.choroplethmap.marker.Line",
        "plotly.graph_objs.choroplethmap.selected._marker.Marker": "plotly.graph_objs.choroplethmap.selected.Marker",
        "plotly.graph_objs.choroplethmap.unselected._marker.Marker": "plotly.graph_objs.choroplethmap.unselected.Marker",
        "plotly.graph_objs.choroplethmapbox._colorbar.ColorBar": "plotly.graph_objs.choroplethmapbox.ColorBar",
        "plotly.graph_objs.choroplethmapbox._hoverlabel.Hoverlabel": "plotly.graph_objs.choroplethmapbox.Hoverlabel",
        "plotly.graph_objs.choroplethmapbox._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.choroplethmapbox.Legendgrouptitle",
        "plotly.graph_objs.choroplethmapbox._marker.Marker": "plotly.graph_objs.choroplethmapbox.Marker",
        "plotly.graph_objs.choroplethmapbox._selected.Selected": "plotly.graph_objs.choroplethmapbox.Selected",
        "plotly.graph_objs.choroplethmapbox._stream.Stream": "plotly.graph_objs.choroplethmapbox.Stream",
        "plotly.graph_objs.choroplethmapbox._unselected.Unselected": "plotly.graph_objs.choroplethmapbox.Unselected",
        "plotly.graph_objs.choroplethmapbox.colorbar._tickfont.Tickfont": "plotly.graph_objs.choroplethmapbox.colorbar.Tickfont",
        "plotly.graph_objs.choroplethmapbox.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.choroplethmapbox.colorbar.Tickformatstop",
        "plotly.graph_objs.choroplethmapbox.colorbar._title.Title": "plotly.graph_objs.choroplethmapbox.colorbar.Title",
        "plotly.graph_objs.choroplethmapbox.colorbar.title._font.Font": "plotly.graph_objs.choroplethmapbox.colorbar.title.Font",
        "plotly.graph_objs.choroplethmapbox.hoverlabel._font.Font": "plotly.graph_objs.choroplethmapbox.hoverlabel.Font",
        "plotly.graph_objs.choroplethmapbox.legendgrouptitle._font.Font": "plotly.graph_objs.choroplethmapbox.legendgrouptitle.Font",
        "plotly.graph_objs.choroplethmapbox.marker._line.Line": "plotly.graph_objs.choroplethmapbox.marker.Line",
        "plotly.graph_objs.choroplethmapbox.selected._marker.Marker": "plotly.graph_objs.choroplethmapbox.selected.Marker",
        "plotly.graph_objs.choroplethmapbox.unselected._marker.Marker": "plotly.graph_objs.choroplethmapbox.unselected.Marker",
        "plotly.graph_objs.cone._colorbar.ColorBar": "plotly.graph_objs.cone.ColorBar",
        "plotly.graph_objs.cone._hoverlabel.Hoverlabel": "plotly.graph_objs.cone.Hoverlabel",
        "plotly.graph_objs.cone._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.cone.Legendgrouptitle",
        "plotly.graph_objs.cone._lighting.Lighting": "plotly.graph_objs.cone.Lighting",
        "plotly.graph_objs.cone._lightposition.Lightposition": "plotly.graph_objs.cone.Lightposition",
        "plotly.graph_objs.cone._stream.Stream": "plotly.graph_objs.cone.Stream",
        "plotly.graph_objs.cone.colorbar._tickfont.Tickfont": "plotly.graph_objs.cone.colorbar.Tickfont",
        "plotly.graph_objs.cone.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.cone.colorbar.Tickformatstop",
        "plotly.graph_objs.cone.colorbar._title.Title": "plotly.graph_objs.cone.colorbar.Title",
        "plotly.graph_objs.cone.colorbar.title._font.Font": "plotly.graph_objs.cone.colorbar.title.Font",
        "plotly.graph_objs.cone.hoverlabel._font.Font": "plotly.graph_objs.cone.hoverlabel.Font",
        "plotly.graph_objs.cone.legendgrouptitle._font.Font": "plotly.graph_objs.cone.legendgrouptitle.Font",
        "plotly.graph_objs.contour._colorbar.ColorBar": "plotly.graph_objs.contour.ColorBar",
        "plotly.graph_objs.contour._contours.Contours": "plotly.graph_objs.contour.Contours",
        "plotly.graph_objs.contour._hoverlabel.Hoverlabel": "plotly.graph_objs.contour.Hoverlabel",
        "plotly.graph_objs.contour._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.contour.Legendgrouptitle",
        "plotly.graph_objs.contour._line.Line": "plotly.graph_objs.contour.Line",
        "plotly.graph_objs.contour._stream.Stream": "plotly.graph_objs.contour.Stream",
        "plotly.graph_objs.contour._textfont.Textfont": "plotly.graph_objs.contour.Textfont",
        "plotly.graph_objs.contour.colorbar._tickfont.Tickfont": "plotly.graph_objs.contour.colorbar.Tickfont",
        "plotly.graph_objs.contour.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.contour.colorbar.Tickformatstop",
        "plotly.graph_objs.contour.colorbar._title.Title": "plotly.graph_objs.contour.colorbar.Title",
        "plotly.graph_objs.contour.colorbar.title._font.Font": "plotly.graph_objs.contour.colorbar.title.Font",
        "plotly.graph_objs.contour.contours._labelfont.Labelfont": "plotly.graph_objs.contour.contours.Labelfont",
        "plotly.graph_objs.contour.hoverlabel._font.Font": "plotly.graph_objs.contour.hoverlabel.Font",
        "plotly.graph_objs.contour.legendgrouptitle._font.Font": "plotly.graph_objs.contour.legendgrouptitle.Font",
        "plotly.graph_objs.contourcarpet._colorbar.ColorBar": "plotly.graph_objs.contourcarpet.ColorBar",
        "plotly.graph_objs.contourcarpet._contours.Contours": "plotly.graph_objs.contourcarpet.Contours",
        "plotly.graph_objs.contourcarpet._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.contourcarpet.Legendgrouptitle",
        "plotly.graph_objs.contourcarpet._line.Line": "plotly.graph_objs.contourcarpet.Line",
        "plotly.graph_objs.contourcarpet._stream.Stream": "plotly.graph_objs.contourcarpet.Stream",
        "plotly.graph_objs.contourcarpet.colorbar._tickfont.Tickfont": "plotly.graph_objs.contourcarpet.colorbar.Tickfont",
        "plotly.graph_objs.contourcarpet.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.contourcarpet.colorbar.Tickformatstop",
        "plotly.graph_objs.contourcarpet.colorbar._title.Title": "plotly.graph_objs.contourcarpet.colorbar.Title",
        "plotly.graph_objs.contourcarpet.colorbar.title._font.Font": "plotly.graph_objs.contourcarpet.colorbar.title.Font",
        "plotly.graph_objs.contourcarpet.contours._labelfont.Labelfont": "plotly.graph_objs.contourcarpet.contours.Labelfont",
        "plotly.graph_objs.contourcarpet.legendgrouptitle._font.Font": "plotly.graph_objs.contourcarpet.legendgrouptitle.Font",
        "plotly.graph_objs.densitymap._colorbar.ColorBar": "plotly.graph_objs.densitymap.ColorBar",
        "plotly.graph_objs.densitymap._hoverlabel.Hoverlabel": "plotly.graph_objs.densitymap.Hoverlabel",
        "plotly.graph_objs.densitymap._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.densitymap.Legendgrouptitle",
        "plotly.graph_objs.densitymap._stream.Stream": "plotly.graph_objs.densitymap.Stream",
        "plotly.graph_objs.densitymap.colorbar._tickfont.Tickfont": "plotly.graph_objs.densitymap.colorbar.Tickfont",
        "plotly.graph_objs.densitymap.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.densitymap.colorbar.Tickformatstop",
        "plotly.graph_objs.densitymap.colorbar._title.Title": "plotly.graph_objs.densitymap.colorbar.Title",
        "plotly.graph_objs.densitymap.colorbar.title._font.Font": "plotly.graph_objs.densitymap.colorbar.title.Font",
        "plotly.graph_objs.densitymap.hoverlabel._font.Font": "plotly.graph_objs.densitymap.hoverlabel.Font",
        "plotly.graph_objs.densitymap.legendgrouptitle._font.Font": "plotly.graph_objs.densitymap.legendgrouptitle.Font",
        "plotly.graph_objs.densitymapbox._colorbar.ColorBar": "plotly.graph_objs.densitymapbox.ColorBar",
        "plotly.graph_objs.densitymapbox._hoverlabel.Hoverlabel": "plotly.graph_objs.densitymapbox.Hoverlabel",
        "plotly.graph_objs.densitymapbox._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.densitymapbox.Legendgrouptitle",
        "plotly.graph_objs.densitymapbox._stream.Stream": "plotly.graph_objs.densitymapbox.Stream",
        "plotly.graph_objs.densitymapbox.colorbar._tickfont.Tickfont": "plotly.graph_objs.densitymapbox.colorbar.Tickfont",
        "plotly.graph_objs.densitymapbox.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.densitymapbox.colorbar.Tickformatstop",
        "plotly.graph_objs.densitymapbox.colorbar._title.Title": "plotly.graph_objs.densitymapbox.colorbar.Title",
        "plotly.graph_objs.densitymapbox.colorbar.title._font.Font": "plotly.graph_objs.densitymapbox.colorbar.title.Font",
        "plotly.graph_objs.densitymapbox.hoverlabel._font.Font": "plotly.graph_objs.densitymapbox.hoverlabel.Font",
        "plotly.graph_objs.densitymapbox.legendgrouptitle._font.Font": "plotly.graph_objs.densitymapbox.legendgrouptitle.Font",
        "plotly.graph_objs.funnel._connector.Connector": "plotly.graph_objs.funnel.Connector",
        "plotly.graph_objs.funnel._hoverlabel.Hoverlabel": "plotly.graph_objs.funnel.Hoverlabel",
        "plotly.graph_objs.funnel._insidetextfont.Insidetextfont": "plotly.graph_objs.funnel.Insidetextfont",
        "plotly.graph_objs.funnel._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.funnel.Legendgrouptitle",
        "plotly.graph_objs.funnel._marker.Marker": "plotly.graph_objs.funnel.Marker",
        "plotly.graph_objs.funnel._outsidetextfont.Outsidetextfont": "plotly.graph_objs.funnel.Outsidetextfont",
        "plotly.graph_objs.funnel._stream.Stream": "plotly.graph_objs.funnel.Stream",
        "plotly.graph_objs.funnel._textfont.Textfont": "plotly.graph_objs.funnel.Textfont",
        "plotly.graph_objs.funnel.connector._line.Line": "plotly.graph_objs.funnel.connector.Line",
        "plotly.graph_objs.funnel.hoverlabel._font.Font": "plotly.graph_objs.funnel.hoverlabel.Font",
        "plotly.graph_objs.funnel.legendgrouptitle._font.Font": "plotly.graph_objs.funnel.legendgrouptitle.Font",
        "plotly.graph_objs.funnel.marker._colorbar.ColorBar": "plotly.graph_objs.funnel.marker.ColorBar",
        "plotly.graph_objs.funnel.marker._line.Line": "plotly.graph_objs.funnel.marker.Line",
        "plotly.graph_objs.funnel.marker.colorbar._tickfont.Tickfont": "plotly.graph_objs.funnel.marker.colorbar.Tickfont",
        "plotly.graph_objs.funnel.marker.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.funnel.marker.colorbar.Tickformatstop",
        "plotly.graph_objs.funnel.marker.colorbar._title.Title": "plotly.graph_objs.funnel.marker.colorbar.Title",
        "plotly.graph_objs.funnel.marker.colorbar.title._font.Font": "plotly.graph_objs.funnel.marker.colorbar.title.Font",
        "plotly.graph_objs.funnelarea._domain.Domain": "plotly.graph_objs.funnelarea.Domain",
        "plotly.graph_objs.funnelarea._hoverlabel.Hoverlabel": "plotly.graph_objs.funnelarea.Hoverlabel",
        "plotly.graph_objs.funnelarea._insidetextfont.Insidetextfont": "plotly.graph_objs.funnelarea.Insidetextfont",
        "plotly.graph_objs.funnelarea._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.funnelarea.Legendgrouptitle",
        "plotly.graph_objs.funnelarea._marker.Marker": "plotly.graph_objs.funnelarea.Marker",
        "plotly.graph_objs.funnelarea._stream.Stream": "plotly.graph_objs.funnelarea.Stream",
        "plotly.graph_objs.funnelarea._textfont.Textfont": "plotly.graph_objs.funnelarea.Textfont",
        "plotly.graph_objs.funnelarea._title.Title": "plotly.graph_objs.funnelarea.Title",
        "plotly.graph_objs.funnelarea.hoverlabel._font.Font": "plotly.graph_objs.funnelarea.hoverlabel.Font",
        "plotly.graph_objs.funnelarea.legendgrouptitle._font.Font": "plotly.graph_objs.funnelarea.legendgrouptitle.Font",
        "plotly.graph_objs.funnelarea.marker._line.Line": "plotly.graph_objs.funnelarea.marker.Line",
        "plotly.graph_objs.funnelarea.marker._pattern.Pattern": "plotly.graph_objs.funnelarea.marker.Pattern",
        "plotly.graph_objs.funnelarea.title._font.Font": "plotly.graph_objs.funnelarea.title.Font",
        "plotly.graph_objs.heatmap._colorbar.ColorBar": "plotly.graph_objs.heatmap.ColorBar",
        "plotly.graph_objs.heatmap._hoverlabel.Hoverlabel": "plotly.graph_objs.heatmap.Hoverlabel",
        "plotly.graph_objs.heatmap._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.heatmap.Legendgrouptitle",
        "plotly.graph_objs.heatmap._stream.Stream": "plotly.graph_objs.heatmap.Stream",
        "plotly.graph_objs.heatmap._textfont.Textfont": "plotly.graph_objs.heatmap.Textfont",
        "plotly.graph_objs.heatmap.colorbar._tickfont.Tickfont": "plotly.graph_objs.heatmap.colorbar.Tickfont",
        "plotly.graph_objs.heatmap.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.heatmap.colorbar.Tickformatstop",
        "plotly.graph_objs.heatmap.colorbar._title.Title": "plotly.graph_objs.heatmap.colorbar.Title",
        "plotly.graph_objs.heatmap.colorbar.title._font.Font": "plotly.graph_objs.heatmap.colorbar.title.Font",
        "plotly.graph_objs.heatmap.hoverlabel._font.Font": "plotly.graph_objs.heatmap.hoverlabel.Font",
        "plotly.graph_objs.heatmap.legendgrouptitle._font.Font": "plotly.graph_objs.heatmap.legendgrouptitle.Font",
        "plotly.graph_objs.heatmapgl._colorbar.ColorBar": "plotly.graph_objs.heatmapgl.ColorBar",
        "plotly.graph_objs.heatmapgl._hoverlabel.Hoverlabel": "plotly.graph_objs.heatmapgl.Hoverlabel",
        "plotly.graph_objs.heatmapgl._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.heatmapgl.Legendgrouptitle",
        "plotly.graph_objs.heatmapgl._stream.Stream": "plotly.graph_objs.heatmapgl.Stream",
        "plotly.graph_objs.heatmapgl.colorbar._tickfont.Tickfont": "plotly.graph_objs.heatmapgl.colorbar.Tickfont",
        "plotly.graph_objs.heatmapgl.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.heatmapgl.colorbar.Tickformatstop",
        "plotly.graph_objs.heatmapgl.colorbar._title.Title": "plotly.graph_objs.heatmapgl.colorbar.Title",
        "plotly.graph_objs.heatmapgl.colorbar.title._font.Font": "plotly.graph_objs.heatmapgl.colorbar.title.Font",
        "plotly.graph_objs.heatmapgl.hoverlabel._font.Font": "plotly.graph_objs.heatmapgl.hoverlabel.Font",
        "plotly.graph_objs.heatmapgl.legendgrouptitle._font.Font": "plotly.graph_objs.heatmapgl.legendgrouptitle.Font",
        "plotly.graph_objs.histogram._cumulative.Cumulative": "plotly.graph_objs.histogram.Cumulative",
        "plotly.graph_objs.histogram._error_x.ErrorX": "plotly.graph_objs.histogram.ErrorX",
        "plotly.graph_objs.histogram._error_y.ErrorY": "plotly.graph_objs.histogram.ErrorY",
        "plotly.graph_objs.histogram._hoverlabel.Hoverlabel": "plotly.graph_objs.histogram.Hoverlabel",
        "plotly.graph_objs.histogram._insidetextfont.Insidetextfont": "plotly.graph_objs.histogram.Insidetextfont",
        "plotly.graph_objs.histogram._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.histogram.Legendgrouptitle",
        "plotly.graph_objs.histogram._marker.Marker": "plotly.graph_objs.histogram.Marker",
        "plotly.graph_objs.histogram._outsidetextfont.Outsidetextfont": "plotly.graph_objs.histogram.Outsidetextfont",
        "plotly.graph_objs.histogram._selected.Selected": "plotly.graph_objs.histogram.Selected",
        "plotly.graph_objs.histogram._stream.Stream": "plotly.graph_objs.histogram.Stream",
        "plotly.graph_objs.histogram._textfont.Textfont": "plotly.graph_objs.histogram.Textfont",
        "plotly.graph_objs.histogram._unselected.Unselected": "plotly.graph_objs.histogram.Unselected",
        "plotly.graph_objs.histogram._xbins.XBins": "plotly.graph_objs.histogram.XBins",
        "plotly.graph_objs.histogram._ybins.YBins": "plotly.graph_objs.histogram.YBins",
        "plotly.graph_objs.histogram.hoverlabel._font.Font": "plotly.graph_objs.histogram.hoverlabel.Font",
        "plotly.graph_objs.histogram.legendgrouptitle._font.Font": "plotly.graph_objs.histogram.legendgrouptitle.Font",
        "plotly.graph_objs.histogram.marker._colorbar.ColorBar": "plotly.graph_objs.histogram.marker.ColorBar",
        "plotly.graph_objs.histogram.marker._line.Line": "plotly.graph_objs.histogram.marker.Line",
        "plotly.graph_objs.histogram.marker._pattern.Pattern": "plotly.graph_objs.histogram.marker.Pattern",
        "plotly.graph_objs.histogram.marker.colorbar._tickfont.Tickfont": "plotly.graph_objs.histogram.marker.colorbar.Tickfont",
        "plotly.graph_objs.histogram.marker.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.histogram.marker.colorbar.Tickformatstop",
        "plotly.graph_objs.histogram.marker.colorbar._title.Title": "plotly.graph_objs.histogram.marker.colorbar.Title",
        "plotly.graph_objs.histogram.marker.colorbar.title._font.Font": "plotly.graph_objs.histogram.marker.colorbar.title.Font",
        "plotly.graph_objs.histogram.selected._marker.Marker": "plotly.graph_objs.histogram.selected.Marker",
        "plotly.graph_objs.histogram.selected._textfont.Textfont": "plotly.graph_objs.histogram.selected.Textfont",
        "plotly.graph_objs.histogram.unselected._marker.Marker": "plotly.graph_objs.histogram.unselected.Marker",
        "plotly.graph_objs.histogram.unselected._textfont.Textfont": "plotly.graph_objs.histogram.unselected.Textfont",
        "plotly.graph_objs.histogram2d._colorbar.ColorBar": "plotly.graph_objs.histogram2d.ColorBar",
        "plotly.graph_objs.histogram2d._hoverlabel.Hoverlabel": "plotly.graph_objs.histogram2d.Hoverlabel",
        "plotly.graph_objs.histogram2d._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.histogram2d.Legendgrouptitle",
        "plotly.graph_objs.histogram2d._marker.Marker": "plotly.graph_objs.histogram2d.Marker",
        "plotly.graph_objs.histogram2d._stream.Stream": "plotly.graph_objs.histogram2d.Stream",
        "plotly.graph_objs.histogram2d._textfont.Textfont": "plotly.graph_objs.histogram2d.Textfont",
        "plotly.graph_objs.histogram2d._xbins.XBins": "plotly.graph_objs.histogram2d.XBins",
        "plotly.graph_objs.histogram2d._ybins.YBins": "plotly.graph_objs.histogram2d.YBins",
        "plotly.graph_objs.histogram2d.colorbar._tickfont.Tickfont": "plotly.graph_objs.histogram2d.colorbar.Tickfont",
        "plotly.graph_objs.histogram2d.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.histogram2d.colorbar.Tickformatstop",
        "plotly.graph_objs.histogram2d.colorbar._title.Title": "plotly.graph_objs.histogram2d.colorbar.Title",
        "plotly.graph_objs.histogram2d.colorbar.title._font.Font": "plotly.graph_objs.histogram2d.colorbar.title.Font",
        "plotly.graph_objs.histogram2d.hoverlabel._font.Font": "plotly.graph_objs.histogram2d.hoverlabel.Font",
        "plotly.graph_objs.histogram2d.legendgrouptitle._font.Font": "plotly.graph_objs.histogram2d.legendgrouptitle.Font",
        "plotly.graph_objs.histogram2dcontour._colorbar.ColorBar": "plotly.graph_objs.histogram2dcontour.ColorBar",
        "plotly.graph_objs.histogram2dcontour._contours.Contours": "plotly.graph_objs.histogram2dcontour.Contours",
        "plotly.graph_objs.histogram2dcontour._hoverlabel.Hoverlabel": "plotly.graph_objs.histogram2dcontour.Hoverlabel",
        "plotly.graph_objs.histogram2dcontour._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.histogram2dcontour.Legendgrouptitle",
        "plotly.graph_objs.histogram2dcontour._line.Line": "plotly.graph_objs.histogram2dcontour.Line",
        "plotly.graph_objs.histogram2dcontour._marker.Marker": "plotly.graph_objs.histogram2dcontour.Marker",
        "plotly.graph_objs.histogram2dcontour._stream.Stream": "plotly.graph_objs.histogram2dcontour.Stream",
        "plotly.graph_objs.histogram2dcontour._textfont.Textfont": "plotly.graph_objs.histogram2dcontour.Textfont",
        "plotly.graph_objs.histogram2dcontour._xbins.XBins": "plotly.graph_objs.histogram2dcontour.XBins",
        "plotly.graph_objs.histogram2dcontour._ybins.YBins": "plotly.graph_objs.histogram2dcontour.YBins",
        "plotly.graph_objs.histogram2dcontour.colorbar._tickfont.Tickfont": "plotly.graph_objs.histogram2dcontour.colorbar.Tickfont",
        "plotly.graph_objs.histogram2dcontour.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.histogram2dcontour.colorbar.Tickformatstop",
        "plotly.graph_objs.histogram2dcontour.colorbar._title.Title": "plotly.graph_objs.histogram2dcontour.colorbar.Title",
        "plotly.graph_objs.histogram2dcontour.colorbar.title._font.Font": "plotly.graph_objs.histogram2dcontour.colorbar.title.Font",
        "plotly.graph_objs.histogram2dcontour.contours._labelfont.Labelfont": "plotly.graph_objs.histogram2dcontour.contours.Labelfont",
        "plotly.graph_objs.histogram2dcontour.hoverlabel._font.Font": "plotly.graph_objs.histogram2dcontour.hoverlabel.Font",
        "plotly.graph_objs.histogram2dcontour.legendgrouptitle._font.Font": "plotly.graph_objs.histogram2dcontour.legendgrouptitle.Font",
        "plotly.graph_objs.icicle._domain.Domain": "plotly.graph_objs.icicle.Domain",
        "plotly.graph_objs.icicle._hoverlabel.Hoverlabel": "plotly.graph_objs.icicle.Hoverlabel",
        "plotly.graph_objs.icicle._insidetextfont.Insidetextfont": "plotly.graph_objs.icicle.Insidetextfont",
        "plotly.graph_objs.icicle._leaf.Leaf": "plotly.graph_objs.icicle.Leaf",
        "plotly.graph_objs.icicle._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.icicle.Legendgrouptitle",
        "plotly.graph_objs.icicle._marker.Marker": "plotly.graph_objs.icicle.Marker",
        "plotly.graph_objs.icicle._outsidetextfont.Outsidetextfont": "plotly.graph_objs.icicle.Outsidetextfont",
        "plotly.graph_objs.icicle._pathbar.Pathbar": "plotly.graph_objs.icicle.Pathbar",
        "plotly.graph_objs.icicle._root.Root": "plotly.graph_objs.icicle.Root",
        "plotly.graph_objs.icicle._stream.Stream": "plotly.graph_objs.icicle.Stream",
        "plotly.graph_objs.icicle._textfont.Textfont": "plotly.graph_objs.icicle.Textfont",
        "plotly.graph_objs.icicle._tiling.Tiling": "plotly.graph_objs.icicle.Tiling",
        "plotly.graph_objs.icicle.hoverlabel._font.Font": "plotly.graph_objs.icicle.hoverlabel.Font",
        "plotly.graph_objs.icicle.legendgrouptitle._font.Font": "plotly.graph_objs.icicle.legendgrouptitle.Font",
        "plotly.graph_objs.icicle.marker._colorbar.ColorBar": "plotly.graph_objs.icicle.marker.ColorBar",
        "plotly.graph_objs.icicle.marker._line.Line": "plotly.graph_objs.icicle.marker.Line",
        "plotly.graph_objs.icicle.marker._pattern.Pattern": "plotly.graph_objs.icicle.marker.Pattern",
        "plotly.graph_objs.icicle.marker.colorbar._tickfont.Tickfont": "plotly.graph_objs.icicle.marker.colorbar.Tickfont",
        "plotly.graph_objs.icicle.marker.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.icicle.marker.colorbar.Tickformatstop",
        "plotly.graph_objs.icicle.marker.colorbar._title.Title": "plotly.graph_objs.icicle.marker.colorbar.Title",
        "plotly.graph_objs.icicle.marker.colorbar.title._font.Font": "plotly.graph_objs.icicle.marker.colorbar.title.Font",
        "plotly.graph_objs.icicle.pathbar._textfont.Textfont": "plotly.graph_objs.icicle.pathbar.Textfont",
        "plotly.graph_objs.image._hoverlabel.Hoverlabel": "plotly.graph_objs.image.Hoverlabel",
        "plotly.graph_objs.image._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.image.Legendgrouptitle",
        "plotly.graph_objs.image._stream.Stream": "plotly.graph_objs.image.Stream",
        "plotly.graph_objs.image.hoverlabel._font.Font": "plotly.graph_objs.image.hoverlabel.Font",
        "plotly.graph_objs.image.legendgrouptitle._font.Font": "plotly.graph_objs.image.legendgrouptitle.Font",
        "plotly.graph_objs.indicator._delta.Delta": "plotly.graph_objs.indicator.Delta",
        "plotly.graph_objs.indicator._domain.Domain": "plotly.graph_objs.indicator.Domain",
        "plotly.graph_objs.indicator._gauge.Gauge": "plotly.graph_objs.indicator.Gauge",
        "plotly.graph_objs.indicator._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.indicator.Legendgrouptitle",
        "plotly.graph_objs.indicator._number.Number": "plotly.graph_objs.indicator.Number",
        "plotly.graph_objs.indicator._stream.Stream": "plotly.graph_objs.indicator.Stream",
        "plotly.graph_objs.indicator._title.Title": "plotly.graph_objs.indicator.Title",
        "plotly.graph_objs.indicator.delta._decreasing.Decreasing": "plotly.graph_objs.indicator.delta.Decreasing",
        "plotly.graph_objs.indicator.delta._font.Font": "plotly.graph_objs.indicator.delta.Font",
        "plotly.graph_objs.indicator.delta._increasing.Increasing": "plotly.graph_objs.indicator.delta.Increasing",
        "plotly.graph_objs.indicator.gauge._axis.Axis": "plotly.graph_objs.indicator.gauge.Axis",
        "plotly.graph_objs.indicator.gauge._bar.Bar": "plotly.graph_objs.indicator.gauge.Bar",
        "plotly.graph_objs.indicator.gauge._step.Step": "plotly.graph_objs.indicator.gauge.Step",
        "plotly.graph_objs.indicator.gauge._threshold.Threshold": "plotly.graph_objs.indicator.gauge.Threshold",
        "plotly.graph_objs.indicator.gauge.axis._tickfont.Tickfont": "plotly.graph_objs.indicator.gauge.axis.Tickfont",
        "plotly.graph_objs.indicator.gauge.axis._tickformatstop.Tickformatstop": "plotly.graph_objs.indicator.gauge.axis.Tickformatstop",
        "plotly.graph_objs.indicator.gauge.bar._line.Line": "plotly.graph_objs.indicator.gauge.bar.Line",
        "plotly.graph_objs.indicator.gauge.step._line.Line": "plotly.graph_objs.indicator.gauge.step.Line",
        "plotly.graph_objs.indicator.gauge.threshold._line.Line": "plotly.graph_objs.indicator.gauge.threshold.Line",
        "plotly.graph_objs.indicator.legendgrouptitle._font.Font": "plotly.graph_objs.indicator.legendgrouptitle.Font",
        "plotly.graph_objs.indicator.number._font.Font": "plotly.graph_objs.indicator.number.Font",
        "plotly.graph_objs.indicator.title._font.Font": "plotly.graph_objs.indicator.title.Font",
        "plotly.graph_objs.isosurface._caps.Caps": "plotly.graph_objs.isosurface.Caps",
        "plotly.graph_objs.isosurface._colorbar.ColorBar": "plotly.graph_objs.isosurface.ColorBar",
        "plotly.graph_objs.isosurface._contour.Contour": "plotly.graph_objs.isosurface.Contour",
        "plotly.graph_objs.isosurface._hoverlabel.Hoverlabel": "plotly.graph_objs.isosurface.Hoverlabel",
        "plotly.graph_objs.isosurface._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.isosurface.Legendgrouptitle",
        "plotly.graph_objs.isosurface._lighting.Lighting": "plotly.graph_objs.isosurface.Lighting",
        "plotly.graph_objs.isosurface._lightposition.Lightposition": "plotly.graph_objs.isosurface.Lightposition",
        "plotly.graph_objs.isosurface._slices.Slices": "plotly.graph_objs.isosurface.Slices",
        "plotly.graph_objs.isosurface._spaceframe.Spaceframe": "plotly.graph_objs.isosurface.Spaceframe",
        "plotly.graph_objs.isosurface._stream.Stream": "plotly.graph_objs.isosurface.Stream",
        "plotly.graph_objs.isosurface._surface.Surface": "plotly.graph_objs.isosurface.Surface",
        "plotly.graph_objs.isosurface.caps._x.X": "plotly.graph_objs.isosurface.caps.X",
        "plotly.graph_objs.isosurface.caps._y.Y": "plotly.graph_objs.isosurface.caps.Y",
        "plotly.graph_objs.isosurface.caps._z.Z": "plotly.graph_objs.isosurface.caps.Z",
        "plotly.graph_objs.isosurface.colorbar._tickfont.Tickfont": "plotly.graph_objs.isosurface.colorbar.Tickfont",
        "plotly.graph_objs.isosurface.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.isosurface.colorbar.Tickformatstop",
        "plotly.graph_objs.isosurface.colorbar._title.Title": "plotly.graph_objs.isosurface.colorbar.Title",
        "plotly.graph_objs.isosurface.colorbar.title._font.Font": "plotly.graph_objs.isosurface.colorbar.title.Font",
        "plotly.graph_objs.isosurface.hoverlabel._font.Font": "plotly.graph_objs.isosurface.hoverlabel.Font",
        "plotly.graph_objs.isosurface.legendgrouptitle._font.Font": "plotly.graph_objs.isosurface.legendgrouptitle.Font",
        "plotly.graph_objs.isosurface.slices._x.X": "plotly.graph_objs.isosurface.slices.X",
        "plotly.graph_objs.isosurface.slices._y.Y": "plotly.graph_objs.isosurface.slices.Y",
        "plotly.graph_objs.isosurface.slices._z.Z": "plotly.graph_objs.isosurface.slices.Z",
        "plotly.graph_objs.layout._activeselection.Activeselection": "plotly.graph_objs.layout.Activeselection",
        "plotly.graph_objs.layout._activeshape.Activeshape": "plotly.graph_objs.layout.Activeshape",
        "plotly.graph_objs.layout._annotation.Annotation": "plotly.graph_objs.layout.Annotation",
        "plotly.graph_objs.layout._coloraxis.Coloraxis": "plotly.graph_objs.layout.Coloraxis",
        "plotly.graph_objs.layout._colorscale.Colorscale": "plotly.graph_objs.layout.Colorscale",
        "plotly.graph_objs.layout._font.Font": "plotly.graph_objs.layout.Font",
        "plotly.graph_objs.layout._geo.Geo": "plotly.graph_objs.layout.Geo",
        "plotly.graph_objs.layout._grid.Grid": "plotly.graph_objs.layout.Grid",
        "plotly.graph_objs.layout._hoverlabel.Hoverlabel": "plotly.graph_objs.layout.Hoverlabel",
        "plotly.graph_objs.layout._image.Image": "plotly.graph_objs.layout.Image",
        "plotly.graph_objs.layout._legend.Legend": "plotly.graph_objs.layout.Legend",
        "plotly.graph_objs.layout._map.Map": "plotly.graph_objs.layout.Map",
        "plotly.graph_objs.layout._mapbox.Mapbox": "plotly.graph_objs.layout.Mapbox",
        "plotly.graph_objs.layout._margin.Margin": "plotly.graph_objs.layout.Margin",
        "plotly.graph_objs.layout._modebar.Modebar": "plotly.graph_objs.layout.Modebar",
        "plotly.graph_objs.layout._newselection.Newselection": "plotly.graph_objs.layout.Newselection",
        "plotly.graph_objs.layout._newshape.Newshape": "plotly.graph_objs.layout.Newshape",
        "plotly.graph_objs.layout._polar.Polar": "plotly.graph_objs.layout.Polar",
        "plotly.graph_objs.layout._scene.Scene": "plotly.graph_objs.layout.Scene",
        "plotly.graph_objs.layout._selection.Selection": "plotly.graph_objs.layout.Selection",
        "plotly.graph_objs.layout._shape.Shape": "plotly.graph_objs.layout.Shape",
        "plotly.graph_objs.layout._slider.Slider": "plotly.graph_objs.layout.Slider",
        "plotly.graph_objs.layout._smith.Smith": "plotly.graph_objs.layout.Smith",
        "plotly.graph_objs.layout._template.Template": "plotly.graph_objs.layout.Template",
        "plotly.graph_objs.layout._ternary.Ternary": "plotly.graph_objs.layout.Ternary",
        "plotly.graph_objs.layout._title.Title": "plotly.graph_objs.layout.Title",
        "plotly.graph_objs.layout._transition.Transition": "plotly.graph_objs.layout.Transition",
        "plotly.graph_objs.layout._uniformtext.Uniformtext": "plotly.graph_objs.layout.Uniformtext",
        "plotly.graph_objs.layout._updatemenu.Updatemenu": "plotly.graph_objs.layout.Updatemenu",
        "plotly.graph_objs.layout._xaxis.XAxis": "plotly.graph_objs.layout.XAxis",
        "plotly.graph_objs.layout._yaxis.YAxis": "plotly.graph_objs.layout.YAxis",
        "plotly.graph_objs.layout.annotation._font.Font": "plotly.graph_objs.layout.annotation.Font",
        "plotly.graph_objs.layout.annotation._hoverlabel.Hoverlabel": "plotly.graph_objs.layout.annotation.Hoverlabel",
        "plotly.graph_objs.layout.annotation.hoverlabel._font.Font": "plotly.graph_objs.layout.annotation.hoverlabel.Font",
        "plotly.graph_objs.layout.coloraxis._colorbar.ColorBar": "plotly.graph_objs.layout.coloraxis.ColorBar",
        "plotly.graph_objs.layout.coloraxis.colorbar._tickfont.Tickfont": "plotly.graph_objs.layout.coloraxis.colorbar.Tickfont",
        "plotly.graph_objs.layout.coloraxis.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.layout.coloraxis.colorbar.Tickformatstop",
        "plotly.graph_objs.layout.coloraxis.colorbar._title.Title": "plotly.graph_objs.layout.coloraxis.colorbar.Title",
        "plotly.graph_objs.layout.coloraxis.colorbar.title._font.Font": "plotly.graph_objs.layout.coloraxis.colorbar.title.Font",
        "plotly.graph_objs.layout.geo._center.Center": "plotly.graph_objs.layout.geo.Center",
        "plotly.graph_objs.layout.geo._domain.Domain": "plotly.graph_objs.layout.geo.Domain",
        "plotly.graph_objs.layout.geo._lataxis.Lataxis": "plotly.graph_objs.layout.geo.Lataxis",
        "plotly.graph_objs.layout.geo._lonaxis.Lonaxis": "plotly.graph_objs.layout.geo.Lonaxis",
        "plotly.graph_objs.layout.geo._projection.Projection": "plotly.graph_objs.layout.geo.Projection",
        "plotly.graph_objs.layout.geo.projection._rotation.Rotation": "plotly.graph_objs.layout.geo.projection.Rotation",
        "plotly.graph_objs.layout.grid._domain.Domain": "plotly.graph_objs.layout.grid.Domain",
        "plotly.graph_objs.layout.hoverlabel._font.Font": "plotly.graph_objs.layout.hoverlabel.Font",
        "plotly.graph_objs.layout.hoverlabel._grouptitlefont.Grouptitlefont": "plotly.graph_objs.layout.hoverlabel.Grouptitlefont",
        "plotly.graph_objs.layout.legend._font.Font": "plotly.graph_objs.layout.legend.Font",
        "plotly.graph_objs.layout.legend._grouptitlefont.Grouptitlefont": "plotly.graph_objs.layout.legend.Grouptitlefont",
        "plotly.graph_objs.layout.legend._title.Title": "plotly.graph_objs.layout.legend.Title",
        "plotly.graph_objs.layout.legend.title._font.Font": "plotly.graph_objs.layout.legend.title.Font",
        "plotly.graph_objs.layout.map._bounds.Bounds": "plotly.graph_objs.layout.map.Bounds",
        "plotly.graph_objs.layout.map._center.Center": "plotly.graph_objs.layout.map.Center",
        "plotly.graph_objs.layout.map._domain.Domain": "plotly.graph_objs.layout.map.Domain",
        "plotly.graph_objs.layout.map._layer.Layer": "plotly.graph_objs.layout.map.Layer",
        "plotly.graph_objs.layout.map.layer._circle.Circle": "plotly.graph_objs.layout.map.layer.Circle",
        "plotly.graph_objs.layout.map.layer._fill.Fill": "plotly.graph_objs.layout.map.layer.Fill",
        "plotly.graph_objs.layout.map.layer._line.Line": "plotly.graph_objs.layout.map.layer.Line",
        "plotly.graph_objs.layout.map.layer._symbol.Symbol": "plotly.graph_objs.layout.map.layer.Symbol",
        "plotly.graph_objs.layout.map.layer.symbol._textfont.Textfont": "plotly.graph_objs.layout.map.layer.symbol.Textfont",
        "plotly.graph_objs.layout.mapbox._bounds.Bounds": "plotly.graph_objs.layout.mapbox.Bounds",
        "plotly.graph_objs.layout.mapbox._center.Center": "plotly.graph_objs.layout.mapbox.Center",
        "plotly.graph_objs.layout.mapbox._domain.Domain": "plotly.graph_objs.layout.mapbox.Domain",
        "plotly.graph_objs.layout.mapbox._layer.Layer": "plotly.graph_objs.layout.mapbox.Layer",
        "plotly.graph_objs.layout.mapbox.layer._circle.Circle": "plotly.graph_objs.layout.mapbox.layer.Circle",
        "plotly.graph_objs.layout.mapbox.layer._fill.Fill": "plotly.graph_objs.layout.mapbox.layer.Fill",
        "plotly.graph_objs.layout.mapbox.layer._line.Line": "plotly.graph_objs.layout.mapbox.layer.Line",
        "plotly.graph_objs.layout.mapbox.layer._symbol.Symbol": "plotly.graph_objs.layout.mapbox.layer.Symbol",
        "plotly.graph_objs.layout.mapbox.layer.symbol._textfont.Textfont": "plotly.graph_objs.layout.mapbox.layer.symbol.Textfont",
        "plotly.graph_objs.layout.newselection._line.Line": "plotly.graph_objs.layout.newselection.Line",
        "plotly.graph_objs.layout.newshape._label.Label": "plotly.graph_objs.layout.newshape.Label",
        "plotly.graph_objs.layout.newshape._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.layout.newshape.Legendgrouptitle",
        "plotly.graph_objs.layout.newshape._line.Line": "plotly.graph_objs.layout.newshape.Line",
        "plotly.graph_objs.layout.newshape.label._font.Font": "plotly.graph_objs.layout.newshape.label.Font",
        "plotly.graph_objs.layout.newshape.legendgrouptitle._font.Font": "plotly.graph_objs.layout.newshape.legendgrouptitle.Font",
        "plotly.graph_objs.layout.polar._angularaxis.AngularAxis": "plotly.graph_objs.layout.polar.AngularAxis",
        "plotly.graph_objs.layout.polar._domain.Domain": "plotly.graph_objs.layout.polar.Domain",
        "plotly.graph_objs.layout.polar._radialaxis.RadialAxis": "plotly.graph_objs.layout.polar.RadialAxis",
        "plotly.graph_objs.layout.polar.angularaxis._tickfont.Tickfont": "plotly.graph_objs.layout.polar.angularaxis.Tickfont",
        "plotly.graph_objs.layout.polar.angularaxis._tickformatstop.Tickformatstop": "plotly.graph_objs.layout.polar.angularaxis.Tickformatstop",
        "plotly.graph_objs.layout.polar.radialaxis._autorangeoptions.Autorangeoptions": "plotly.graph_objs.layout.polar.radialaxis.Autorangeoptions",
        "plotly.graph_objs.layout.polar.radialaxis._tickfont.Tickfont": "plotly.graph_objs.layout.polar.radialaxis.Tickfont",
        "plotly.graph_objs.layout.polar.radialaxis._tickformatstop.Tickformatstop": "plotly.graph_objs.layout.polar.radialaxis.Tickformatstop",
        "plotly.graph_objs.layout.polar.radialaxis._title.Title": "plotly.graph_objs.layout.polar.radialaxis.Title",
        "plotly.graph_objs.layout.polar.radialaxis.title._font.Font": "plotly.graph_objs.layout.polar.radialaxis.title.Font",
        "plotly.graph_objs.layout.scene._annotation.Annotation": "plotly.graph_objs.layout.scene.Annotation",
        "plotly.graph_objs.layout.scene._aspectratio.Aspectratio": "plotly.graph_objs.layout.scene.Aspectratio",
        "plotly.graph_objs.layout.scene._camera.Camera": "plotly.graph_objs.layout.scene.Camera",
        "plotly.graph_objs.layout.scene._domain.Domain": "plotly.graph_objs.layout.scene.Domain",
        "plotly.graph_objs.layout.scene._xaxis.XAxis": "plotly.graph_objs.layout.scene.XAxis",
        "plotly.graph_objs.layout.scene._yaxis.YAxis": "plotly.graph_objs.layout.scene.YAxis",
        "plotly.graph_objs.layout.scene._zaxis.ZAxis": "plotly.graph_objs.layout.scene.ZAxis",
        "plotly.graph_objs.layout.scene.annotation._font.Font": "plotly.graph_objs.layout.scene.annotation.Font",
        "plotly.graph_objs.layout.scene.annotation._hoverlabel.Hoverlabel": "plotly.graph_objs.layout.scene.annotation.Hoverlabel",
        "plotly.graph_objs.layout.scene.annotation.hoverlabel._font.Font": "plotly.graph_objs.layout.scene.annotation.hoverlabel.Font",
        "plotly.graph_objs.layout.scene.camera._center.Center": "plotly.graph_objs.layout.scene.camera.Center",
        "plotly.graph_objs.layout.scene.camera._eye.Eye": "plotly.graph_objs.layout.scene.camera.Eye",
        "plotly.graph_objs.layout.scene.camera._projection.Projection": "plotly.graph_objs.layout.scene.camera.Projection",
        "plotly.graph_objs.layout.scene.camera._up.Up": "plotly.graph_objs.layout.scene.camera.Up",
        "plotly.graph_objs.layout.scene.xaxis._autorangeoptions.Autorangeoptions": "plotly.graph_objs.layout.scene.xaxis.Autorangeoptions",
        "plotly.graph_objs.layout.scene.xaxis._tickfont.Tickfont": "plotly.graph_objs.layout.scene.xaxis.Tickfont",
        "plotly.graph_objs.layout.scene.xaxis._tickformatstop.Tickformatstop": "plotly.graph_objs.layout.scene.xaxis.Tickformatstop",
        "plotly.graph_objs.layout.scene.xaxis._title.Title": "plotly.graph_objs.layout.scene.xaxis.Title",
        "plotly.graph_objs.layout.scene.xaxis.title._font.Font": "plotly.graph_objs.layout.scene.xaxis.title.Font",
        "plotly.graph_objs.layout.scene.yaxis._autorangeoptions.Autorangeoptions": "plotly.graph_objs.layout.scene.yaxis.Autorangeoptions",
        "plotly.graph_objs.layout.scene.yaxis._tickfont.Tickfont": "plotly.graph_objs.layout.scene.yaxis.Tickfont",
        "plotly.graph_objs.layout.scene.yaxis._tickformatstop.Tickformatstop": "plotly.graph_objs.layout.scene.yaxis.Tickformatstop",
        "plotly.graph_objs.layout.scene.yaxis._title.Title": "plotly.graph_objs.layout.scene.yaxis.Title",
        "plotly.graph_objs.layout.scene.yaxis.title._font.Font": "plotly.graph_objs.layout.scene.yaxis.title.Font",
        "plotly.graph_objs.layout.scene.zaxis._autorangeoptions.Autorangeoptions": "plotly.graph_objs.layout.scene.zaxis.Autorangeoptions",
        "plotly.graph_objs.layout.scene.zaxis._tickfont.Tickfont": "plotly.graph_objs.layout.scene.zaxis.Tickfont",
        "plotly.graph_objs.layout.scene.zaxis._tickformatstop.Tickformatstop": "plotly.graph_objs.layout.scene.zaxis.Tickformatstop",
        "plotly.graph_objs.layout.scene.zaxis._title.Title": "plotly.graph_objs.layout.scene.zaxis.Title",
        "plotly.graph_objs.layout.scene.zaxis.title._font.Font": "plotly.graph_objs.layout.scene.zaxis.title.Font",
        "plotly.graph_objs.layout.selection._line.Line": "plotly.graph_objs.layout.selection.Line",
        "plotly.graph_objs.layout.shape._label.Label": "plotly.graph_objs.layout.shape.Label",
        "plotly.graph_objs.layout.shape._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.layout.shape.Legendgrouptitle",
        "plotly.graph_objs.layout.shape._line.Line": "plotly.graph_objs.layout.shape.Line",
        "plotly.graph_objs.layout.shape.label._font.Font": "plotly.graph_objs.layout.shape.label.Font",
        "plotly.graph_objs.layout.shape.legendgrouptitle._font.Font": "plotly.graph_objs.layout.shape.legendgrouptitle.Font",
        "plotly.graph_objs.layout.slider._currentvalue.Currentvalue": "plotly.graph_objs.layout.slider.Currentvalue",
        "plotly.graph_objs.layout.slider._font.Font": "plotly.graph_objs.layout.slider.Font",
        "plotly.graph_objs.layout.slider._pad.Pad": "plotly.graph_objs.layout.slider.Pad",
        "plotly.graph_objs.layout.slider._step.Step": "plotly.graph_objs.layout.slider.Step",
        "plotly.graph_objs.layout.slider._transition.Transition": "plotly.graph_objs.layout.slider.Transition",
        "plotly.graph_objs.layout.slider.currentvalue._font.Font": "plotly.graph_objs.layout.slider.currentvalue.Font",
        "plotly.graph_objs.layout.smith._domain.Domain": "plotly.graph_objs.layout.smith.Domain",
        "plotly.graph_objs.layout.smith._imaginaryaxis.Imaginaryaxis": "plotly.graph_objs.layout.smith.Imaginaryaxis",
        "plotly.graph_objs.layout.smith._realaxis.Realaxis": "plotly.graph_objs.layout.smith.Realaxis",
        "plotly.graph_objs.layout.smith.imaginaryaxis._tickfont.Tickfont": "plotly.graph_objs.layout.smith.imaginaryaxis.Tickfont",
        "plotly.graph_objs.layout.smith.realaxis._tickfont.Tickfont": "plotly.graph_objs.layout.smith.realaxis.Tickfont",
        "plotly.graph_objs.layout.template._data.Data": "plotly.graph_objs.layout.template.Data",
        "plotly.graph_objs.layout.ternary._aaxis.Aaxis": "plotly.graph_objs.layout.ternary.Aaxis",
        "plotly.graph_objs.layout.ternary._baxis.Baxis": "plotly.graph_objs.layout.ternary.Baxis",
        "plotly.graph_objs.layout.ternary._caxis.Caxis": "plotly.graph_objs.layout.ternary.Caxis",
        "plotly.graph_objs.layout.ternary._domain.Domain": "plotly.graph_objs.layout.ternary.Domain",
        "plotly.graph_objs.layout.ternary.aaxis._tickfont.Tickfont": "plotly.graph_objs.layout.ternary.aaxis.Tickfont",
        "plotly.graph_objs.layout.ternary.aaxis._tickformatstop.Tickformatstop": "plotly.graph_objs.layout.ternary.aaxis.Tickformatstop",
        "plotly.graph_objs.layout.ternary.aaxis._title.Title": "plotly.graph_objs.layout.ternary.aaxis.Title",
        "plotly.graph_objs.layout.ternary.aaxis.title._font.Font": "plotly.graph_objs.layout.ternary.aaxis.title.Font",
        "plotly.graph_objs.layout.ternary.baxis._tickfont.Tickfont": "plotly.graph_objs.layout.ternary.baxis.Tickfont",
        "plotly.graph_objs.layout.ternary.baxis._tickformatstop.Tickformatstop": "plotly.graph_objs.layout.ternary.baxis.Tickformatstop",
        "plotly.graph_objs.layout.ternary.baxis._title.Title": "plotly.graph_objs.layout.ternary.baxis.Title",
        "plotly.graph_objs.layout.ternary.baxis.title._font.Font": "plotly.graph_objs.layout.ternary.baxis.title.Font",
        "plotly.graph_objs.layout.ternary.caxis._tickfont.Tickfont": "plotly.graph_objs.layout.ternary.caxis.Tickfont",
        "plotly.graph_objs.layout.ternary.caxis._tickformatstop.Tickformatstop": "plotly.graph_objs.layout.ternary.caxis.Tickformatstop",
        "plotly.graph_objs.layout.ternary.caxis._title.Title": "plotly.graph_objs.layout.ternary.caxis.Title",
        "plotly.graph_objs.layout.ternary.caxis.title._font.Font": "plotly.graph_objs.layout.ternary.caxis.title.Font",
        "plotly.graph_objs.layout.title._font.Font": "plotly.graph_objs.layout.title.Font",
        "plotly.graph_objs.layout.title._pad.Pad": "plotly.graph_objs.layout.title.Pad",
        "plotly.graph_objs.layout.title._subtitle.Subtitle": "plotly.graph_objs.layout.title.Subtitle",
        "plotly.graph_objs.layout.title.subtitle._font.Font": "plotly.graph_objs.layout.title.subtitle.Font",
        "plotly.graph_objs.layout.updatemenu._button.Button": "plotly.graph_objs.layout.updatemenu.Button",
        "plotly.graph_objs.layout.updatemenu._font.Font": "plotly.graph_objs.layout.updatemenu.Font",
        "plotly.graph_objs.layout.updatemenu._pad.Pad": "plotly.graph_objs.layout.updatemenu.Pad",
        "plotly.graph_objs.layout.xaxis._autorangeoptions.Autorangeoptions": "plotly.graph_objs.layout.xaxis.Autorangeoptions",
        "plotly.graph_objs.layout.xaxis._minor.Minor": "plotly.graph_objs.layout.xaxis.Minor",
        "plotly.graph_objs.layout.xaxis._rangebreak.Rangebreak": "plotly.graph_objs.layout.xaxis.Rangebreak",
        "plotly.graph_objs.layout.xaxis._rangeselector.Rangeselector": "plotly.graph_objs.layout.xaxis.Rangeselector",
        "plotly.graph_objs.layout.xaxis._rangeslider.Rangeslider": "plotly.graph_objs.layout.xaxis.Rangeslider",
        "plotly.graph_objs.layout.xaxis._tickfont.Tickfont": "plotly.graph_objs.layout.xaxis.Tickfont",
        "plotly.graph_objs.layout.xaxis._tickformatstop.Tickformatstop": "plotly.graph_objs.layout.xaxis.Tickformatstop",
        "plotly.graph_objs.layout.xaxis._title.Title": "plotly.graph_objs.layout.xaxis.Title",
        "plotly.graph_objs.layout.xaxis.rangeselector._button.Button": "plotly.graph_objs.layout.xaxis.rangeselector.Button",
        "plotly.graph_objs.layout.xaxis.rangeselector._font.Font": "plotly.graph_objs.layout.xaxis.rangeselector.Font",
        "plotly.graph_objs.layout.xaxis.rangeslider._yaxis.YAxis": "plotly.graph_objs.layout.xaxis.rangeslider.YAxis",
        "plotly.graph_objs.layout.xaxis.title._font.Font": "plotly.graph_objs.layout.xaxis.title.Font",
        "plotly.graph_objs.layout.yaxis._autorangeoptions.Autorangeoptions": "plotly.graph_objs.layout.yaxis.Autorangeoptions",
        "plotly.graph_objs.layout.yaxis._minor.Minor": "plotly.graph_objs.layout.yaxis.Minor",
        "plotly.graph_objs.layout.yaxis._rangebreak.Rangebreak": "plotly.graph_objs.layout.yaxis.Rangebreak",
        "plotly.graph_objs.layout.yaxis._tickfont.Tickfont": "plotly.graph_objs.layout.yaxis.Tickfont",
        "plotly.graph_objs.layout.yaxis._tickformatstop.Tickformatstop": "plotly.graph_objs.layout.yaxis.Tickformatstop",
        "plotly.graph_objs.layout.yaxis._title.Title": "plotly.graph_objs.layout.yaxis.Title",
        "plotly.graph_objs.layout.yaxis.title._font.Font": "plotly.graph_objs.layout.yaxis.title.Font",
        "plotly.graph_objs.mesh3d._colorbar.ColorBar": "plotly.graph_objs.mesh3d.ColorBar",
        "plotly.graph_objs.mesh3d._contour.Contour": "plotly.graph_objs.mesh3d.Contour",
        "plotly.graph_objs.mesh3d._hoverlabel.Hoverlabel": "plotly.graph_objs.mesh3d.Hoverlabel",
        "plotly.graph_objs.mesh3d._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.mesh3d.Legendgrouptitle",
        "plotly.graph_objs.mesh3d._lighting.Lighting": "plotly.graph_objs.mesh3d.Lighting",
        "plotly.graph_objs.mesh3d._lightposition.Lightposition": "plotly.graph_objs.mesh3d.Lightposition",
        "plotly.graph_objs.mesh3d._stream.Stream": "plotly.graph_objs.mesh3d.Stream",
        "plotly.graph_objs.mesh3d.colorbar._tickfont.Tickfont": "plotly.graph_objs.mesh3d.colorbar.Tickfont",
        "plotly.graph_objs.mesh3d.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.mesh3d.colorbar.Tickformatstop",
        "plotly.graph_objs.mesh3d.colorbar._title.Title": "plotly.graph_objs.mesh3d.colorbar.Title",
        "plotly.graph_objs.mesh3d.colorbar.title._font.Font": "plotly.graph_objs.mesh3d.colorbar.title.Font",
        "plotly.graph_objs.mesh3d.hoverlabel._font.Font": "plotly.graph_objs.mesh3d.hoverlabel.Font",
        "plotly.graph_objs.mesh3d.legendgrouptitle._font.Font": "plotly.graph_objs.mesh3d.legendgrouptitle.Font",
        "plotly.graph_objs.ohlc._decreasing.Decreasing": "plotly.graph_objs.ohlc.Decreasing",
        "plotly.graph_objs.ohlc._hoverlabel.Hoverlabel": "plotly.graph_objs.ohlc.Hoverlabel",
        "plotly.graph_objs.ohlc._increasing.Increasing": "plotly.graph_objs.ohlc.Increasing",
        "plotly.graph_objs.ohlc._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.ohlc.Legendgrouptitle",
        "plotly.graph_objs.ohlc._line.Line": "plotly.graph_objs.ohlc.Line",
        "plotly.graph_objs.ohlc._stream.Stream": "plotly.graph_objs.ohlc.Stream",
        "plotly.graph_objs.ohlc.decreasing._line.Line": "plotly.graph_objs.ohlc.decreasing.Line",
        "plotly.graph_objs.ohlc.hoverlabel._font.Font": "plotly.graph_objs.ohlc.hoverlabel.Font",
        "plotly.graph_objs.ohlc.increasing._line.Line": "plotly.graph_objs.ohlc.increasing.Line",
        "plotly.graph_objs.ohlc.legendgrouptitle._font.Font": "plotly.graph_objs.ohlc.legendgrouptitle.Font",
        "plotly.graph_objs.parcats._dimension.Dimension": "plotly.graph_objs.parcats.Dimension",
        "plotly.graph_objs.parcats._domain.Domain": "plotly.graph_objs.parcats.Domain",
        "plotly.graph_objs.parcats._labelfont.Labelfont": "plotly.graph_objs.parcats.Labelfont",
        "plotly.graph_objs.parcats._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.parcats.Legendgrouptitle",
        "plotly.graph_objs.parcats._line.Line": "plotly.graph_objs.parcats.Line",
        "plotly.graph_objs.parcats._stream.Stream": "plotly.graph_objs.parcats.Stream",
        "plotly.graph_objs.parcats._tickfont.Tickfont": "plotly.graph_objs.parcats.Tickfont",
        "plotly.graph_objs.parcats.legendgrouptitle._font.Font": "plotly.graph_objs.parcats.legendgrouptitle.Font",
        "plotly.graph_objs.parcats.line._colorbar.ColorBar": "plotly.graph_objs.parcats.line.ColorBar",
        "plotly.graph_objs.parcats.line.colorbar._tickfont.Tickfont": "plotly.graph_objs.parcats.line.colorbar.Tickfont",
        "plotly.graph_objs.parcats.line.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.parcats.line.colorbar.Tickformatstop",
        "plotly.graph_objs.parcats.line.colorbar._title.Title": "plotly.graph_objs.parcats.line.colorbar.Title",
        "plotly.graph_objs.parcats.line.colorbar.title._font.Font": "plotly.graph_objs.parcats.line.colorbar.title.Font",
        "plotly.graph_objs.parcoords._dimension.Dimension": "plotly.graph_objs.parcoords.Dimension",
        "plotly.graph_objs.parcoords._domain.Domain": "plotly.graph_objs.parcoords.Domain",
        "plotly.graph_objs.parcoords._labelfont.Labelfont": "plotly.graph_objs.parcoords.Labelfont",
        "plotly.graph_objs.parcoords._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.parcoords.Legendgrouptitle",
        "plotly.graph_objs.parcoords._line.Line": "plotly.graph_objs.parcoords.Line",
        "plotly.graph_objs.parcoords._rangefont.Rangefont": "plotly.graph_objs.parcoords.Rangefont",
        "plotly.graph_objs.parcoords._stream.Stream": "plotly.graph_objs.parcoords.Stream",
        "plotly.graph_objs.parcoords._tickfont.Tickfont": "plotly.graph_objs.parcoords.Tickfont",
        "plotly.graph_objs.parcoords._unselected.Unselected": "plotly.graph_objs.parcoords.Unselected",
        "plotly.graph_objs.parcoords.legendgrouptitle._font.Font": "plotly.graph_objs.parcoords.legendgrouptitle.Font",
        "plotly.graph_objs.parcoords.line._colorbar.ColorBar": "plotly.graph_objs.parcoords.line.ColorBar",
        "plotly.graph_objs.parcoords.line.colorbar._tickfont.Tickfont": "plotly.graph_objs.parcoords.line.colorbar.Tickfont",
        "plotly.graph_objs.parcoords.line.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.parcoords.line.colorbar.Tickformatstop",
        "plotly.graph_objs.parcoords.line.colorbar._title.Title": "plotly.graph_objs.parcoords.line.colorbar.Title",
        "plotly.graph_objs.parcoords.line.colorbar.title._font.Font": "plotly.graph_objs.parcoords.line.colorbar.title.Font",
        "plotly.graph_objs.parcoords.unselected._line.Line": "plotly.graph_objs.parcoords.unselected.Line",
        "plotly.graph_objs.pie._domain.Domain": "plotly.graph_objs.pie.Domain",
        "plotly.graph_objs.pie._hoverlabel.Hoverlabel": "plotly.graph_objs.pie.Hoverlabel",
        "plotly.graph_objs.pie._insidetextfont.Insidetextfont": "plotly.graph_objs.pie.Insidetextfont",
        "plotly.graph_objs.pie._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.pie.Legendgrouptitle",
        "plotly.graph_objs.pie._marker.Marker": "plotly.graph_objs.pie.Marker",
        "plotly.graph_objs.pie._outsidetextfont.Outsidetextfont": "plotly.graph_objs.pie.Outsidetextfont",
        "plotly.graph_objs.pie._stream.Stream": "plotly.graph_objs.pie.Stream",
        "plotly.graph_objs.pie._textfont.Textfont": "plotly.graph_objs.pie.Textfont",
        "plotly.graph_objs.pie._title.Title": "plotly.graph_objs.pie.Title",
        "plotly.graph_objs.pie.hoverlabel._font.Font": "plotly.graph_objs.pie.hoverlabel.Font",
        "plotly.graph_objs.pie.legendgrouptitle._font.Font": "plotly.graph_objs.pie.legendgrouptitle.Font",
        "plotly.graph_objs.pie.marker._line.Line": "plotly.graph_objs.pie.marker.Line",
        "plotly.graph_objs.pie.marker._pattern.Pattern": "plotly.graph_objs.pie.marker.Pattern",
        "plotly.graph_objs.pie.title._font.Font": "plotly.graph_objs.pie.title.Font",
        "plotly.graph_objs.pointcloud._hoverlabel.Hoverlabel": "plotly.graph_objs.pointcloud.Hoverlabel",
        "plotly.graph_objs.pointcloud._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.pointcloud.Legendgrouptitle",
        "plotly.graph_objs.pointcloud._marker.Marker": "plotly.graph_objs.pointcloud.Marker",
        "plotly.graph_objs.pointcloud._stream.Stream": "plotly.graph_objs.pointcloud.Stream",
        "plotly.graph_objs.pointcloud.hoverlabel._font.Font": "plotly.graph_objs.pointcloud.hoverlabel.Font",
        "plotly.graph_objs.pointcloud.legendgrouptitle._font.Font": "plotly.graph_objs.pointcloud.legendgrouptitle.Font",
        "plotly.graph_objs.pointcloud.marker._border.Border": "plotly.graph_objs.pointcloud.marker.Border",
        "plotly.graph_objs.sankey._domain.Domain": "plotly.graph_objs.sankey.Domain",
        "plotly.graph_objs.sankey._hoverlabel.Hoverlabel": "plotly.graph_objs.sankey.Hoverlabel",
        "plotly.graph_objs.sankey._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.sankey.Legendgrouptitle",
        "plotly.graph_objs.sankey._link.Link": "plotly.graph_objs.sankey.Link",
        "plotly.graph_objs.sankey._node.Node": "plotly.graph_objs.sankey.Node",
        "plotly.graph_objs.sankey._stream.Stream": "plotly.graph_objs.sankey.Stream",
        "plotly.graph_objs.sankey._textfont.Textfont": "plotly.graph_objs.sankey.Textfont",
        "plotly.graph_objs.sankey.hoverlabel._font.Font": "plotly.graph_objs.sankey.hoverlabel.Font",
        "plotly.graph_objs.sankey.legendgrouptitle._font.Font": "plotly.graph_objs.sankey.legendgrouptitle.Font",
        "plotly.graph_objs.sankey.link._colorscale.Colorscale": "plotly.graph_objs.sankey.link.Colorscale",
        "plotly.graph_objs.sankey.link._hoverlabel.Hoverlabel": "plotly.graph_objs.sankey.link.Hoverlabel",
        "plotly.graph_objs.sankey.link._line.Line": "plotly.graph_objs.sankey.link.Line",
        "plotly.graph_objs.sankey.link.hoverlabel._font.Font": "plotly.graph_objs.sankey.link.hoverlabel.Font",
        "plotly.graph_objs.sankey.node._hoverlabel.Hoverlabel": "plotly.graph_objs.sankey.node.Hoverlabel",
        "plotly.graph_objs.sankey.node._line.Line": "plotly.graph_objs.sankey.node.Line",
        "plotly.graph_objs.sankey.node.hoverlabel._font.Font": "plotly.graph_objs.sankey.node.hoverlabel.Font",
        "plotly.graph_objs.scatter._error_x.ErrorX": "plotly.graph_objs.scatter.ErrorX",
        "plotly.graph_objs.scatter._error_y.ErrorY": "plotly.graph_objs.scatter.ErrorY",
        "plotly.graph_objs.scatter._fillgradient.Fillgradient": "plotly.graph_objs.scatter.Fillgradient",
        "plotly.graph_objs.scatter._fillpattern.Fillpattern": "plotly.graph_objs.scatter.Fillpattern",
        "plotly.graph_objs.scatter._hoverlabel.Hoverlabel": "plotly.graph_objs.scatter.Hoverlabel",
        "plotly.graph_objs.scatter._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.scatter.Legendgrouptitle",
        "plotly.graph_objs.scatter._line.Line": "plotly.graph_objs.scatter.Line",
        "plotly.graph_objs.scatter._marker.Marker": "plotly.graph_objs.scatter.Marker",
        "plotly.graph_objs.scatter._selected.Selected": "plotly.graph_objs.scatter.Selected",
        "plotly.graph_objs.scatter._stream.Stream": "plotly.graph_objs.scatter.Stream",
        "plotly.graph_objs.scatter._textfont.Textfont": "plotly.graph_objs.scatter.Textfont",
        "plotly.graph_objs.scatter._unselected.Unselected": "plotly.graph_objs.scatter.Unselected",
        "plotly.graph_objs.scatter.hoverlabel._font.Font": "plotly.graph_objs.scatter.hoverlabel.Font",
        "plotly.graph_objs.scatter.legendgrouptitle._font.Font": "plotly.graph_objs.scatter.legendgrouptitle.Font",
        "plotly.graph_objs.scatter.marker._colorbar.ColorBar": "plotly.graph_objs.scatter.marker.ColorBar",
        "plotly.graph_objs.scatter.marker._gradient.Gradient": "plotly.graph_objs.scatter.marker.Gradient",
        "plotly.graph_objs.scatter.marker._line.Line": "plotly.graph_objs.scatter.marker.Line",
        "plotly.graph_objs.scatter.marker.colorbar._tickfont.Tickfont": "plotly.graph_objs.scatter.marker.colorbar.Tickfont",
        "plotly.graph_objs.scatter.marker.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.scatter.marker.colorbar.Tickformatstop",
        "plotly.graph_objs.scatter.marker.colorbar._title.Title": "plotly.graph_objs.scatter.marker.colorbar.Title",
        "plotly.graph_objs.scatter.marker.colorbar.title._font.Font": "plotly.graph_objs.scatter.marker.colorbar.title.Font",
        "plotly.graph_objs.scatter.selected._marker.Marker": "plotly.graph_objs.scatter.selected.Marker",
        "plotly.graph_objs.scatter.selected._textfont.Textfont": "plotly.graph_objs.scatter.selected.Textfont",
        "plotly.graph_objs.scatter.unselected._marker.Marker": "plotly.graph_objs.scatter.unselected.Marker",
        "plotly.graph_objs.scatter.unselected._textfont.Textfont": "plotly.graph_objs.scatter.unselected.Textfont",
        "plotly.graph_objs.scatter3d._error_x.ErrorX": "plotly.graph_objs.scatter3d.ErrorX",
        "plotly.graph_objs.scatter3d._error_y.ErrorY": "plotly.graph_objs.scatter3d.ErrorY",
        "plotly.graph_objs.scatter3d._error_z.ErrorZ": "plotly.graph_objs.scatter3d.ErrorZ",
        "plotly.graph_objs.scatter3d._hoverlabel.Hoverlabel": "plotly.graph_objs.scatter3d.Hoverlabel",
        "plotly.graph_objs.scatter3d._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.scatter3d.Legendgrouptitle",
        "plotly.graph_objs.scatter3d._line.Line": "plotly.graph_objs.scatter3d.Line",
        "plotly.graph_objs.scatter3d._marker.Marker": "plotly.graph_objs.scatter3d.Marker",
        "plotly.graph_objs.scatter3d._projection.Projection": "plotly.graph_objs.scatter3d.Projection",
        "plotly.graph_objs.scatter3d._stream.Stream": "plotly.graph_objs.scatter3d.Stream",
        "plotly.graph_objs.scatter3d._textfont.Textfont": "plotly.graph_objs.scatter3d.Textfont",
        "plotly.graph_objs.scatter3d.hoverlabel._font.Font": "plotly.graph_objs.scatter3d.hoverlabel.Font",
        "plotly.graph_objs.scatter3d.legendgrouptitle._font.Font": "plotly.graph_objs.scatter3d.legendgrouptitle.Font",
        "plotly.graph_objs.scatter3d.line._colorbar.ColorBar": "plotly.graph_objs.scatter3d.line.ColorBar",
        "plotly.graph_objs.scatter3d.line.colorbar._tickfont.Tickfont": "plotly.graph_objs.scatter3d.line.colorbar.Tickfont",
        "plotly.graph_objs.scatter3d.line.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.scatter3d.line.colorbar.Tickformatstop",
        "plotly.graph_objs.scatter3d.line.colorbar._title.Title": "plotly.graph_objs.scatter3d.line.colorbar.Title",
        "plotly.graph_objs.scatter3d.line.colorbar.title._font.Font": "plotly.graph_objs.scatter3d.line.colorbar.title.Font",
        "plotly.graph_objs.scatter3d.marker._colorbar.ColorBar": "plotly.graph_objs.scatter3d.marker.ColorBar",
        "plotly.graph_objs.scatter3d.marker._line.Line": "plotly.graph_objs.scatter3d.marker.Line",
        "plotly.graph_objs.scatter3d.marker.colorbar._tickfont.Tickfont": "plotly.graph_objs.scatter3d.marker.colorbar.Tickfont",
        "plotly.graph_objs.scatter3d.marker.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.scatter3d.marker.colorbar.Tickformatstop",
        "plotly.graph_objs.scatter3d.marker.colorbar._title.Title": "plotly.graph_objs.scatter3d.marker.colorbar.Title",
        "plotly.graph_objs.scatter3d.marker.colorbar.title._font.Font": "plotly.graph_objs.scatter3d.marker.colorbar.title.Font",
        "plotly.graph_objs.scatter3d.projection._x.X": "plotly.graph_objs.scatter3d.projection.X",
        "plotly.graph_objs.scatter3d.projection._y.Y": "plotly.graph_objs.scatter3d.projection.Y",
        "plotly.graph_objs.scatter3d.projection._z.Z": "plotly.graph_objs.scatter3d.projection.Z",
        "plotly.graph_objs.scattercarpet._hoverlabel.Hoverlabel": "plotly.graph_objs.scattercarpet.Hoverlabel",
        "plotly.graph_objs.scattercarpet._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.scattercarpet.Legendgrouptitle",
        "plotly.graph_objs.scattercarpet._line.Line": "plotly.graph_objs.scattercarpet.Line",
        "plotly.graph_objs.scattercarpet._marker.Marker": "plotly.graph_objs.scattercarpet.Marker",
        "plotly.graph_objs.scattercarpet._selected.Selected": "plotly.graph_objs.scattercarpet.Selected",
        "plotly.graph_objs.scattercarpet._stream.Stream": "plotly.graph_objs.scattercarpet.Stream",
        "plotly.graph_objs.scattercarpet._textfont.Textfont": "plotly.graph_objs.scattercarpet.Textfont",
        "plotly.graph_objs.scattercarpet._unselected.Unselected": "plotly.graph_objs.scattercarpet.Unselected",
        "plotly.graph_objs.scattercarpet.hoverlabel._font.Font": "plotly.graph_objs.scattercarpet.hoverlabel.Font",
        "plotly.graph_objs.scattercarpet.legendgrouptitle._font.Font": "plotly.graph_objs.scattercarpet.legendgrouptitle.Font",
        "plotly.graph_objs.scattercarpet.marker._colorbar.ColorBar": "plotly.graph_objs.scattercarpet.marker.ColorBar",
        "plotly.graph_objs.scattercarpet.marker._gradient.Gradient": "plotly.graph_objs.scattercarpet.marker.Gradient",
        "plotly.graph_objs.scattercarpet.marker._line.Line": "plotly.graph_objs.scattercarpet.marker.Line",
        "plotly.graph_objs.scattercarpet.marker.colorbar._tickfont.Tickfont": "plotly.graph_objs.scattercarpet.marker.colorbar.Tickfont",
        "plotly.graph_objs.scattercarpet.marker.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.scattercarpet.marker.colorbar.Tickformatstop",
        "plotly.graph_objs.scattercarpet.marker.colorbar._title.Title": "plotly.graph_objs.scattercarpet.marker.colorbar.Title",
        "plotly.graph_objs.scattercarpet.marker.colorbar.title._font.Font": "plotly.graph_objs.scattercarpet.marker.colorbar.title.Font",
        "plotly.graph_objs.scattercarpet.selected._marker.Marker": "plotly.graph_objs.scattercarpet.selected.Marker",
        "plotly.graph_objs.scattercarpet.selected._textfont.Textfont": "plotly.graph_objs.scattercarpet.selected.Textfont",
        "plotly.graph_objs.scattercarpet.unselected._marker.Marker": "plotly.graph_objs.scattercarpet.unselected.Marker",
        "plotly.graph_objs.scattercarpet.unselected._textfont.Textfont": "plotly.graph_objs.scattercarpet.unselected.Textfont",
        "plotly.graph_objs.scattergeo._hoverlabel.Hoverlabel": "plotly.graph_objs.scattergeo.Hoverlabel",
        "plotly.graph_objs.scattergeo._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.scattergeo.Legendgrouptitle",
        "plotly.graph_objs.scattergeo._line.Line": "plotly.graph_objs.scattergeo.Line",
        "plotly.graph_objs.scattergeo._marker.Marker": "plotly.graph_objs.scattergeo.Marker",
        "plotly.graph_objs.scattergeo._selected.Selected": "plotly.graph_objs.scattergeo.Selected",
        "plotly.graph_objs.scattergeo._stream.Stream": "plotly.graph_objs.scattergeo.Stream",
        "plotly.graph_objs.scattergeo._textfont.Textfont": "plotly.graph_objs.scattergeo.Textfont",
        "plotly.graph_objs.scattergeo._unselected.Unselected": "plotly.graph_objs.scattergeo.Unselected",
        "plotly.graph_objs.scattergeo.hoverlabel._font.Font": "plotly.graph_objs.scattergeo.hoverlabel.Font",
        "plotly.graph_objs.scattergeo.legendgrouptitle._font.Font": "plotly.graph_objs.scattergeo.legendgrouptitle.Font",
        "plotly.graph_objs.scattergeo.marker._colorbar.ColorBar": "plotly.graph_objs.scattergeo.marker.ColorBar",
        "plotly.graph_objs.scattergeo.marker._gradient.Gradient": "plotly.graph_objs.scattergeo.marker.Gradient",
        "plotly.graph_objs.scattergeo.marker._line.Line": "plotly.graph_objs.scattergeo.marker.Line",
        "plotly.graph_objs.scattergeo.marker.colorbar._tickfont.Tickfont": "plotly.graph_objs.scattergeo.marker.colorbar.Tickfont",
        "plotly.graph_objs.scattergeo.marker.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.scattergeo.marker.colorbar.Tickformatstop",
        "plotly.graph_objs.scattergeo.marker.colorbar._title.Title": "plotly.graph_objs.scattergeo.marker.colorbar.Title",
        "plotly.graph_objs.scattergeo.marker.colorbar.title._font.Font": "plotly.graph_objs.scattergeo.marker.colorbar.title.Font",
        "plotly.graph_objs.scattergeo.selected._marker.Marker": "plotly.graph_objs.scattergeo.selected.Marker",
        "plotly.graph_objs.scattergeo.selected._textfont.Textfont": "plotly.graph_objs.scattergeo.selected.Textfont",
        "plotly.graph_objs.scattergeo.unselected._marker.Marker": "plotly.graph_objs.scattergeo.unselected.Marker",
        "plotly.graph_objs.scattergeo.unselected._textfont.Textfont": "plotly.graph_objs.scattergeo.unselected.Textfont",
        "plotly.graph_objs.scattergl._error_x.ErrorX": "plotly.graph_objs.scattergl.ErrorX",
        "plotly.graph_objs.scattergl._error_y.ErrorY": "plotly.graph_objs.scattergl.ErrorY",
        "plotly.graph_objs.scattergl._hoverlabel.Hoverlabel": "plotly.graph_objs.scattergl.Hoverlabel",
        "plotly.graph_objs.scattergl._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.scattergl.Legendgrouptitle",
        "plotly.graph_objs.scattergl._line.Line": "plotly.graph_objs.scattergl.Line",
        "plotly.graph_objs.scattergl._marker.Marker": "plotly.graph_objs.scattergl.Marker",
        "plotly.graph_objs.scattergl._selected.Selected": "plotly.graph_objs.scattergl.Selected",
        "plotly.graph_objs.scattergl._stream.Stream": "plotly.graph_objs.scattergl.Stream",
        "plotly.graph_objs.scattergl._textfont.Textfont": "plotly.graph_objs.scattergl.Textfont",
        "plotly.graph_objs.scattergl._unselected.Unselected": "plotly.graph_objs.scattergl.Unselected",
        "plotly.graph_objs.scattergl.hoverlabel._font.Font": "plotly.graph_objs.scattergl.hoverlabel.Font",
        "plotly.graph_objs.scattergl.legendgrouptitle._font.Font": "plotly.graph_objs.scattergl.legendgrouptitle.Font",
        "plotly.graph_objs.scattergl.marker._colorbar.ColorBar": "plotly.graph_objs.scattergl.marker.ColorBar",
        "plotly.graph_objs.scattergl.marker._line.Line": "plotly.graph_objs.scattergl.marker.Line",
        "plotly.graph_objs.scattergl.marker.colorbar._tickfont.Tickfont": "plotly.graph_objs.scattergl.marker.colorbar.Tickfont",
        "plotly.graph_objs.scattergl.marker.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.scattergl.marker.colorbar.Tickformatstop",
        "plotly.graph_objs.scattergl.marker.colorbar._title.Title": "plotly.graph_objs.scattergl.marker.colorbar.Title",
        "plotly.graph_objs.scattergl.marker.colorbar.title._font.Font": "plotly.graph_objs.scattergl.marker.colorbar.title.Font",
        "plotly.graph_objs.scattergl.selected._marker.Marker": "plotly.graph_objs.scattergl.selected.Marker",
        "plotly.graph_objs.scattergl.selected._textfont.Textfont": "plotly.graph_objs.scattergl.selected.Textfont",
        "plotly.graph_objs.scattergl.unselected._marker.Marker": "plotly.graph_objs.scattergl.unselected.Marker",
        "plotly.graph_objs.scattergl.unselected._textfont.Textfont": "plotly.graph_objs.scattergl.unselected.Textfont",
        "plotly.graph_objs.scattermap._cluster.Cluster": "plotly.graph_objs.scattermap.Cluster",
        "plotly.graph_objs.scattermap._hoverlabel.Hoverlabel": "plotly.graph_objs.scattermap.Hoverlabel",
        "plotly.graph_objs.scattermap._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.scattermap.Legendgrouptitle",
        "plotly.graph_objs.scattermap._line.Line": "plotly.graph_objs.scattermap.Line",
        "plotly.graph_objs.scattermap._marker.Marker": "plotly.graph_objs.scattermap.Marker",
        "plotly.graph_objs.scattermap._selected.Selected": "plotly.graph_objs.scattermap.Selected",
        "plotly.graph_objs.scattermap._stream.Stream": "plotly.graph_objs.scattermap.Stream",
        "plotly.graph_objs.scattermap._textfont.Textfont": "plotly.graph_objs.scattermap.Textfont",
        "plotly.graph_objs.scattermap._unselected.Unselected": "plotly.graph_objs.scattermap.Unselected",
        "plotly.graph_objs.scattermap.hoverlabel._font.Font": "plotly.graph_objs.scattermap.hoverlabel.Font",
        "plotly.graph_objs.scattermap.legendgrouptitle._font.Font": "plotly.graph_objs.scattermap.legendgrouptitle.Font",
        "plotly.graph_objs.scattermap.marker._colorbar.ColorBar": "plotly.graph_objs.scattermap.marker.ColorBar",
        "plotly.graph_objs.scattermap.marker.colorbar._tickfont.Tickfont": "plotly.graph_objs.scattermap.marker.colorbar.Tickfont",
        "plotly.graph_objs.scattermap.marker.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.scattermap.marker.colorbar.Tickformatstop",
        "plotly.graph_objs.scattermap.marker.colorbar._title.Title": "plotly.graph_objs.scattermap.marker.colorbar.Title",
        "plotly.graph_objs.scattermap.marker.colorbar.title._font.Font": "plotly.graph_objs.scattermap.marker.colorbar.title.Font",
        "plotly.graph_objs.scattermap.selected._marker.Marker": "plotly.graph_objs.scattermap.selected.Marker",
        "plotly.graph_objs.scattermap.unselected._marker.Marker": "plotly.graph_objs.scattermap.unselected.Marker",
        "plotly.graph_objs.scattermapbox._cluster.Cluster": "plotly.graph_objs.scattermapbox.Cluster",
        "plotly.graph_objs.scattermapbox._hoverlabel.Hoverlabel": "plotly.graph_objs.scattermapbox.Hoverlabel",
        "plotly.graph_objs.scattermapbox._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.scattermapbox.Legendgrouptitle",
        "plotly.graph_objs.scattermapbox._line.Line": "plotly.graph_objs.scattermapbox.Line",
        "plotly.graph_objs.scattermapbox._marker.Marker": "plotly.graph_objs.scattermapbox.Marker",
        "plotly.graph_objs.scattermapbox._selected.Selected": "plotly.graph_objs.scattermapbox.Selected",
        "plotly.graph_objs.scattermapbox._stream.Stream": "plotly.graph_objs.scattermapbox.Stream",
        "plotly.graph_objs.scattermapbox._textfont.Textfont": "plotly.graph_objs.scattermapbox.Textfont",
        "plotly.graph_objs.scattermapbox._unselected.Unselected": "plotly.graph_objs.scattermapbox.Unselected",
        "plotly.graph_objs.scattermapbox.hoverlabel._font.Font": "plotly.graph_objs.scattermapbox.hoverlabel.Font",
        "plotly.graph_objs.scattermapbox.legendgrouptitle._font.Font": "plotly.graph_objs.scattermapbox.legendgrouptitle.Font",
        "plotly.graph_objs.scattermapbox.marker._colorbar.ColorBar": "plotly.graph_objs.scattermapbox.marker.ColorBar",
        "plotly.graph_objs.scattermapbox.marker.colorbar._tickfont.Tickfont": "plotly.graph_objs.scattermapbox.marker.colorbar.Tickfont",
        "plotly.graph_objs.scattermapbox.marker.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.scattermapbox.marker.colorbar.Tickformatstop",
        "plotly.graph_objs.scattermapbox.marker.colorbar._title.Title": "plotly.graph_objs.scattermapbox.marker.colorbar.Title",
        "plotly.graph_objs.scattermapbox.marker.colorbar.title._font.Font": "plotly.graph_objs.scattermapbox.marker.colorbar.title.Font",
        "plotly.graph_objs.scattermapbox.selected._marker.Marker": "plotly.graph_objs.scattermapbox.selected.Marker",
        "plotly.graph_objs.scattermapbox.unselected._marker.Marker": "plotly.graph_objs.scattermapbox.unselected.Marker",
        "plotly.graph_objs.scatterpolar._hoverlabel.Hoverlabel": "plotly.graph_objs.scatterpolar.Hoverlabel",
        "plotly.graph_objs.scatterpolar._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.scatterpolar.Legendgrouptitle",
        "plotly.graph_objs.scatterpolar._line.Line": "plotly.graph_objs.scatterpolar.Line",
        "plotly.graph_objs.scatterpolar._marker.Marker": "plotly.graph_objs.scatterpolar.Marker",
        "plotly.graph_objs.scatterpolar._selected.Selected": "plotly.graph_objs.scatterpolar.Selected",
        "plotly.graph_objs.scatterpolar._stream.Stream": "plotly.graph_objs.scatterpolar.Stream",
        "plotly.graph_objs.scatterpolar._textfont.Textfont": "plotly.graph_objs.scatterpolar.Textfont",
        "plotly.graph_objs.scatterpolar._unselected.Unselected": "plotly.graph_objs.scatterpolar.Unselected",
        "plotly.graph_objs.scatterpolar.hoverlabel._font.Font": "plotly.graph_objs.scatterpolar.hoverlabel.Font",
        "plotly.graph_objs.scatterpolar.legendgrouptitle._font.Font": "plotly.graph_objs.scatterpolar.legendgrouptitle.Font",
        "plotly.graph_objs.scatterpolar.marker._colorbar.ColorBar": "plotly.graph_objs.scatterpolar.marker.ColorBar",
        "plotly.graph_objs.scatterpolar.marker._gradient.Gradient": "plotly.graph_objs.scatterpolar.marker.Gradient",
        "plotly.graph_objs.scatterpolar.marker._line.Line": "plotly.graph_objs.scatterpolar.marker.Line",
        "plotly.graph_objs.scatterpolar.marker.colorbar._tickfont.Tickfont": "plotly.graph_objs.scatterpolar.marker.colorbar.Tickfont",
        "plotly.graph_objs.scatterpolar.marker.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.scatterpolar.marker.colorbar.Tickformatstop",
        "plotly.graph_objs.scatterpolar.marker.colorbar._title.Title": "plotly.graph_objs.scatterpolar.marker.colorbar.Title",
        "plotly.graph_objs.scatterpolar.marker.colorbar.title._font.Font": "plotly.graph_objs.scatterpolar.marker.colorbar.title.Font",
        "plotly.graph_objs.scatterpolar.selected._marker.Marker": "plotly.graph_objs.scatterpolar.selected.Marker",
        "plotly.graph_objs.scatterpolar.selected._textfont.Textfont": "plotly.graph_objs.scatterpolar.selected.Textfont",
        "plotly.graph_objs.scatterpolar.unselected._marker.Marker": "plotly.graph_objs.scatterpolar.unselected.Marker",
        "plotly.graph_objs.scatterpolar.unselected._textfont.Textfont": "plotly.graph_objs.scatterpolar.unselected.Textfont",
        "plotly.graph_objs.scatterpolargl._hoverlabel.Hoverlabel": "plotly.graph_objs.scatterpolargl.Hoverlabel",
        "plotly.graph_objs.scatterpolargl._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.scatterpolargl.Legendgrouptitle",
        "plotly.graph_objs.scatterpolargl._line.Line": "plotly.graph_objs.scatterpolargl.Line",
        "plotly.graph_objs.scatterpolargl._marker.Marker": "plotly.graph_objs.scatterpolargl.Marker",
        "plotly.graph_objs.scatterpolargl._selected.Selected": "plotly.graph_objs.scatterpolargl.Selected",
        "plotly.graph_objs.scatterpolargl._stream.Stream": "plotly.graph_objs.scatterpolargl.Stream",
        "plotly.graph_objs.scatterpolargl._textfont.Textfont": "plotly.graph_objs.scatterpolargl.Textfont",
        "plotly.graph_objs.scatterpolargl._unselected.Unselected": "plotly.graph_objs.scatterpolargl.Unselected",
        "plotly.graph_objs.scatterpolargl.hoverlabel._font.Font": "plotly.graph_objs.scatterpolargl.hoverlabel.Font",
        "plotly.graph_objs.scatterpolargl.legendgrouptitle._font.Font": "plotly.graph_objs.scatterpolargl.legendgrouptitle.Font",
        "plotly.graph_objs.scatterpolargl.marker._colorbar.ColorBar": "plotly.graph_objs.scatterpolargl.marker.ColorBar",
        "plotly.graph_objs.scatterpolargl.marker._line.Line": "plotly.graph_objs.scatterpolargl.marker.Line",
        "plotly.graph_objs.scatterpolargl.marker.colorbar._tickfont.Tickfont": "plotly.graph_objs.scatterpolargl.marker.colorbar.Tickfont",
        "plotly.graph_objs.scatterpolargl.marker.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.scatterpolargl.marker.colorbar.Tickformatstop",
        "plotly.graph_objs.scatterpolargl.marker.colorbar._title.Title": "plotly.graph_objs.scatterpolargl.marker.colorbar.Title",
        "plotly.graph_objs.scatterpolargl.marker.colorbar.title._font.Font": "plotly.graph_objs.scatterpolargl.marker.colorbar.title.Font",
        "plotly.graph_objs.scatterpolargl.selected._marker.Marker": "plotly.graph_objs.scatterpolargl.selected.Marker",
        "plotly.graph_objs.scatterpolargl.selected._textfont.Textfont": "plotly.graph_objs.scatterpolargl.selected.Textfont",
        "plotly.graph_objs.scatterpolargl.unselected._marker.Marker": "plotly.graph_objs.scatterpolargl.unselected.Marker",
        "plotly.graph_objs.scatterpolargl.unselected._textfont.Textfont": "plotly.graph_objs.scatterpolargl.unselected.Textfont",
        "plotly.graph_objs.scattersmith._hoverlabel.Hoverlabel": "plotly.graph_objs.scattersmith.Hoverlabel",
        "plotly.graph_objs.scattersmith._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.scattersmith.Legendgrouptitle",
        "plotly.graph_objs.scattersmith._line.Line": "plotly.graph_objs.scattersmith.Line",
        "plotly.graph_objs.scattersmith._marker.Marker": "plotly.graph_objs.scattersmith.Marker",
        "plotly.graph_objs.scattersmith._selected.Selected": "plotly.graph_objs.scattersmith.Selected",
        "plotly.graph_objs.scattersmith._stream.Stream": "plotly.graph_objs.scattersmith.Stream",
        "plotly.graph_objs.scattersmith._textfont.Textfont": "plotly.graph_objs.scattersmith.Textfont",
        "plotly.graph_objs.scattersmith._unselected.Unselected": "plotly.graph_objs.scattersmith.Unselected",
        "plotly.graph_objs.scattersmith.hoverlabel._font.Font": "plotly.graph_objs.scattersmith.hoverlabel.Font",
        "plotly.graph_objs.scattersmith.legendgrouptitle._font.Font": "plotly.graph_objs.scattersmith.legendgrouptitle.Font",
        "plotly.graph_objs.scattersmith.marker._colorbar.ColorBar": "plotly.graph_objs.scattersmith.marker.ColorBar",
        "plotly.graph_objs.scattersmith.marker._gradient.Gradient": "plotly.graph_objs.scattersmith.marker.Gradient",
        "plotly.graph_objs.scattersmith.marker._line.Line": "plotly.graph_objs.scattersmith.marker.Line",
        "plotly.graph_objs.scattersmith.marker.colorbar._tickfont.Tickfont": "plotly.graph_objs.scattersmith.marker.colorbar.Tickfont",
        "plotly.graph_objs.scattersmith.marker.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.scattersmith.marker.colorbar.Tickformatstop",
        "plotly.graph_objs.scattersmith.marker.colorbar._title.Title": "plotly.graph_objs.scattersmith.marker.colorbar.Title",
        "plotly.graph_objs.scattersmith.marker.colorbar.title._font.Font": "plotly.graph_objs.scattersmith.marker.colorbar.title.Font",
        "plotly.graph_objs.scattersmith.selected._marker.Marker": "plotly.graph_objs.scattersmith.selected.Marker",
        "plotly.graph_objs.scattersmith.selected._textfont.Textfont": "plotly.graph_objs.scattersmith.selected.Textfont",
        "plotly.graph_objs.scattersmith.unselected._marker.Marker": "plotly.graph_objs.scattersmith.unselected.Marker",
        "plotly.graph_objs.scattersmith.unselected._textfont.Textfont": "plotly.graph_objs.scattersmith.unselected.Textfont",
        "plotly.graph_objs.scatterternary._hoverlabel.Hoverlabel": "plotly.graph_objs.scatterternary.Hoverlabel",
        "plotly.graph_objs.scatterternary._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.scatterternary.Legendgrouptitle",
        "plotly.graph_objs.scatterternary._line.Line": "plotly.graph_objs.scatterternary.Line",
        "plotly.graph_objs.scatterternary._marker.Marker": "plotly.graph_objs.scatterternary.Marker",
        "plotly.graph_objs.scatterternary._selected.Selected": "plotly.graph_objs.scatterternary.Selected",
        "plotly.graph_objs.scatterternary._stream.Stream": "plotly.graph_objs.scatterternary.Stream",
        "plotly.graph_objs.scatterternary._textfont.Textfont": "plotly.graph_objs.scatterternary.Textfont",
        "plotly.graph_objs.scatterternary._unselected.Unselected": "plotly.graph_objs.scatterternary.Unselected",
        "plotly.graph_objs.scatterternary.hoverlabel._font.Font": "plotly.graph_objs.scatterternary.hoverlabel.Font",
        "plotly.graph_objs.scatterternary.legendgrouptitle._font.Font": "plotly.graph_objs.scatterternary.legendgrouptitle.Font",
        "plotly.graph_objs.scatterternary.marker._colorbar.ColorBar": "plotly.graph_objs.scatterternary.marker.ColorBar",
        "plotly.graph_objs.scatterternary.marker._gradient.Gradient": "plotly.graph_objs.scatterternary.marker.Gradient",
        "plotly.graph_objs.scatterternary.marker._line.Line": "plotly.graph_objs.scatterternary.marker.Line",
        "plotly.graph_objs.scatterternary.marker.colorbar._tickfont.Tickfont": "plotly.graph_objs.scatterternary.marker.colorbar.Tickfont",
        "plotly.graph_objs.scatterternary.marker.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.scatterternary.marker.colorbar.Tickformatstop",
        "plotly.graph_objs.scatterternary.marker.colorbar._title.Title": "plotly.graph_objs.scatterternary.marker.colorbar.Title",
        "plotly.graph_objs.scatterternary.marker.colorbar.title._font.Font": "plotly.graph_objs.scatterternary.marker.colorbar.title.Font",
        "plotly.graph_objs.scatterternary.selected._marker.Marker": "plotly.graph_objs.scatterternary.selected.Marker",
        "plotly.graph_objs.scatterternary.selected._textfont.Textfont": "plotly.graph_objs.scatterternary.selected.Textfont",
        "plotly.graph_objs.scatterternary.unselected._marker.Marker": "plotly.graph_objs.scatterternary.unselected.Marker",
        "plotly.graph_objs.scatterternary.unselected._textfont.Textfont": "plotly.graph_objs.scatterternary.unselected.Textfont",
        "plotly.graph_objs.splom._diagonal.Diagonal": "plotly.graph_objs.splom.Diagonal",
        "plotly.graph_objs.splom._dimension.Dimension": "plotly.graph_objs.splom.Dimension",
        "plotly.graph_objs.splom._hoverlabel.Hoverlabel": "plotly.graph_objs.splom.Hoverlabel",
        "plotly.graph_objs.splom._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.splom.Legendgrouptitle",
        "plotly.graph_objs.splom._marker.Marker": "plotly.graph_objs.splom.Marker",
        "plotly.graph_objs.splom._selected.Selected": "plotly.graph_objs.splom.Selected",
        "plotly.graph_objs.splom._stream.Stream": "plotly.graph_objs.splom.Stream",
        "plotly.graph_objs.splom._unselected.Unselected": "plotly.graph_objs.splom.Unselected",
        "plotly.graph_objs.splom.dimension._axis.Axis": "plotly.graph_objs.splom.dimension.Axis",
        "plotly.graph_objs.splom.hoverlabel._font.Font": "plotly.graph_objs.splom.hoverlabel.Font",
        "plotly.graph_objs.splom.legendgrouptitle._font.Font": "plotly.graph_objs.splom.legendgrouptitle.Font",
        "plotly.graph_objs.splom.marker._colorbar.ColorBar": "plotly.graph_objs.splom.marker.ColorBar",
        "plotly.graph_objs.splom.marker._line.Line": "plotly.graph_objs.splom.marker.Line",
        "plotly.graph_objs.splom.marker.colorbar._tickfont.Tickfont": "plotly.graph_objs.splom.marker.colorbar.Tickfont",
        "plotly.graph_objs.splom.marker.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.splom.marker.colorbar.Tickformatstop",
        "plotly.graph_objs.splom.marker.colorbar._title.Title": "plotly.graph_objs.splom.marker.colorbar.Title",
        "plotly.graph_objs.splom.marker.colorbar.title._font.Font": "plotly.graph_objs.splom.marker.colorbar.title.Font",
        "plotly.graph_objs.splom.selected._marker.Marker": "plotly.graph_objs.splom.selected.Marker",
        "plotly.graph_objs.splom.unselected._marker.Marker": "plotly.graph_objs.splom.unselected.Marker",
        "plotly.graph_objs.streamtube._colorbar.ColorBar": "plotly.graph_objs.streamtube.ColorBar",
        "plotly.graph_objs.streamtube._hoverlabel.Hoverlabel": "plotly.graph_objs.streamtube.Hoverlabel",
        "plotly.graph_objs.streamtube._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.streamtube.Legendgrouptitle",
        "plotly.graph_objs.streamtube._lighting.Lighting": "plotly.graph_objs.streamtube.Lighting",
        "plotly.graph_objs.streamtube._lightposition.Lightposition": "plotly.graph_objs.streamtube.Lightposition",
        "plotly.graph_objs.streamtube._starts.Starts": "plotly.graph_objs.streamtube.Starts",
        "plotly.graph_objs.streamtube._stream.Stream": "plotly.graph_objs.streamtube.Stream",
        "plotly.graph_objs.streamtube.colorbar._tickfont.Tickfont": "plotly.graph_objs.streamtube.colorbar.Tickfont",
        "plotly.graph_objs.streamtube.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.streamtube.colorbar.Tickformatstop",
        "plotly.graph_objs.streamtube.colorbar._title.Title": "plotly.graph_objs.streamtube.colorbar.Title",
        "plotly.graph_objs.streamtube.colorbar.title._font.Font": "plotly.graph_objs.streamtube.colorbar.title.Font",
        "plotly.graph_objs.streamtube.hoverlabel._font.Font": "plotly.graph_objs.streamtube.hoverlabel.Font",
        "plotly.graph_objs.streamtube.legendgrouptitle._font.Font": "plotly.graph_objs.streamtube.legendgrouptitle.Font",
        "plotly.graph_objs.sunburst._domain.Domain": "plotly.graph_objs.sunburst.Domain",
        "plotly.graph_objs.sunburst._hoverlabel.Hoverlabel": "plotly.graph_objs.sunburst.Hoverlabel",
        "plotly.graph_objs.sunburst._insidetextfont.Insidetextfont": "plotly.graph_objs.sunburst.Insidetextfont",
        "plotly.graph_objs.sunburst._leaf.Leaf": "plotly.graph_objs.sunburst.Leaf",
        "plotly.graph_objs.sunburst._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.sunburst.Legendgrouptitle",
        "plotly.graph_objs.sunburst._marker.Marker": "plotly.graph_objs.sunburst.Marker",
        "plotly.graph_objs.sunburst._outsidetextfont.Outsidetextfont": "plotly.graph_objs.sunburst.Outsidetextfont",
        "plotly.graph_objs.sunburst._root.Root": "plotly.graph_objs.sunburst.Root",
        "plotly.graph_objs.sunburst._stream.Stream": "plotly.graph_objs.sunburst.Stream",
        "plotly.graph_objs.sunburst._textfont.Textfont": "plotly.graph_objs.sunburst.Textfont",
        "plotly.graph_objs.sunburst.hoverlabel._font.Font": "plotly.graph_objs.sunburst.hoverlabel.Font",
        "plotly.graph_objs.sunburst.legendgrouptitle._font.Font": "plotly.graph_objs.sunburst.legendgrouptitle.Font",
        "plotly.graph_objs.sunburst.marker._colorbar.ColorBar": "plotly.graph_objs.sunburst.marker.ColorBar",
        "plotly.graph_objs.sunburst.marker._line.Line": "plotly.graph_objs.sunburst.marker.Line",
        "plotly.graph_objs.sunburst.marker._pattern.Pattern": "plotly.graph_objs.sunburst.marker.Pattern",
        "plotly.graph_objs.sunburst.marker.colorbar._tickfont.Tickfont": "plotly.graph_objs.sunburst.marker.colorbar.Tickfont",
        "plotly.graph_objs.sunburst.marker.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.sunburst.marker.colorbar.Tickformatstop",
        "plotly.graph_objs.sunburst.marker.colorbar._title.Title": "plotly.graph_objs.sunburst.marker.colorbar.Title",
        "plotly.graph_objs.sunburst.marker.colorbar.title._font.Font": "plotly.graph_objs.sunburst.marker.colorbar.title.Font",
        "plotly.graph_objs.surface._colorbar.ColorBar": "plotly.graph_objs.surface.ColorBar",
        "plotly.graph_objs.surface._contours.Contours": "plotly.graph_objs.surface.Contours",
        "plotly.graph_objs.surface._hoverlabel.Hoverlabel": "plotly.graph_objs.surface.Hoverlabel",
        "plotly.graph_objs.surface._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.surface.Legendgrouptitle",
        "plotly.graph_objs.surface._lighting.Lighting": "plotly.graph_objs.surface.Lighting",
        "plotly.graph_objs.surface._lightposition.Lightposition": "plotly.graph_objs.surface.Lightposition",
        "plotly.graph_objs.surface._stream.Stream": "plotly.graph_objs.surface.Stream",
        "plotly.graph_objs.surface.colorbar._tickfont.Tickfont": "plotly.graph_objs.surface.colorbar.Tickfont",
        "plotly.graph_objs.surface.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.surface.colorbar.Tickformatstop",
        "plotly.graph_objs.surface.colorbar._title.Title": "plotly.graph_objs.surface.colorbar.Title",
        "plotly.graph_objs.surface.colorbar.title._font.Font": "plotly.graph_objs.surface.colorbar.title.Font",
        "plotly.graph_objs.surface.contours._x.X": "plotly.graph_objs.surface.contours.X",
        "plotly.graph_objs.surface.contours._y.Y": "plotly.graph_objs.surface.contours.Y",
        "plotly.graph_objs.surface.contours._z.Z": "plotly.graph_objs.surface.contours.Z",
        "plotly.graph_objs.surface.contours.x._project.Project": "plotly.graph_objs.surface.contours.x.Project",
        "plotly.graph_objs.surface.contours.y._project.Project": "plotly.graph_objs.surface.contours.y.Project",
        "plotly.graph_objs.surface.contours.z._project.Project": "plotly.graph_objs.surface.contours.z.Project",
        "plotly.graph_objs.surface.hoverlabel._font.Font": "plotly.graph_objs.surface.hoverlabel.Font",
        "plotly.graph_objs.surface.legendgrouptitle._font.Font": "plotly.graph_objs.surface.legendgrouptitle.Font",
        "plotly.graph_objs.table._cells.Cells": "plotly.graph_objs.table.Cells",
        "plotly.graph_objs.table._domain.Domain": "plotly.graph_objs.table.Domain",
        "plotly.graph_objs.table._header.Header": "plotly.graph_objs.table.Header",
        "plotly.graph_objs.table._hoverlabel.Hoverlabel": "plotly.graph_objs.table.Hoverlabel",
        "plotly.graph_objs.table._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.table.Legendgrouptitle",
        "plotly.graph_objs.table._stream.Stream": "plotly.graph_objs.table.Stream",
        "plotly.graph_objs.table.cells._fill.Fill": "plotly.graph_objs.table.cells.Fill",
        "plotly.graph_objs.table.cells._font.Font": "plotly.graph_objs.table.cells.Font",
        "plotly.graph_objs.table.cells._line.Line": "plotly.graph_objs.table.cells.Line",
        "plotly.graph_objs.table.header._fill.Fill": "plotly.graph_objs.table.header.Fill",
        "plotly.graph_objs.table.header._font.Font": "plotly.graph_objs.table.header.Font",
        "plotly.graph_objs.table.header._line.Line": "plotly.graph_objs.table.header.Line",
        "plotly.graph_objs.table.hoverlabel._font.Font": "plotly.graph_objs.table.hoverlabel.Font",
        "plotly.graph_objs.table.legendgrouptitle._font.Font": "plotly.graph_objs.table.legendgrouptitle.Font",
        "plotly.graph_objs.treemap._domain.Domain": "plotly.graph_objs.treemap.Domain",
        "plotly.graph_objs.treemap._hoverlabel.Hoverlabel": "plotly.graph_objs.treemap.Hoverlabel",
        "plotly.graph_objs.treemap._insidetextfont.Insidetextfont": "plotly.graph_objs.treemap.Insidetextfont",
        "plotly.graph_objs.treemap._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.treemap.Legendgrouptitle",
        "plotly.graph_objs.treemap._marker.Marker": "plotly.graph_objs.treemap.Marker",
        "plotly.graph_objs.treemap._outsidetextfont.Outsidetextfont": "plotly.graph_objs.treemap.Outsidetextfont",
        "plotly.graph_objs.treemap._pathbar.Pathbar": "plotly.graph_objs.treemap.Pathbar",
        "plotly.graph_objs.treemap._root.Root": "plotly.graph_objs.treemap.Root",
        "plotly.graph_objs.treemap._stream.Stream": "plotly.graph_objs.treemap.Stream",
        "plotly.graph_objs.treemap._textfont.Textfont": "plotly.graph_objs.treemap.Textfont",
        "plotly.graph_objs.treemap._tiling.Tiling": "plotly.graph_objs.treemap.Tiling",
        "plotly.graph_objs.treemap.hoverlabel._font.Font": "plotly.graph_objs.treemap.hoverlabel.Font",
        "plotly.graph_objs.treemap.legendgrouptitle._font.Font": "plotly.graph_objs.treemap.legendgrouptitle.Font",
        "plotly.graph_objs.treemap.marker._colorbar.ColorBar": "plotly.graph_objs.treemap.marker.ColorBar",
        "plotly.graph_objs.treemap.marker._line.Line": "plotly.graph_objs.treemap.marker.Line",
        "plotly.graph_objs.treemap.marker._pad.Pad": "plotly.graph_objs.treemap.marker.Pad",
        "plotly.graph_objs.treemap.marker._pattern.Pattern": "plotly.graph_objs.treemap.marker.Pattern",
        "plotly.graph_objs.treemap.marker.colorbar._tickfont.Tickfont": "plotly.graph_objs.treemap.marker.colorbar.Tickfont",
        "plotly.graph_objs.treemap.marker.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.treemap.marker.colorbar.Tickformatstop",
        "plotly.graph_objs.treemap.marker.colorbar._title.Title": "plotly.graph_objs.treemap.marker.colorbar.Title",
        "plotly.graph_objs.treemap.marker.colorbar.title._font.Font": "plotly.graph_objs.treemap.marker.colorbar.title.Font",
        "plotly.graph_objs.treemap.pathbar._textfont.Textfont": "plotly.graph_objs.treemap.pathbar.Textfont",
        "plotly.graph_objs.violin._box.Box": "plotly.graph_objs.violin.Box",
        "plotly.graph_objs.violin._hoverlabel.Hoverlabel": "plotly.graph_objs.violin.Hoverlabel",
        "plotly.graph_objs.violin._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.violin.Legendgrouptitle",
        "plotly.graph_objs.violin._line.Line": "plotly.graph_objs.violin.Line",
        "plotly.graph_objs.violin._marker.Marker": "plotly.graph_objs.violin.Marker",
        "plotly.graph_objs.violin._meanline.Meanline": "plotly.graph_objs.violin.Meanline",
        "plotly.graph_objs.violin._selected.Selected": "plotly.graph_objs.violin.Selected",
        "plotly.graph_objs.violin._stream.Stream": "plotly.graph_objs.violin.Stream",
        "plotly.graph_objs.violin._unselected.Unselected": "plotly.graph_objs.violin.Unselected",
        "plotly.graph_objs.violin.box._line.Line": "plotly.graph_objs.violin.box.Line",
        "plotly.graph_objs.violin.hoverlabel._font.Font": "plotly.graph_objs.violin.hoverlabel.Font",
        "plotly.graph_objs.violin.legendgrouptitle._font.Font": "plotly.graph_objs.violin.legendgrouptitle.Font",
        "plotly.graph_objs.violin.marker._line.Line": "plotly.graph_objs.violin.marker.Line",
        "plotly.graph_objs.violin.selected._marker.Marker": "plotly.graph_objs.violin.selected.Marker",
        "plotly.graph_objs.violin.unselected._marker.Marker": "plotly.graph_objs.violin.unselected.Marker",
        "plotly.graph_objs.volume._caps.Caps": "plotly.graph_objs.volume.Caps",
        "plotly.graph_objs.volume._colorbar.ColorBar": "plotly.graph_objs.volume.ColorBar",
        "plotly.graph_objs.volume._contour.Contour": "plotly.graph_objs.volume.Contour",
        "plotly.graph_objs.volume._hoverlabel.Hoverlabel": "plotly.graph_objs.volume.Hoverlabel",
        "plotly.graph_objs.volume._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.volume.Legendgrouptitle",
        "plotly.graph_objs.volume._lighting.Lighting": "plotly.graph_objs.volume.Lighting",
        "plotly.graph_objs.volume._lightposition.Lightposition": "plotly.graph_objs.volume.Lightposition",
        "plotly.graph_objs.volume._slices.Slices": "plotly.graph_objs.volume.Slices",
        "plotly.graph_objs.volume._spaceframe.Spaceframe": "plotly.graph_objs.volume.Spaceframe",
        "plotly.graph_objs.volume._stream.Stream": "plotly.graph_objs.volume.Stream",
        "plotly.graph_objs.volume._surface.Surface": "plotly.graph_objs.volume.Surface",
        "plotly.graph_objs.volume.caps._x.X": "plotly.graph_objs.volume.caps.X",
        "plotly.graph_objs.volume.caps._y.Y": "plotly.graph_objs.volume.caps.Y",
        "plotly.graph_objs.volume.caps._z.Z": "plotly.graph_objs.volume.caps.Z",
        "plotly.graph_objs.volume.colorbar._tickfont.Tickfont": "plotly.graph_objs.volume.colorbar.Tickfont",
        "plotly.graph_objs.volume.colorbar._tickformatstop.Tickformatstop": "plotly.graph_objs.volume.colorbar.Tickformatstop",
        "plotly.graph_objs.volume.colorbar._title.Title": "plotly.graph_objs.volume.colorbar.Title",
        "plotly.graph_objs.volume.colorbar.title._font.Font": "plotly.graph_objs.volume.colorbar.title.Font",
        "plotly.graph_objs.volume.hoverlabel._font.Font": "plotly.graph_objs.volume.hoverlabel.Font",
        "plotly.graph_objs.volume.legendgrouptitle._font.Font": "plotly.graph_objs.volume.legendgrouptitle.Font",
        "plotly.graph_objs.volume.slices._x.X": "plotly.graph_objs.volume.slices.X",
        "plotly.graph_objs.volume.slices._y.Y": "plotly.graph_objs.volume.slices.Y",
        "plotly.graph_objs.volume.slices._z.Z": "plotly.graph_objs.volume.slices.Z",
        "plotly.graph_objs.waterfall._connector.Connector": "plotly.graph_objs.waterfall.Connector",
        "plotly.graph_objs.waterfall._decreasing.Decreasing": "plotly.graph_objs.waterfall.Decreasing",
        "plotly.graph_objs.waterfall._hoverlabel.Hoverlabel": "plotly.graph_objs.waterfall.Hoverlabel",
        "plotly.graph_objs.waterfall._increasing.Increasing": "plotly.graph_objs.waterfall.Increasing",
        "plotly.graph_objs.waterfall._insidetextfont.Insidetextfont": "plotly.graph_objs.waterfall.Insidetextfont",
        "plotly.graph_objs.waterfall._legendgrouptitle.Legendgrouptitle": "plotly.graph_objs.waterfall.Legendgrouptitle",
        "plotly.graph_objs.waterfall._outsidetextfont.Outsidetextfont": "plotly.graph_objs.waterfall.Outsidetextfont",
        "plotly.graph_objs.waterfall._stream.Stream": "plotly.graph_objs.waterfall.Stream",
        "plotly.graph_objs.waterfall._textfont.Textfont": "plotly.graph_objs.waterfall.Textfont",
        "plotly.graph_objs.waterfall._totals.Totals": "plotly.graph_objs.waterfall.Totals",
        "plotly.graph_objs.waterfall.connector._line.Line": "plotly.graph_objs.waterfall.connector.Line",
        "plotly.graph_objs.waterfall.decreasing._marker.Marker": "plotly.graph_objs.waterfall.decreasing.Marker",
        "plotly.graph_objs.waterfall.decreasing.marker._line.Line": "plotly.graph_objs.waterfall.decreasing.marker.Line",
        "plotly.graph_objs.waterfall.hoverlabel._font.Font": "plotly.graph_objs.waterfall.hoverlabel.Font",
        "plotly.graph_objs.waterfall.increasing._marker.Marker": "plotly.graph_objs.waterfall.increasing.Marker",
        "plotly.graph_objs.waterfall.increasing.marker._line.Line": "plotly.graph_objs.waterfall.increasing.marker.Line",
        "plotly.graph_objs.waterfall.legendgrouptitle._font.Font": "plotly.graph_objs.waterfall.legendgrouptitle.Font",
        "plotly.graph_objs.waterfall.totals._marker.Marker": "plotly.graph_objs.waterfall.totals.Marker",
        "plotly.graph_objs.waterfall.totals.marker._line.Line": "plotly.graph_objs.waterfall.totals.marker.Line",
        "plotly.io._base_renderers.BrowserRenderer": "plotly.io.base_renderers.BrowserRenderer",
        "plotly.io._base_renderers.ColabRenderer": "plotly.io.base_renderers.ColabRenderer",
        "plotly.io._base_renderers.ExternalRenderer": "plotly.io.base_renderers.ExternalRenderer",
        "plotly.io._base_renderers.HtmlRenderer": "plotly.io.base_renderers.HtmlRenderer",
        "plotly.io._base_renderers.ImageRenderer": "plotly.io.base_renderers.ImageRenderer",
        "plotly.io._base_renderers.JpegRenderer": "plotly.io.base_renderers.JpegRenderer",
        "plotly.io._base_renderers.JsonRenderer": "plotly.io.base_renderers.JsonRenderer",
        "plotly.io._base_renderers.KaggleRenderer": "plotly.io.base_renderers.KaggleRenderer",
        "plotly.io._base_renderers.MimetypeRenderer": "plotly.io.base_renderers.MimetypeRenderer",
        "plotly.io._base_renderers.NotebookRenderer": "plotly.io.base_renderers.NotebookRenderer",
        "plotly.io._base_renderers.PdfRenderer": "plotly.io.base_renderers.PdfRenderer",
        "plotly.io._base_renderers.PlotlyRenderer": "plotly.io.base_renderers.PlotlyRenderer",
        "plotly.io._base_renderers.PngRenderer": "plotly.io.base_renderers.PngRenderer",
        "plotly.io._base_renderers.SvgRenderer": "plotly.io.base_renderers.SvgRenderer",
        "plotly.io._json.from_json": "plotly.io.json.from_json",
        "plotly.io._kaleido.full_figure_for_development": "plotly.io.full_figure_for_development",
        "plotly.io._json.from_json_plotly": "plotly.io.json.from_json_plotly",
        "plotly.io._json.read_json": "plotly.io.read_json",
        "plotly.io._json.to_json": "plotly.io.to_json",
        "plotly.io._json.to_json_plotly": "plotly.io.json.to_json_plotly",
        "plotly.io._json.write_json": "plotly.io.write_json",
        "plotly.io._kaleido.to_image": "plotly.io.to_image",
        "plotly.io._kaleido.write_image": "plotly.io.write_image",
        "plotly.io._orca.ensure_server": "plotly.io.orca.ensure_server",
        "plotly.io._orca.reset_status": "plotly.io.orca.reset_status",
        "plotly.io._orca.shutdown_server": "plotly.io.orca.shutdown_server",
        "plotly.io._orca.validate_executable": "plotly.io.orca.validate_executable",
        "plotly.io._renderers.show": "plotly.io.show",
        "plotly.io._html.to_html": "plotly.io.to_html",
        "plotly.io._templates.to_templated": "plotly.io.to_templated",
        "plotly.io._html.write_html": "plotly.io.write_html",
        "plotly.offline.offline.download_plotlyjs": "plotly.offline.offline.download_plotlyjs",
        "plotly.offline.offline.enable_mpl_offline": "plotly.offline.offline.enable_mpl_offline",
        "plotly.offline.offline.get_plotlyjs": "plotly.offline.offline.get_plotlyjs",
        "plotly.offline.offline.get_plotlyjs_version": "plotly.offline.offline.get_plotlyjs_version",
        "plotly.offline.offline.init_notebook_mode": "plotly.offline.offline.init_notebook_mode",
        "plotly.offline.offline.iplot": "plotly.offline.offline.iplot",
        "plotly.offline.offline.iplot_mpl": "plotly.offline.offline.iplot_mpl",
        "plotly.offline.offline.build_save_image_post_script": "plotly.offline.offline.build_save_image_post_script",
        "plotly.offline.offline.get_image_download_script": "plotly.offline.offline.get_image_download_script",
        "plotly.tools.warning_on_one_line": "plotly.tools.warning_on_one_line",
        "plotly.offline.offline.plot": "plotly.offline.plot",
        "plotly.offline.offline.plot_mpl": "plotly.offline.plot_mpl",
        "plotly.tools.FigureFactory": "plotly.tools.FigureFactory",
        "plotly.tools.get_config_plotly_server_url": "plotly.tools.get_config_plotly_server_url",
        "plotly.tools.get_graph_obj": "plotly.tools.get_graph_obj",
        "plotly.tools.get_subplots": "plotly.tools.get_subplots",
        "plotly.tools.make_subplots": "plotly.tools.make_subplots",
        "plotly.tools.mpl_to_plotly": "plotly.tools.mpl_to_plotly",
        "plotly.tools.return_figure_from_figure_or_data": "plotly.tools.return_figure_from_figure_or_data",
        "plotly.utils.ElidedPrettyPrinter": "plotly.utils.ElidedPrettyPrinter",
        "plotly.utils.ElidedWrapper": "plotly.utils.ElidedWrapper",
        "plotly.utils.decode_unicode": "plotly.utils.decode_unicode",
        "plotly.utils.get_by_path": "plotly.utils.get_by_path",
        "plotly.utils.node_generator": "plotly.utils.node_generator"
    },
    "statsmodels": {
        "statsmodels.tools._testing.PytestTester": "statsmodels.tools.PytestTester",
        "statsmodels.compat.python.asbytes": "statsmodels.compat.python.asbytes",
        "statsmodels.compat.python.asstr": "statsmodels.compat.python.asstr",
        "statsmodels.compat.python.<lambda>": "statsmodels.compat.python.asunicode",
        "statsmodels.compat.python.lfilter": "statsmodels.compat.python.lfilter",
        "statsmodels.compat.python.lmap": "statsmodels.compat.python.lmap",
        "statsmodels.compat.python.lrange": "statsmodels.compat.python.lrange",
        "statsmodels.compat.python.lzip": "statsmodels.compat.python.lzip",
        "statsmodels.compat.pandas.call_cached_func": "statsmodels.compat.pandas.call_cached_func",
        "statsmodels.compat.pandas.get_cached_doc": "statsmodels.compat.pandas.get_cached_doc",
        "statsmodels.compat.pandas.get_cached_func": "statsmodels.compat.pandas.get_cached_func",
        "statsmodels.compat.pandas.is_float_index": "statsmodels.compat.pandas.is_float_index",
        "statsmodels.compat.pandas.is_int_index": "statsmodels.compat.pandas.is_int_index",
        "statsmodels.compat.pandas.to_numpy": "statsmodels.compat.pandas.to_numpy",
        "statsmodels.compat.patsy.monkey_patch_cat_dtype": "statsmodels.monkey_patch_cat_dtype",
        "statsmodels.compat.patsy._safe_is_pandas_categorical_dtype": "patsy.util.safe_is_pandas_categorical_dtype",
        "statsmodels.compat.python.with_metaclass": "statsmodels.compat.python.with_metaclass",
        "statsmodels.test": "statsmodels.test",
        "statsmodels.tools.tools.add_constant": "statsmodels.tools.tools.add_constant",
        "statsmodels.tools.tools.categorical": "statsmodels.tools.tools.categorical",
        "statsmodels.tools.data.interpret_data": "statsmodels.tools.data.interpret_data",
        "statsmodels.tools.data.is_data_frame": "statsmodels.tools.data.is_data_frame",
        "statsmodels.tools.data.is_design_matrix": "statsmodels.tools.data.is_design_matrix",
        "statsmodels.tools.data.struct_to_ndarray": "statsmodels.tools.data.struct_to_ndarray",
        "statsmodels.tools.tools.Bunch": "statsmodels.tools.tools.Bunch",
        "statsmodels.tools.validation.validation.array_like": "statsmodels.tools.validation.validation.array_like",
        "statsmodels.tools.tools.asstr2": "statsmodels.tools.tools.asstr2",
        "statsmodels.tools.tools.clean0": "statsmodels.tools.tools.clean0",
        "statsmodels.tools.tools.drop_missing": "statsmodels.tools.tools.drop_missing",
        "statsmodels.tools.tools.fullrank": "statsmodels.tools.tools.fullrank",
        "statsmodels.tools.tools.isestimable": "statsmodels.tools.tools.isestimable",
        "statsmodels.tools.tools.matrix_rank": "statsmodels.tools.tools.matrix_rank",
        "statsmodels.tools.tools.maybe_unwrap_results": "statsmodels.tools.tools.maybe_unwrap_results",
        "statsmodels.tools.tools.nan_dot": "statsmodels.tools.tools.nan_dot",
        "statsmodels.tools.tools.pinv_extended": "statsmodels.tools.tools.pinv_extended",
        "statsmodels.tools.tools.recipr": "statsmodels.tools.tools.recipr",
        "statsmodels.tools.tools.recipr0": "statsmodels.tools.tools.recipr0",
        "statsmodels.tools.tools.unsqueeze": "statsmodels.tools.tools.unsqueeze",
        "statsmodels.tools.validation.validation.PandasWrapper": "statsmodels.tools.validation.validation.PandasWrapper",
        "statsmodels.tools.validation.validation.bool_like": "statsmodels.tools.validation.validation.bool_like",
        "statsmodels.tools.validation.validation.dict_like": "statsmodels.tools.validation.validation.dict_like",
        "statsmodels.tools.validation.validation.float_like": "statsmodels.tools.validation.validation.float_like",
        "statsmodels.tools.validation.validation.int_like": "statsmodels.tools.validation.validation.int_like",
        "statsmodels.tools.validation.validation.required_int_like": "statsmodels.tools.validation.validation.required_int_like",
        "statsmodels.tools.validation.validation.string_like": "statsmodels.tools.validation.validation.string_like"
    },
    "transformers": {
        "transformers.models.bert.modeling_bert.BertModel": "transformers.BertModel",
        "transformers.models.gpt2.tokenization_gpt2_fast.GPT2TokenizerFast": "transformers.GPT2TokenizerFast"
    },
    "datasets": {
        "datasets.features.features.Array2D": "datasets.Array2D",
        "datasets.features.features.Array3D": "datasets.Array3D",
        "datasets.features.features.Array4D": "datasets.Array4D",
        "datasets.features.features.Array5D": "datasets.Array5D",
        "datasets.builder.ArrowBasedBuilder": "datasets.ArrowBasedBuilder",
        "datasets.features.audio.Audio": "datasets.Audio",
        "datasets.builder.BuilderConfig": "datasets.BuilderConfig",
        "datasets.features.features.ClassLabel": "datasets.ClassLabel",
        "datasets.arrow_dataset.Dataset": "datasets.Dataset",
        "datasets.builder.DatasetBuilder": "datasets.DatasetBuilder",
        "datasets.dataset_dict.DatasetDict": "datasets.DatasetDict",
        "datasets.info.DatasetInfo": "datasets.DatasetInfo",
        "datasets.download.download_config.DownloadConfig": "datasets.streaming.DownloadConfig",
        "datasets.download.download_manager.DownloadManager": "datasets.DownloadManager",
        "datasets.download.download_manager.DownloadMode": "datasets.DownloadMode",
        "datasets.features.features.Features": "datasets.Features",
        "datasets.builder.GeneratorBasedBuilder": "datasets.GeneratorBasedBuilder",
        "datasets.features.image.Image": "datasets.Image",
        "datasets.iterable_dataset.IterableDataset": "datasets.IterableDataset",
        "datasets.dataset_dict.IterableDatasetDict": "datasets.IterableDatasetDict",
        "datasets.features.features.LargeList": "datasets.LargeList",
        "datasets.splits.NamedSplit": "datasets.splits.NamedSplit",
        "datasets.splits.NamedSplitAll": "datasets.splits.NamedSplitAll",
        "datasets.arrow_reader.ReadInstruction": "datasets.ReadInstruction",
        "datasets.features.features.Sequence": "datasets.search.Sequence",
        "datasets.splits.Split": "datasets.splits.Split",
        "datasets.splits.SplitBase": "datasets.splits.SplitBase",
        "datasets.splits.SplitDict": "datasets.splits.SplitDict",
        "datasets.splits.SplitGenerator": "datasets.splits.SplitGenerator",
        "datasets.splits.SplitInfo": "datasets.splits.SplitInfo",
        "datasets.download.streaming_download_manager.StreamingDownloadManager": "datasets.StreamingDownloadManager",
        "datasets.splits.SubSplitInfo": "datasets.splits.SubSplitInfo",
        "datasets.features.translation.Translation": "datasets.Translation",
        "datasets.features.translation.TranslationVariableLanguages": "datasets.TranslationVariableLanguages",
        "datasets.features.features.Value": "datasets.Value",
        "datasets.utils.info_utils.VerificationMode": "datasets.VerificationMode",
        "datasets.utils.version.Version": "datasets.Version",
        "datasets.features.video.Video": "datasets.Video",
        "datasets.utils.tqdm.are_progress_bars_disabled": "datasets.are_progress_bars_disabled",
        "datasets.arrow_reader.ArrowReader": "datasets.builder.ArrowReader",
        "datasets.arrow_writer.ArrowWriter": "datasets.builder.ArrowWriter",
        "datasets.arrow_dataset.DatasetInfoMixin": "datasets.iterable_dataset.DatasetInfoMixin",
        "datasets.info.DatasetInfosDict": "datasets.load.DatasetInfosDict",
        "datasets.arrow_dataset.DatasetTransformationNotAllowedError": "datasets.arrow_dataset.DatasetTransformationNotAllowedError",
        "datasets.table.InMemoryTable": "datasets.table.InMemoryTable",
        "datasets.search.IndexableMixin": "datasets.search.IndexableMixin",
        "datasets.formatting.formatting.LazyDict": "datasets.formatting.formatting.LazyDict",
        "datasets.table.MemoryMappedTable": "datasets.table.MemoryMappedTable",
        "datasets.utils.metadata.MetadataConfigs": "datasets.load.MetadataConfigs",
        "datasets.arrow_dataset.NonExistentDatasetError": "datasets.arrow_dataset.NonExistentDatasetError",
        "datasets.arrow_writer.OptimizedTypedSequence": "datasets.arrow_writer.OptimizedTypedSequence",
        "datasets.table.Table": "datasets.table.Table",
        "datasets.arrow_dataset.TensorflowDatasetMixin": "datasets.arrow_dataset.TensorflowDatasetMixin",
        "datasets.utils.py_utils.asdict": "datasets.splits.asdict",
        "datasets.table._wrap_for_chunked_arrays.<locals>.wrapper": "datasets.table.embed_array_storage",
        "datasets.table.concat_tables": "datasets.table.concat_tables",
        "datasets.utils.py_utils.convert_file_size_to_int": "datasets.utils.py_utils.convert_file_size_to_int",
        "datasets.utils.tf_utils.dataset_to_tf": "datasets.utils.tf_utils.dataset_to_tf",
        "datasets.table.embed_table_storage": "datasets.table.embed_table_storage",
        "datasets.utils.file_utils.estimate_dataset_size": "datasets.utils.file_utils.estimate_dataset_size",
        "datasets.fingerprint.fingerprint_transform": "datasets.fingerprint.fingerprint_transform",
        "datasets.fingerprint.format_kwargs_for_fingerprint": "datasets.fingerprint.format_kwargs_for_fingerprint",
        "datasets.formatting.formatting.format_table": "datasets.formatting.formatting.format_table",
        "datasets.fingerprint.format_transform_for_fingerprint": "datasets.fingerprint.format_transform_for_fingerprint",
        "datasets.fingerprint.generate_fingerprint": "datasets.fingerprint.generate_fingerprint",
        "datasets.features.features.generate_from_arrow_type": "datasets.features.features.generate_from_arrow_type",
        "datasets.fingerprint.generate_random_fingerprint": "datasets.fingerprint.generate_random_fingerprint",
        "datasets.formatting.get_format_type_from_alias": "datasets.iterable_dataset.get_format_type_from_alias",
        "datasets.formatting.get_formatter": "datasets.iterable_dataset.get_formatter",
        "datasets.arrow_dataset.get_indices_from_mask_function": "datasets.arrow_dataset.get_indices_from_mask_function",
        "datasets.fingerprint.get_temporary_cache_files_directory": "datasets.fingerprint.get_temporary_cache_files_directory",
        "datasets.utils.py_utils.glob_pattern_to_regex": "datasets.dataset_dict.glob_pattern_to_regex",
        "datasets.utils.tqdm.tqdm": "datasets.tqdm",
        "datasets.utils.py_utils.iflatmap_unordered": "datasets.utils.py_utils.iflatmap_unordered",
        "datasets.fingerprint.is_caching_enabled": "datasets.is_caching_enabled",
        "datasets.filesystems.is_remote_filesystem": "datasets.filesystems.is_remote_filesystem",
        "datasets.utils.info_utils.is_small_dataset": "datasets.load.is_small_dataset",
        "datasets.table.list_table_cache_files": "datasets.table.list_table_cache_files",
        "datasets.utils.tqdm.disable_progress_bars": "datasets.disable_progress_bars",
        "datasets.utils.logging.disable_propagation": "datasets.utils.logging.disable_propagation",
        "datasets.utils.tqdm.enable_progress_bars": "datasets.enable_progress_bars",
        "datasets.utils.logging.enable_propagation": "datasets.utils.logging.enable_propagation",
        "datasets.utils.logging.get_logger": "datasets.table.get_logger",
        "datasets.utils.logging.get_verbosity": "datasets.utils.logging.get_verbosity",
        "datasets.utils.tqdm.is_progress_bar_enabled": "datasets.is_progress_bar_enabled",
        "datasets.utils.logging.set_verbosity": "datasets.utils.logging.set_verbosity",
        "datasets.utils.logging.set_verbosity_debug": "datasets.utils.logging.set_verbosity_debug",
        "datasets.utils.logging.set_verbosity_error": "datasets.utils.logging.set_verbosity_error",
        "datasets.utils.logging.set_verbosity_info": "datasets.utils.logging.set_verbosity_info",
        "datasets.utils.logging.set_verbosity_warning": "datasets.utils.logging.set_verbosity_warning",
        "datasets.fingerprint.maybe_register_dataset_for_temp_dir_deletion": "datasets.fingerprint.maybe_register_dataset_for_temp_dir_deletion",
        "datasets.utils.tf_utils.minimal_tf_collate_fn": "datasets.utils.tf_utils.minimal_tf_collate_fn",
        "datasets.utils.tf_utils.multiprocess_dataset_to_tf": "datasets.utils.tf_utils.multiprocess_dataset_to_tf",
        "datasets.features.features.pandas_types_mapper": "datasets.formatting.formatting.pandas_types_mapper",
        "datasets.formatting.formatting.query_table": "datasets.formatting.query_table",
        "datasets.features.features.require_decoding": "datasets.features.features.require_decoding",
        "datasets.data_files.sanitize_patterns": "datasets.load.sanitize_patterns",
        "datasets.utils.stratify.stratified_shuffle_split_generate_indices": "datasets.utils.stratify.stratified_shuffle_split_generate_indices",
        "datasets.utils.py_utils.string_to_dict": "datasets.features.video.string_to_dict",
        "datasets.table.table_cast": "datasets.packaged_modules.xml.xml.table_cast",
        "datasets.table.table_iter": "datasets.table.table_iter",
        "datasets.table.table_visitor": "datasets.table.table_visitor",
        "datasets.arrow_dataset.transmit_format": "datasets.arrow_dataset.transmit_format",
        "datasets.fingerprint.update_fingerprint": "datasets.fingerprint.update_fingerprint",
        "datasets.arrow_dataset.update_metadata_with_features": "datasets.arrow_dataset.update_metadata_with_features",
        "datasets.fingerprint.validate_fingerprint": "datasets.fingerprint.validate_fingerprint",
        "datasets.utils.file_utils.xgetsize": "datasets.streaming.xgetsize",
        "datasets.arrow_reader.BaseReader": "datasets.arrow_reader.BaseReader",
        "datasets.arrow_reader.DatasetNotOnHfGcsError": "datasets.arrow_reader.DatasetNotOnHfGcsError",
        "datasets.arrow_reader.FileInstructions": "datasets.splits.FileInstructions",
        "datasets.arrow_reader.MissingFilesOnHfGcsError": "datasets.arrow_reader.MissingFilesOnHfGcsError",
        "datasets.arrow_reader.ParquetReader": "datasets.arrow_reader.ParquetReader",
        "datasets.naming.filenames_for_dataset_split": "datasets.packaged_modules.cache.cache.filenames_for_dataset_split",
        "datasets.arrow_reader.make_file_instructions": "datasets.splits.make_file_instructions",
        "datasets.keyhash.DuplicatedKeysError": "datasets.keyhash.DuplicatedKeysError",
        "datasets.keyhash.KeyHasher": "datasets.keyhash.KeyHasher",
        "datasets.arrow_writer.ParquetWriter": "datasets.builder.ParquetWriter",
        "datasets.arrow_writer.SchemaInferenceError": "datasets.builder.SchemaInferenceError",
        "datasets.arrow_writer.TypedSequence": "datasets.arrow_writer.TypedSequence",
        "datasets.features.features.cast_to_python_objects": "datasets.packaged_modules.webdataset.webdataset.cast_to_python_objects",
        "datasets.utils.py_utils.first_non_null_value": "datasets.features.image.first_non_null_value",
        "datasets.features.features.get_nested_type": "datasets.features.features.get_nested_type",
        "datasets.arrow_writer.get_writer_batch_size": "datasets.arrow_writer.get_writer_batch_size",
        "datasets.features.features.list_of_np_array_to_pyarrow_listarray": "datasets.features.features.list_of_np_array_to_pyarrow_listarray",
        "datasets.features.features.numpy_to_pyarrow_listarray": "datasets.features.features.numpy_to_pyarrow_listarray",
        "datasets.features.features.to_pyarrow_listarray": "datasets.features.features.to_pyarrow_listarray",
        "datasets.iterable_dataset.ArrowExamplesIterable": "datasets.iterable_dataset.ArrowExamplesIterable",
        "datasets.table.CastError": "datasets.table.CastError",
        "datasets.data_files.DataFilesDict": "datasets.load.DataFilesDict",
        "datasets.data_files.DataFilesPatternsDict": "datasets.load.DataFilesPatternsDict",
        "datasets.exceptions.DatasetGenerationCastError": "datasets.exceptions.DatasetGenerationCastError",
        "datasets.exceptions.DatasetGenerationError": "datasets.exceptions.DatasetGenerationError",
        "datasets.iterable_dataset.ExamplesIterable": "datasets.iterable_dataset.ExamplesIterable",
        "datasets.exceptions.FileFormatError": "datasets.exceptions.FileFormatError",
        "datasets.utils._filelock.FileLock": "datasets.utils.py_utils.FileLock",
        "datasets.fingerprint.Hasher": "datasets.load.Hasher",
        "datasets.builder.InvalidConfigName": "datasets.builder.InvalidConfigName",
        "datasets.exceptions.ManualDownloadError": "datasets.exceptions.ManualDownloadError",
        "datasets.info.PostProcessedInfo": "datasets.info.PostProcessedInfo",
        "datasets.naming.camelcase_to_snakecase": "datasets.packaged_modules.cache.cache.camelcase_to_snakecase",
        "datasets.utils.py_utils.classproperty": "datasets.utils.py_utils.classproperty",
        "datasets.streaming.extend_dataset_builder_for_streaming": "datasets.streaming.extend_dataset_builder_for_streaming",
        "datasets.utils.info_utils.get_size_checksum_dict": "datasets.download.download_manager.get_size_checksum_dict",
        "datasets.utils.py_utils.has_sufficient_disk_space": "datasets.utils.py_utils.has_sufficient_disk_space",
        "datasets.utils.file_utils.is_remote_url": "datasets.utils.file_utils.is_remote_url",
        "datasets.utils.py_utils.map_nested": "datasets.formatting.torch_formatter.map_nested",
        "datasets.filesystems.rename": "datasets.filesystems.rename",
        "datasets.utils.py_utils.size_str": "datasets.utils.py_utils.size_str",
        "datasets.utils.py_utils.temporary_assignment": "datasets.utils.py_utils.temporary_assignment",
        "datasets.utils.track.tracked_list": "datasets.exceptions.tracked_list",
        "datasets.utils.doc_utils.is_documented_by": "datasets.dataset_dict.is_documented_by",
        "datasets.utils.experimental.experimental": "datasets.parallel.parallel.experimental",
        "datasets.utils.extract.BaseExtractor": "datasets.utils.extract.BaseExtractor",
        "datasets.utils.extract.Bzip2Extractor": "datasets.utils.extract.Bzip2Extractor",
        "datasets.utils.extract.ExtractManager": "datasets.utils.file_utils.ExtractManager",
        "datasets.utils.extract.Extractor": "datasets.utils.extract.Extractor",
        "datasets.utils.extract.GzipExtractor": "datasets.utils.extract.GzipExtractor",
        "datasets.utils.extract.Lz4Extractor": "datasets.utils.extract.Lz4Extractor",
        "datasets.utils.extract.MagicNumberBaseExtractor": "datasets.utils.extract.MagicNumberBaseExtractor",
        "datasets.utils.extract.RarExtractor": "datasets.utils.extract.RarExtractor",
        "datasets.utils.extract.SevenZipExtractor": "datasets.utils.extract.SevenZipExtractor",
        "datasets.utils.extract.TarExtractor": "datasets.utils.extract.TarExtractor",
        "datasets.utils.extract.XzExtractor": "datasets.utils.extract.XzExtractor",
        "datasets.utils.extract.ZipExtractor": "datasets.utils.extract.ZipExtractor",
        "datasets.utils.extract.ZstdExtractor": "datasets.utils.extract.ZstdExtractor",
        "datasets.utils.file_utils.ArchiveIterable": "datasets.download.streaming_download_manager.ArchiveIterable",
        "datasets.utils.file_utils.FilesIterable": "datasets.download.streaming_download_manager.FilesIterable",
        "datasets.utils.file_utils.NonStreamableDatasetError": "datasets.utils.file_utils.NonStreamableDatasetError",
        "datasets.utils.file_utils.TqdmCallback": "datasets.utils.file_utils.TqdmCallback",
        "datasets.utils.track.TrackedIterableFromGenerator": "datasets.exceptions.TrackedIterableFromGenerator",
        "datasets.utils.file_utils.add_end_docstrings": "datasets.utils.file_utils.add_end_docstrings",
        "datasets.utils.file_utils.add_start_docstrings": "datasets.utils.file_utils.add_start_docstrings",
        "datasets.utils.file_utils.cached_path": "datasets.load.cached_path",
        "datasets.utils.file_utils.fsspec_get": "datasets.utils.file_utils.fsspec_get",
        "datasets.utils.file_utils.fsspec_head": "datasets.utils.file_utils.fsspec_head",
        "datasets.utils.file_utils.get_authentication_headers_for_url": "datasets.utils.file_utils.get_authentication_headers_for_url",
        "datasets.utils.file_utils.get_datasets_user_agent": "datasets.load.get_datasets_user_agent",
        "datasets.utils.file_utils.get_from_cache": "datasets.utils.file_utils.get_from_cache",
        "datasets.utils.file_utils.hash_url_to_filename": "datasets.utils.file_utils.hash_url_to_filename",
        "datasets.utils.file_utils.init_hf_modules": "datasets.load.init_hf_modules",
        "datasets.utils.file_utils.is_local_path": "datasets.features.video.is_local_path",
        "datasets.utils.file_utils.is_relative_path": "datasets.load.is_relative_path",
        "datasets.utils.file_utils.readline": "datasets.packaged_modules.json.json.readline",
        "datasets.utils.file_utils.relative_to_absolute_path": "datasets.load.relative_to_absolute_path",
        "datasets.utils.file_utils.stack_multiprocessing_download_progress_bars": "datasets.download.download_manager.stack_multiprocessing_download_progress_bars",
        "datasets.utils.file_utils.url_or_path_join": "datasets.load.url_or_path_join",
        "datasets.utils.file_utils.url_or_path_parent": "datasets.utils.file_utils.url_or_path_parent",
        "datasets.utils.file_utils.xPath": "datasets.streaming.xPath",
        "datasets.utils.file_utils.xbasename": "datasets.packaged_modules.webdataset.webdataset.xbasename",
        "datasets.utils.file_utils.xdirname": "datasets.streaming.xdirname",
        "datasets.utils.file_utils.xet_parse": "datasets.streaming.xet_parse",
        "datasets.utils.file_utils.xexists": "datasets.streaming.xexists",
        "datasets.utils.file_utils.xglob": "datasets.streaming.xglob",
        "datasets.utils.file_utils.xgzip_open": "datasets.streaming.xgzip_open",
        "datasets.utils.file_utils.xisdir": "datasets.streaming.xisdir",
        "datasets.utils.file_utils.xisfile": "datasets.streaming.xisfile",
        "datasets.utils.file_utils.xjoin": "datasets.streaming.xjoin",
        "datasets.utils.file_utils.xlistdir": "datasets.streaming.xlistdir",
        "datasets.utils.file_utils.xnumpy_load": "datasets.streaming.xnumpy_load",
        "datasets.utils.file_utils.xopen": "datasets.streaming.xopen",
        "datasets.utils.file_utils.xpandas_read_csv": "datasets.streaming.xpandas_read_csv",
        "datasets.utils.file_utils.xpandas_read_excel": "datasets.streaming.xpandas_read_excel",
        "datasets.utils.file_utils.xpyarrow_parquet_read_table": "datasets.streaming.xpyarrow_parquet_read_table",
        "datasets.utils.file_utils.xrelpath": "datasets.streaming.xrelpath",
        "datasets.utils.file_utils.xsio_loadmat": "datasets.streaming.xsio_loadmat",
        "datasets.utils.file_utils.xsplit": "datasets.streaming.xsplit",
        "datasets.utils.file_utils.xsplitext": "datasets.streaming.xsplitext",
        "datasets.utils.file_utils.xwalk": "datasets.streaming.xwalk",
        "datasets.utils.file_utils.xxml_dom_minidom_parse": "datasets.streaming.xxml_dom_minidom_parse",
        "datasets.utils.hub.check_auth": "datasets.utils.hub.check_auth",
        "datasets.exceptions.ExpectedMoreDownloadedFilesError": "datasets.exceptions.ExpectedMoreDownloadedFilesError",
        "datasets.exceptions.ExpectedMoreSplitsError": "datasets.exceptions.ExpectedMoreSplitsError",
        "datasets.exceptions.NonMatchingChecksumError": "datasets.exceptions.NonMatchingChecksumError",
        "datasets.exceptions.NonMatchingSplitsSizesError": "datasets.exceptions.NonMatchingSplitsSizesError",
        "datasets.exceptions.UnexpectedDownloadedFileError": "datasets.exceptions.UnexpectedDownloadedFileError",
        "datasets.exceptions.UnexpectedSplitsError": "datasets.exceptions.UnexpectedSplitsError",
        "datasets.utils.info_utils.verify_checksums": "datasets.builder.verify_checksums",
        "datasets.utils.info_utils.verify_splits": "datasets.builder.verify_splits",
        "datasets.utils.patching.patch_submodule": "datasets.streaming.patch_submodule",
        "datasets.utils.py_utils.NestedDataStructure": "datasets.download.download_manager.NestedDataStructure",
        "datasets.utils.py_utils.NonMutableDict": "datasets.splits.NonMutableDict",
        "datasets.utils._dill.Pickler": "datasets.utils.py_utils.Pickler",
        "datasets.utils.py_utils.copyfunc": "datasets.utils.py_utils.copyfunc",
        "datasets.utils._dill.dump": "datasets.utils.py_utils.dump",
        "datasets.utils._dill.dumps": "datasets.fingerprint.dumps",
        "datasets.utils.py_utils.get_imports": "datasets.streaming.get_imports",
        "datasets.utils.py_utils.iter_batched": "datasets.utils.py_utils.iter_batched",
        "datasets.utils.py_utils.lock_importable_file": "datasets.streaming.lock_importable_file",
        "datasets.utils.py_utils.no_op_if_value_is_null": "datasets.formatting.polars_formatter.no_op_if_value_is_null",
        "datasets.parallel.parallel.parallel_map": "datasets.parallel.parallel_map",
        "datasets.utils._dill.pklregister": "datasets.utils.py_utils.pklregister",
        "datasets.utils.py_utils.temp_seed": "datasets.utils.py_utils.temp_seed",
        "datasets.utils.py_utils.unique_values": "datasets.info.unique_values",
        "datasets.utils.py_utils.zip_dict": "datasets.features.features.zip_dict",
        "datasets.utils.stratify.approximate_mode": "datasets.utils.stratify.approximate_mode",
        "datasets.utils.tf_utils.NumpyMultiprocessingGenerator": "datasets.utils.tf_utils.NumpyMultiprocessingGenerator",
        "datasets.utils.tf_utils.SharedMemoryContext": "datasets.utils.tf_utils.SharedMemoryContext",
        "datasets.utils.tf_utils.is_numeric_pa_type": "datasets.utils.tf_utils.is_numeric_pa_type",
        "datasets.utils.tf_utils.minimal_tf_collate_fn_with_renaming": "datasets.utils.tf_utils.minimal_tf_collate_fn_with_renaming",
        "datasets.utils.tf_utils.np_get_batch": "datasets.utils.tf_utils.np_get_batch",
        "datasets.utils.track.tracked_str": "datasets.exceptions.tracked_str",
        "datasets.combine.concatenate_datasets": "datasets.concatenate_datasets",
        "datasets.combine.interleave_datasets": "datasets.interleave_datasets",
        "datasets.data_files.DataFilesList": "datasets.load.DataFilesList",
        "datasets.data_files.DataFilesPatternsList": "datasets.load.DataFilesPatternsList",
        "datasets.data_files.EmptyDatasetError": "datasets.load.EmptyDatasetError",
        "datasets.data_files.Url": "datasets.data_files.Url",
        "datasets.data_files.contains_wildcards": "datasets.data_files.contains_wildcards",
        "datasets.data_files.get_data_patterns": "datasets.load.get_data_patterns",
        "datasets.data_files.get_metadata_patterns": "datasets.load.get_metadata_patterns",
        "datasets.data_files.resolve_pattern": "datasets.data_files.resolve_pattern",
        "datasets.fingerprint.disable_caching": "datasets.disable_caching",
        "datasets.fingerprint.enable_caching": "datasets.enable_caching",
        "datasets.exceptions.ChecksumVerificationError": "datasets.exceptions.ChecksumVerificationError",
        "datasets.exceptions.DataFilesNotFoundError": "datasets.load.DataFilesNotFoundError",
        "datasets.exceptions.DatasetBuildError": "datasets.exceptions.DatasetBuildError",
        "datasets.exceptions.DatasetNotFoundError": "datasets.load.DatasetNotFoundError",
        "datasets.exceptions.DatasetsError": "datasets.exceptions.DatasetsError",
        "datasets.exceptions.DefunctDatasetError": "datasets.exceptions.DefunctDatasetError",
        "datasets.exceptions.FileNotFoundDatasetsError": "datasets.exceptions.FileNotFoundDatasetsError",
        "datasets.exceptions.SplitsVerificationError": "datasets.exceptions.SplitsVerificationError",
        "datasets.features.features.Array2DExtensionType": "datasets.features.features.Array2DExtensionType",
        "datasets.features.features.Array3DExtensionType": "datasets.features.features.Array3DExtensionType",
        "datasets.features.features.Array4DExtensionType": "datasets.features.features.Array4DExtensionType",
        "datasets.features.features.Array5DExtensionType": "datasets.features.features.Array5DExtensionType",
        "datasets.features.features.ArrayExtensionArray": "datasets.features.features.ArrayExtensionArray",
        "datasets.features.features.PandasArrayExtensionArray": "datasets.features.features.PandasArrayExtensionArray",
        "datasets.features.features.PandasArrayExtensionDtype": "datasets.features.features.PandasArrayExtensionDtype",
        "datasets.features.features.any_np_array_to_pyarrow_listarray": "datasets.features.features.any_np_array_to_pyarrow_listarray",
        "datasets.features.features.contains_any_np_array": "datasets.features.features.contains_any_np_array",
        "datasets.features.features.decode_nested_example": "datasets.formatting.polars_formatter.decode_nested_example",
        "datasets.features.features.encode_nested_example": "datasets.features.features.encode_nested_example",
        "datasets.features.image.encode_pil_image": "datasets.features.image.encode_pil_image",
        "datasets.features.features.generate_from_dict": "datasets.features.features.generate_from_dict",
        "datasets.features.features.keep_features_dicts_synced": "datasets.features.features.keep_features_dicts_synced",
        "datasets.features.features.list_of_pa_arrays_to_pyarrow_listarray": "datasets.features.features.list_of_pa_arrays_to_pyarrow_listarray",
        "datasets.features.features.register_feature": "datasets.features.features.register_feature",
        "datasets.features.features.require_storage_cast": "datasets.packaged_modules.xml.xml.require_storage_cast",
        "datasets.features.features.require_storage_embed": "datasets.features.features.require_storage_embed",
        "datasets.naming.snakecase_to_camelcase": "datasets.naming.snakecase_to_camelcase",
        "datasets.features.features.string_to_arrow": "datasets.features.features.string_to_arrow",
        "datasets.features.image.encode_np_array": "datasets.features.image.encode_np_array",
        "datasets.features.image.image_to_bytes": "datasets.features.image.image_to_bytes",
        "datasets.features.image.list_image_compression_formats": "datasets.features.image.list_image_compression_formats",
        "datasets.features.image.objects_to_list_of_image_dicts": "datasets.features.image.objects_to_list_of_image_dicts",
        "datasets.features.video.encode_decord_video": "datasets.features.video.encode_decord_video",
        "datasets.features.video.encode_np_array": "datasets.features.video.encode_np_array",
        "datasets.features.video.patch_decord": "datasets.features.video.patch_decord",
        "datasets.features.video.video_to_bytes": "datasets.features.video.video_to_bytes",
        "datasets.filesystems.compression.BaseCompressedFileFileSystem": "datasets.filesystems.compression.BaseCompressedFileFileSystem",
        "datasets.filesystems.compression.Bz2FileSystem": "datasets.filesystems.compression.Bz2FileSystem",
        "datasets.filesystems.compression.GzipFileSystem": "datasets.filesystems.compression.GzipFileSystem",
        "datasets.filesystems.compression.Lz4FileSystem": "datasets.filesystems.compression.Lz4FileSystem",
        "datasets.filesystems.compression.XzFileSystem": "datasets.filesystems.compression.XzFileSystem",
        "datasets.filesystems.compression.ZstdFileSystem": "datasets.filesystems.fs_class",
        "datasets.fingerprint.get_datasets_with_cache_file_in_temp_dir": "datasets.fingerprint.get_datasets_with_cache_file_in_temp_dir",
        "datasets.formatting.formatting.ArrowFormatter": "datasets.formatting.formatting.ArrowFormatter",
        "datasets.formatting.formatting.CustomFormatter": "datasets.formatting.formatting.CustomFormatter",
        "datasets.formatting.formatting.Formatter": "datasets.formatting.formatting.Formatter",
        "datasets.formatting.jax_formatter.JaxFormatter": "datasets.formatting.jax_formatter.JaxFormatter",
        "datasets.formatting.np_formatter.NumpyFormatter": "datasets.formatting.np_formatter.NumpyFormatter",
        "datasets.formatting.formatting.PandasFormatter": "datasets.formatting.formatting.PandasFormatter",
        "datasets.formatting.polars_formatter.PolarsFormatter": "datasets.formatting.polars_formatter.PolarsFormatter",
        "datasets.formatting.formatting.PythonFormatter": "datasets.iterable_dataset.PythonFormatter",
        "datasets.formatting.tf_formatter.TFFormatter": "datasets.formatting.tf_formatter.TFFormatter",
        "datasets.formatting.formatting.TensorFormatter": "datasets.iterable_dataset.TensorFormatter",
        "datasets.formatting.torch_formatter.TorchFormatter": "datasets.formatting.torch_formatter.TorchFormatter",
        "datasets.formatting.formatting.BaseArrowExtractor": "datasets.formatting.polars_formatter.BaseArrowExtractor",
        "datasets.formatting.formatting.LazyBatch": "datasets.formatting.formatting.LazyBatch",
        "datasets.formatting.formatting.LazyRow": "datasets.formatting.formatting.LazyRow",
        "datasets.formatting.formatting.NumpyArrowExtractor": "datasets.formatting.formatting.NumpyArrowExtractor",
        "datasets.formatting.formatting.PandasArrowExtractor": "datasets.formatting.formatting.PandasArrowExtractor",
        "datasets.formatting.formatting.PandasFeaturesDecoder": "datasets.formatting.formatting.PandasFeaturesDecoder",
        "datasets.formatting.formatting.PythonArrowExtractor": "datasets.formatting.formatting.PythonArrowExtractor",
        "datasets.formatting.formatting.PythonFeaturesDecoder": "datasets.formatting.formatting.PythonFeaturesDecoder",
        "datasets.formatting.formatting.SimpleArrowExtractor": "datasets.formatting.formatting.SimpleArrowExtractor",
        "datasets.formatting.formatting.key_to_query_type": "datasets.formatting.formatting.key_to_query_type",
        "datasets.formatting.polars_formatter.PolarsArrowExtractor": "datasets.formatting.polars_formatter.PolarsArrowExtractor",
        "datasets.formatting.polars_formatter.PolarsFeaturesDecoder": "datasets.formatting.polars_formatter.PolarsFeaturesDecoder",
        "datasets.inspect.get_dataset_config_info": "datasets.get_dataset_config_info",
        "datasets.inspect.get_dataset_config_names": "datasets.get_dataset_config_names",
        "datasets.inspect.get_dataset_default_config_name": "datasets.get_dataset_default_config_name",
        "datasets.inspect.get_dataset_infos": "datasets.get_dataset_infos",
        "datasets.inspect.get_dataset_split_names": "datasets.get_dataset_split_names",
        "datasets.info.DownloadChecksumsEntryData": "datasets.info.DownloadChecksumsEntryData",
        "datasets.info.MissingCachedSizesConfigError": "datasets.info.MissingCachedSizesConfigError",
        "datasets.info.NonMatchingCachedSizesError": "datasets.info.NonMatchingCachedSizesError",
        "datasets.info.SupervisedKeysData": "datasets.info.SupervisedKeysData",
        "datasets.inspect.SplitsNotFoundError": "datasets.inspect.SplitsNotFoundError",
        "datasets.load.dataset_module_factory": "datasets.load.dataset_module_factory",
        "datasets.load.get_dataset_builder_class": "datasets.load.get_dataset_builder_class",
        "datasets.load.load_dataset_builder": "datasets.load_dataset_builder",
        "datasets.iterable_dataset.BufferShuffledExamplesIterable": "datasets.iterable_dataset.BufferShuffledExamplesIterable",
        "datasets.iterable_dataset.CyclingMultiSourcesExamplesIterable": "datasets.iterable_dataset.CyclingMultiSourcesExamplesIterable",
        "datasets.iterable_dataset.DistributedConfig": "datasets.iterable_dataset.DistributedConfig",
        "datasets.iterable_dataset.FilteredExamplesIterable": "datasets.iterable_dataset.FilteredExamplesIterable",
        "datasets.iterable_dataset.FormattingConfig": "datasets.iterable_dataset.FormattingConfig",
        "datasets.iterable_dataset.HorizontallyConcatenatedMultiSourcesExamplesIterable": "datasets.iterable_dataset.HorizontallyConcatenatedMultiSourcesExamplesIterable",
        "datasets.iterable_dataset.MappedExamplesIterable": "datasets.iterable_dataset.MappedExamplesIterable",
        "datasets.iterable_dataset.RandomlyCyclingMultiSourcesExamplesIterable": "datasets.iterable_dataset.RandomlyCyclingMultiSourcesExamplesIterable",
        "datasets.iterable_dataset.RebatchedArrowExamplesIterable": "datasets.iterable_dataset.RebatchedArrowExamplesIterable",
        "datasets.iterable_dataset.SelectColumnsIterable": "datasets.iterable_dataset.SelectColumnsIterable",
        "datasets.iterable_dataset.ShuffledDataSourcesArrowExamplesIterable": "datasets.iterable_dataset.ShuffledDataSourcesArrowExamplesIterable",
        "datasets.iterable_dataset.ShuffledDataSourcesExamplesIterable": "datasets.iterable_dataset.ShuffledDataSourcesExamplesIterable",
        "datasets.iterable_dataset.ShufflingConfig": "datasets.iterable_dataset.ShufflingConfig",
        "datasets.iterable_dataset.SkipExamplesIterable": "datasets.iterable_dataset.SkipExamplesIterable",
        "datasets.iterable_dataset.StepExamplesIterable": "datasets.iterable_dataset.StepExamplesIterable",
        "datasets.iterable_dataset.TakeExamplesIterable": "datasets.iterable_dataset.TakeExamplesIterable",
        "datasets.iterable_dataset.TypedExamplesIterable": "datasets.iterable_dataset.TypedExamplesIterable",
        "datasets.iterable_dataset.VerticallyConcatenatedMultiSourcesExamplesIterable": "datasets.iterable_dataset.VerticallyConcatenatedMultiSourcesExamplesIterable",
        "datasets.iterable_dataset.add_column_fn": "datasets.iterable_dataset.add_column_fn",
        "datasets.table.cast_table_to_features": "datasets.table.cast_table_to_features",
        "datasets.iterable_dataset.identity_func": "datasets.iterable_dataset.identity_func",
        "datasets.table.read_schema_from_file": "datasets.table.read_schema_from_file",
        "datasets.keyhash.InvalidKeyError": "datasets.keyhash.InvalidKeyError",
        "datasets.load.BuilderConfigsParameters": "datasets.load.BuilderConfigsParameters",
        "datasets.load.CachedDatasetModuleFactory": "datasets.load.CachedDatasetModuleFactory",
        "datasets.load.DatasetModule": "datasets.load.DatasetModule",
        "datasets.load.HubDatasetModuleFactoryWithParquetExport": "datasets.load.HubDatasetModuleFactoryWithParquetExport",
        "datasets.load.HubDatasetModuleFactoryWithScript": "datasets.load.HubDatasetModuleFactoryWithScript",
        "datasets.load.HubDatasetModuleFactoryWithoutScript": "datasets.load.HubDatasetModuleFactoryWithoutScript",
        "datasets.load.LocalDatasetModuleFactoryWithScript": "datasets.load.LocalDatasetModuleFactoryWithScript",
        "datasets.load.LocalDatasetModuleFactoryWithoutScript": "datasets.load.LocalDatasetModuleFactoryWithoutScript",
        "datasets.load.PackagedDatasetModuleFactory": "datasets.load.PackagedDatasetModuleFactory",
        "datasets.load.configure_builder_class": "datasets.load.configure_builder_class",
        "datasets.load.create_builder_configs_from_metadata_configs": "datasets.load.create_builder_configs_from_metadata_configs",
        "datasets.load.files_to_hash": "datasets.load.files_to_hash",
        "datasets.load.import_main_class": "datasets.load.import_main_class",
        "datasets.load.increase_load_count": "datasets.load.increase_load_count",
        "datasets.load.infer_module_for_data_files": "datasets.load.infer_module_for_data_files",
        "datasets.load.infer_module_for_data_files_list": "datasets.load.infer_module_for_data_files_list",
        "datasets.load.infer_module_for_data_files_list_in_archives": "datasets.load.infer_module_for_data_files_list_in_archives",
        "datasets.load.init_dynamic_modules": "datasets.load.init_dynamic_modules",
        "datasets.load.load_dataset": "datasets.load_dataset",
        "datasets.load.load_from_disk": "datasets.load_from_disk",
        "datasets.load.resolve_trust_remote_code": "datasets.load.resolve_trust_remote_code",
        "datasets.naming.filename_prefix_for_name": "datasets.naming.filename_prefix_for_name",
        "datasets.naming.filename_prefix_for_split": "datasets.naming.filename_prefix_for_split",
        "datasets.naming.filepattern_for_dataset_split": "datasets.naming.filepattern_for_dataset_split",
        "datasets.packaged_modules.arrow.arrow.Arrow": "datasets.packaged_modules.arrow.arrow.Arrow",
        "datasets.packaged_modules.arrow.arrow.ArrowConfig": "datasets.packaged_modules.arrow.arrow.ArrowConfig",
        "datasets.parallel.parallel.ParallelBackendConfig": "datasets.parallel.parallel.ParallelBackendConfig",
        "datasets.parallel.parallel.parallel_backend": "datasets.parallel.parallel_backend",
        "datasets.splits.PercentSlice": "datasets.percent",
        "datasets.search.BaseIndex": "datasets.search.BaseIndex",
        "datasets.search.BatchedNearestExamplesResults": "datasets.search.BatchedNearestExamplesResults",
        "datasets.search.BatchedSearchResults": "datasets.search.BatchedSearchResults",
        "datasets.search.ElasticSearchIndex": "datasets.search.ElasticSearchIndex",
        "datasets.search.FaissIndex": "datasets.search.FaissIndex",
        "datasets.search.MissingIndex": "datasets.search.MissingIndex",
        "datasets.search.NearestExamplesResults": "datasets.search.NearestExamplesResults",
        "datasets.search.SearchResults": "datasets.search.SearchResults",
        "datasets.splits.PercentSliceMeta": "datasets.splits.PercentSliceMeta",
        "datasets.splits.SlicedSplitInfo": "datasets.splits.SlicedSplitInfo",
        "datasets.splits.SplitReadInstruction": "datasets.splits.SplitReadInstruction",
        "datasets.streaming.extend_module_for_streaming": "datasets.streaming.extend_module_for_streaming",
        "datasets.table.ConcatenationTable": "datasets.table.ConcatenationTable",
        "datasets.table.IndexedTableMixin": "datasets.table.IndexedTableMixin",
        "datasets.table.TableBlock": "datasets.table.TableBlock",
        "datasets.table.cast_table_to_schema": "datasets.table.cast_table_to_schema",
        "datasets.table.inject_arrow_table_documentation": "datasets.table.inject_arrow_table_documentation",
        "datasets.table.table_flatten": "datasets.table.table_flatten",
        "datasets.packaged_modules.audiofolder.audiofolder.AudioFolder": "datasets.packaged_modules.audiofolder.audiofolder.AudioFolder",
        "datasets.packaged_modules.audiofolder.audiofolder.AudioFolderConfig": "datasets.packaged_modules.audiofolder.audiofolder.AudioFolderConfig",
        "datasets.packaged_modules.folder_based_builder.folder_based_builder.FolderBasedBuilder": "datasets.packaged_modules.folder_based_builder.folder_based_builder.FolderBasedBuilder",
        "datasets.packaged_modules.folder_based_builder.folder_based_builder.FolderBasedBuilderConfig": "datasets.packaged_modules.folder_based_builder.folder_based_builder.FolderBasedBuilderConfig",
        "datasets.packaged_modules.folder_based_builder.folder_based_builder.count_path_segments": "datasets.packaged_modules.folder_based_builder.folder_based_builder.count_path_segments",
        "datasets.packaged_modules.cache.cache.Cache": "datasets.packaged_modules.cache.cache.Cache",
        "datasets.packaged_modules.csv.csv.Csv": "datasets.packaged_modules.csv.csv.Csv",
        "datasets.packaged_modules.csv.csv.CsvConfig": "datasets.packaged_modules.csv.csv.CsvConfig",
        "datasets.packaged_modules.imagefolder.imagefolder.ImageFolder": "datasets.packaged_modules.imagefolder.imagefolder.ImageFolder",
        "datasets.packaged_modules.imagefolder.imagefolder.ImageFolderConfig": "datasets.packaged_modules.imagefolder.imagefolder.ImageFolderConfig",
        "datasets.packaged_modules.json.json.Json": "datasets.packaged_modules.json.json.Json",
        "datasets.packaged_modules.json.json.JsonConfig": "datasets.packaged_modules.json.json.JsonConfig",
        "datasets.packaged_modules.json.json.pandas_read_json": "datasets.packaged_modules.json.json.pandas_read_json",
        "datasets.packaged_modules.json.json.ujson_dumps": "datasets.packaged_modules.json.json.ujson_dumps",
        "datasets.packaged_modules.json.json.ujson_loads": "datasets.packaged_modules.json.json.ujson_loads",
        "datasets.packaged_modules.pandas.pandas.Pandas": "datasets.packaged_modules.pandas.pandas.Pandas",
        "datasets.packaged_modules.pandas.pandas.PandasConfig": "datasets.packaged_modules.pandas.pandas.PandasConfig",
        "datasets.packaged_modules.parquet.parquet.Parquet": "datasets.packaged_modules.parquet.parquet.Parquet",
        "datasets.packaged_modules.parquet.parquet.ParquetConfig": "datasets.packaged_modules.parquet.parquet.ParquetConfig",
        "datasets.packaged_modules.sql.sql.Sql": "datasets.packaged_modules.sql.sql.Sql",
        "datasets.packaged_modules.sql.sql.SqlConfig": "datasets.packaged_modules.sql.sql.SqlConfig",
        "datasets.packaged_modules.text.text.Text": "datasets.packaged_modules.text.text.Text",
        "datasets.packaged_modules.text.text.TextConfig": "datasets.packaged_modules.text.text.TextConfig",
        "datasets.packaged_modules.videofolder.videofolder.VideoFolder": "datasets.packaged_modules.videofolder.videofolder.VideoFolder",
        "datasets.packaged_modules.videofolder.videofolder.VideoFolderConfig": "datasets.packaged_modules.videofolder.videofolder.VideoFolderConfig",
        "datasets.packaged_modules.webdataset.webdataset.WebDataset": "datasets.packaged_modules.webdataset.webdataset.WebDataset",
        "datasets.packaged_modules.webdataset.webdataset.base_plus_ext": "datasets.packaged_modules.webdataset.webdataset.base_plus_ext",
        "datasets.packaged_modules.webdataset.webdataset.cbor_loads": "datasets.packaged_modules.webdataset.webdataset.cbor_loads",
        "datasets.packaged_modules.webdataset.webdataset.msgpack_loads": "datasets.packaged_modules.webdataset.webdataset.msgpack_loads",
        "datasets.packaged_modules.webdataset.webdataset.npy_loads": "datasets.packaged_modules.webdataset.webdataset.npy_loads",
        "datasets.packaged_modules.webdataset.webdataset.npz_loads": "datasets.packaged_modules.webdataset.webdataset.npz_loads",
        "datasets.packaged_modules.webdataset.webdataset.tenbin_loads": "datasets.packaged_modules.webdataset.webdataset.tenbin_loads",
        "datasets.packaged_modules.webdataset.webdataset.text_loads": "datasets.packaged_modules.webdataset.webdataset.text_loads",
        "datasets.packaged_modules.webdataset.webdataset.torch_loads": "datasets.packaged_modules.webdataset.webdataset.torch_loads",
        "datasets.packaged_modules.xml.xml.Xml": "datasets.packaged_modules.xml.xml.Xml",
        "datasets.packaged_modules.xml.xml.XmlConfig": "datasets.packaged_modules.xml.xml.XmlConfig"
    },
    "PIL": {
        "PIL.ExifTags.Base": "PIL.ExifTags.Base",
        "PIL.ExifTags.GPS": "PIL.ExifTags.GPS",
        "PIL.ExifTags.IFD": "PIL.ExifTags.IFD",
        "PIL.ExifTags.Interop": "PIL.ExifTags.Interop",
        "PIL.ExifTags.LightSource": "PIL.ExifTags.LightSource",
        "PIL.GimpGradientFile.GimpGradientFile": "PIL.GimpGradientFile.GimpGradientFile",
        "PIL.GimpGradientFile.GradientFile": "PIL.GimpGradientFile.GradientFile",
        "PIL.GimpGradientFile.curved": "PIL.GimpGradientFile.curved",
        "PIL.GimpGradientFile.linear": "PIL.GimpGradientFile.linear",
        "PIL._binary.o8": "PIL.PngImagePlugin.o8",
        "PIL.GimpGradientFile.sine": "PIL.GimpGradientFile.sine",
        "PIL.GimpGradientFile.sphere_decreasing": "PIL.GimpGradientFile.sphere_decreasing",
        "PIL.GimpGradientFile.sphere_increasing": "PIL.GimpGradientFile.sphere_increasing",
        "PIL.GimpPaletteFile.GimpPaletteFile": "PIL.GimpPaletteFile.GimpPaletteFile",
        "PIL.Image.DecompressionBombError": "PIL.Image.DecompressionBombError",
        "PIL.Image.DecompressionBombWarning": "PIL.Image.DecompressionBombWarning",
        "PIL._util.DeferredError": "PIL.ImageFont.DeferredError",
        "PIL.Image.Dither": "PIL.Image.Dither",
        "PIL.Image.Exif": "PIL.Image.Exif",
        "PIL.Image.Image": "PIL.Image.Image",
        "PIL.ImageMode.ModeDescriptor": "PIL.ImageMode.ModeDescriptor",
        "PIL._deprecate.deprecate": "PIL.ImageFile.deprecate",
        "PIL.ImageMode.getmode": "PIL.ImageMode.getmode",
        "PIL.Image.ImagePointHandler": "PIL.Image.ImagePointHandler",
        "PIL.Image.ImageTransformHandler": "PIL.Image.ImageTransformHandler",
        "PIL.Image.Palette": "PIL.Image.Palette",
        "PIL.Image.Quantize": "PIL.Image.enum",
        "PIL.Image.Resampling": "PIL.Image.Resampling",
        "PIL.Image.SupportsArrayInterface": "PIL.Image.SupportsArrayInterface",
        "PIL.Image.SupportsGetData": "PIL.Image.SupportsGetData",
        "PIL.TiffTags.TagInfo": "PIL.TiffTags.TagInfo",
        "PIL.TiffTags.lookup": "PIL.TiffTags.lookup",
        "PIL.Image.Transform": "PIL.Image.Transform",
        "PIL.Image.Transpose": "PIL.Image.Transpose",
        "PIL.UnidentifiedImageError": "PIL.UnidentifiedImageError",
        "PIL.Image.alpha_composite": "PIL.Image.alpha_composite",
        "PIL.Image.blend": "PIL.Image.blend",
        "PIL.Image.composite": "PIL.Image.composite",
        "PIL._imaging.alpha_composite": "PIL._imaging.alpha_composite",
        "PIL._imaging.bcn_decoder": "PIL._imaging.bcn_decoder",
        "PIL._imaging.bit_decoder": "PIL._imaging.bit_decoder",
        "PIL._imaging.blend": "PIL._imaging.blend",
        "PIL._imaging.clear_cache": "PIL._imaging.clear_cache",
        "PIL._imaging.convert": "PIL._imaging.convert",
        "PIL._imaging.draw": "PIL._imaging.draw",
        "PIL._imaging.effect_mandelbrot": "PIL._imaging.effect_mandelbrot",
        "PIL._imaging.effect_noise": "PIL._imaging.effect_noise",
        "PIL._imaging.eps_encoder": "PIL._imaging.eps_encoder",
        "PIL._imaging.fill": "PIL._imaging.fill",
        "PIL._imaging.fli_decoder": "PIL._imaging.fli_decoder",
        "PIL._imaging.font": "PIL._imaging.font",
        "PIL._imaging.get_alignment": "PIL._imaging.get_alignment",
        "PIL._imaging.get_block_size": "PIL._imaging.get_block_size",
        "PIL._imaging.get_blocks_max": "PIL._imaging.get_blocks_max",
        "PIL._imaging.get_stats": "PIL._imaging.get_stats",
        "PIL._imaging.getcodecstatus": "PIL._imaging.getcodecstatus",
        "PIL._imaging.gif_decoder": "PIL._imaging.gif_decoder",
        "PIL._imaging.gif_encoder": "PIL._imaging.gif_encoder",
        "PIL._imaging.grabscreen_x11": "PIL._imaging.grabscreen_x11",
        "PIL._imaging.hex_decoder": "PIL._imaging.hex_decoder",
        "PIL._imaging.hex_encoder": "PIL._imaging.hex_encoder",
        "PIL._imaging.jpeg2k_decoder": "PIL._imaging.jpeg2k_decoder",
        "PIL._imaging.jpeg2k_encoder": "PIL._imaging.jpeg2k_encoder",
        "PIL._imaging.jpeg_decoder": "PIL._imaging.jpeg_decoder",
        "PIL._imaging.jpeg_encoder": "PIL._imaging.jpeg_encoder",
        "PIL._imaging.libtiff_decoder": "PIL._imaging.libtiff_decoder",
        "PIL._imaging.libtiff_encoder": "PIL._imaging.libtiff_encoder",
        "PIL._imaging.linear_gradient": "PIL._imaging.linear_gradient",
        "PIL._imaging.map_buffer": "PIL._imaging.map_buffer",
        "PIL._imaging.merge": "PIL._imaging.merge",
        "PIL._imaging.new": "PIL._imaging.new",
        "PIL._imaging.outline": "PIL.ImageDraw.Outline",
        "PIL._imaging.packbits_decoder": "PIL._imaging.packbits_decoder",
        "PIL._imaging.path": "PIL._imaging.path",
        "PIL._imaging.pcd_decoder": "PIL._imaging.pcd_decoder",
        "PIL._imaging.pcx_decoder": "PIL._imaging.pcx_decoder",
        "PIL._imaging.pcx_encoder": "PIL._imaging.pcx_encoder",
        "PIL._imaging.radial_gradient": "PIL._imaging.radial_gradient",
        "PIL._imaging.raw_decoder": "PIL._imaging.raw_decoder",
        "PIL._imaging.raw_encoder": "PIL._imaging.raw_encoder",
        "PIL._imaging.reset_stats": "PIL._imaging.reset_stats",
        "PIL._imaging.set_alignment": "PIL._imaging.set_alignment",
        "PIL._imaging.set_block_size": "PIL._imaging.set_block_size",
        "PIL._imaging.set_blocks_max": "PIL._imaging.set_blocks_max",
        "PIL._imaging.sgi_rle_decoder": "PIL._imaging.sgi_rle_decoder",
        "PIL._imaging.sun_rle_decoder": "PIL._imaging.sun_rle_decoder",
        "PIL._imaging.tga_rle_decoder": "PIL._imaging.tga_rle_decoder",
        "PIL._imaging.tga_rle_encoder": "PIL._imaging.tga_rle_encoder",
        "PIL._imaging.wedge": "PIL._imaging.wedge",
        "PIL._imaging.xbm_decoder": "PIL._imaging.xbm_decoder",
        "PIL._imaging.xbm_encoder": "PIL._imaging.xbm_encoder",
        "PIL._imaging.zip_decoder": "PIL._imaging.zip_decoder",
        "PIL._imaging.zip_encoder": "PIL._imaging.zip_encoder",
        "PIL.Image.effect_mandelbrot": "PIL.Image.effect_mandelbrot",
        "PIL.Image.effect_noise": "PIL.Image.effect_noise",
        "PIL.Image.eval": "PIL.Image.eval",
        "PIL.Image.fromarray": "PIL.Image.fromarray",
        "PIL.Image.frombuffer": "PIL.Image.frombuffer",
        "PIL.Image.frombytes": "PIL.Image.frombytes",
        "PIL.Image.fromqimage": "PIL.Image.fromqimage",
        "PIL.Image.fromqpixmap": "PIL.Image.fromqpixmap",
        "PIL.Image.getmodebandnames": "PIL.Image.getmodebandnames",
        "PIL.Image.getmodebands": "PIL.Image.getmodebands",
        "PIL.Image.getmodebase": "PIL.Image.getmodebase",
        "PIL.Image.getmodetype": "PIL.Image.getmodetype",
        "PIL._binary.i32le": "PIL.Image.i32le",
        "PIL.Image.init": "PIL.Image.init",
        "PIL.Image.isImageType": "PIL.Image.isImageType",
        "PIL._util.is_path": "PIL.ImageFont.is_path",
        "PIL.Image.linear_gradient": "PIL.Image.linear_gradient",
        "PIL.Image.merge": "PIL.Image.merge",
        "PIL.Image.new": "PIL.Image.new",
        "PIL._binary.o32be": "PIL.PngImagePlugin.o32",
        "PIL._binary.o32le": "PIL.Image.o32le",
        "PIL.Image.open": "PIL.Image.open",
        "PIL.Image.preinit": "PIL.Image.preinit",
        "PIL.Image.radial_gradient": "PIL.Image.radial_gradient",
        "PIL.Image.register_decoder": "PIL.Image.register_decoder",
        "PIL.Image.register_encoder": "PIL.Image.register_encoder",
        "PIL.Image.register_extension": "PIL.Image.register_extension",
        "PIL.Image.register_extensions": "PIL.Image.register_extensions",
        "PIL.Image.register_mime": "PIL.Image.register_mime",
        "PIL.Image.register_open": "PIL.Image.register_open",
        "PIL.Image.register_save": "PIL.Image.register_save",
        "PIL.Image.register_save_all": "PIL.Image.register_save_all",
        "PIL.Image.registered_extensions": "PIL.Image.registered_extensions",
        "PIL.ImageChops.add": "PIL.ImageChops.add",
        "PIL.ImageChops.add_modulo": "PIL.ImageChops.add_modulo",
        "PIL.ImageChops.blend": "PIL.ImageChops.blend",
        "PIL.ImageChops.composite": "PIL.ImageChops.composite",
        "PIL.ImageChops.constant": "PIL.ImageChops.constant",
        "PIL.ImageChops.darker": "PIL.ImageChops.darker",
        "PIL.ImageChops.difference": "PIL.ImageChops.difference",
        "PIL.ImageChops.duplicate": "PIL.ImageChops.duplicate",
        "PIL.ImageChops.hard_light": "PIL.ImageChops.hard_light",
        "PIL.ImageChops.invert": "PIL.ImageChops.invert",
        "PIL.ImageChops.lighter": "PIL.ImageChops.lighter",
        "PIL.ImageChops.logical_and": "PIL.ImageChops.logical_and",
        "PIL.ImageChops.logical_or": "PIL.ImageChops.logical_or",
        "PIL.ImageChops.logical_xor": "PIL.ImageChops.logical_xor",
        "PIL.ImageChops.multiply": "PIL.ImageChops.multiply",
        "PIL.ImageChops.offset": "PIL.ImageChops.offset",
        "PIL.ImageChops.overlay": "PIL.ImageChops.overlay",
        "PIL.ImageChops.screen": "PIL.ImageChops.screen",
        "PIL.ImageChops.soft_light": "PIL.ImageChops.soft_light",
        "PIL.ImageChops.subtract": "PIL.ImageChops.subtract",
        "PIL.ImageChops.subtract_modulo": "PIL.ImageChops.subtract_modulo",
        "PIL.ImageColor.getcolor": "PIL.ImageColor.getcolor",
        "PIL.ImageColor.getrgb": "PIL.ImageColor.getrgb",
        "PIL.ImageDraw.Draw": "PIL.ImageDraw.Draw",
        "PIL.ImageDraw.ImageDraw": "PIL.ImageDraw.ImageDraw",
        "PIL.ImageDraw.floodfill": "PIL.ImageDraw.floodfill",
        "PIL.ImageDraw.getdraw": "PIL.ImageDraw.getdraw",
        "PIL.ImageEnhance.Brightness": "PIL.ImageEnhance.Brightness",
        "PIL.ImageEnhance.Color": "PIL.ImageEnhance.Color",
        "PIL.ImageEnhance.Contrast": "PIL.ImageEnhance.Contrast",
        "PIL.ImageFilter.BLUR": "PIL.ImageFilter.BLUR",
        "PIL.ImageFilter.BoxBlur": "PIL.ImageFilter.BoxBlur",
        "PIL.ImageFilter.BuiltinFilter": "PIL.ImageFilter.BuiltinFilter",
        "PIL.ImageFilter.CONTOUR": "PIL.ImageFilter.CONTOUR",
        "PIL.ImageFilter.Color3DLUT": "PIL.ImageFilter.Color3DLUT",
        "PIL.ImageFilter.DETAIL": "PIL.ImageFilter.DETAIL",
        "PIL.ImageFilter.EDGE_ENHANCE": "PIL.ImageFilter.EDGE_ENHANCE",
        "PIL.ImageFilter.EDGE_ENHANCE_MORE": "PIL.ImageFilter.EDGE_ENHANCE_MORE",
        "PIL.ImageFilter.EMBOSS": "PIL.ImageFilter.EMBOSS",
        "PIL.ImageFilter.FIND_EDGES": "PIL.ImageFilter.FIND_EDGES",
        "PIL.ImageFilter.Filter": "PIL.ImageFilter.Filter",
        "PIL.ImageFilter.GaussianBlur": "PIL.ImageFilter.GaussianBlur",
        "PIL.ImageFilter.Kernel": "PIL.ImageFilter.Kernel",
        "PIL.ImageFilter.MaxFilter": "PIL.ImageFilter.MaxFilter",
        "PIL.ImageFilter.MedianFilter": "PIL.ImageFilter.MedianFilter",
        "PIL.ImageFilter.MinFilter": "PIL.ImageFilter.MinFilter",
        "PIL.ImageFilter.ModeFilter": "PIL.ImageFilter.ModeFilter",
        "PIL.ImageFilter.MultibandFilter": "PIL.ImageFilter.MultibandFilter",
        "PIL.ImageFilter.RankFilter": "PIL.ImageFilter.RankFilter",
        "PIL.ImageFilter.SHARPEN": "PIL.ImageFilter.SHARPEN",
        "PIL.ImageFilter.SMOOTH": "PIL.ImageFilter.SMOOTH",
        "PIL.ImageFilter.SMOOTH_MORE": "PIL.ImageFilter.SMOOTH_MORE",
        "PIL.ImageFilter.UnsharpMask": "PIL.ImageFilter.UnsharpMask",
        "PIL.ImageStat.Stat": "PIL.ImageStat.Stat",
        "PIL.ImageEnhance.Sharpness": "PIL.ImageEnhance.Sharpness",
        "PIL.ImageFile.ImageFile": "PIL.ImageFile.ImageFile",
        "PIL.ImageFile.Parser": "PIL.ImageFile.Parser",
        "PIL.ImageFile.PyCodec": "PIL.ImageFile.PyCodec",
        "PIL.ImageFile.PyCodecState": "PIL.ImageFile.PyCodecState",
        "PIL.ImageFile.PyDecoder": "PIL.ImageFile.PyDecoder",
        "PIL.ImageFile.PyEncoder": "PIL.ImageFile.PyEncoder",
        "PIL.ImageFile.StubHandler": "PIL.ImageFile.StubHandler",
        "PIL.ImageFile.StubImageFile": "PIL.ImageFile.StubImageFile",
        "PIL.ImageFile.raise_oserror": "PIL.ImageFile.raise_oserror",
        "PIL.ImageFont.FreeTypeFont": "PIL.ImageFont.FreeTypeFont",
        "PIL.ImageFont.ImageFont": "PIL.ImageFont.ImageFont",
        "PIL.ImageFont.Layout": "PIL.ImageFont.Layout",
        "PIL.ImageFont.TransposedFont": "PIL.ImageFont.TransposedFont",
        "PIL._imagingft.getfont": "PIL._imagingft.getfont",
        "PIL.ImageFont.load": "PIL.ImageFont.load",
        "PIL.ImageFont.load_default": "PIL.ImageFont.load_default",
        "PIL.ImageFont.load_default_imagefont": "PIL.ImageFont.load_default_imagefont",
        "PIL.ImageFont.load_path": "PIL.ImageFont.load_path",
        "PIL.ImageFont.truetype": "PIL.ImageFont.truetype",
        "PIL.ImagePalette.ImagePalette": "PIL.ImagePalette.ImagePalette",
        "PIL.PaletteFile.PaletteFile": "PIL.PaletteFile.PaletteFile",
        "PIL.ImagePalette.load": "PIL.ImagePalette.load",
        "PIL.ImagePalette.make_gamma_lut": "PIL.ImagePalette.make_gamma_lut",
        "PIL.ImagePalette.make_linear_lut": "PIL.ImagePalette.make_linear_lut",
        "PIL.ImagePalette.negative": "PIL.ImagePalette.negative",
        "PIL.ImagePalette.random": "PIL.ImagePalette.random",
        "PIL.ImagePalette.raw": "PIL.ImagePalette.raw",
        "PIL.ImagePalette.sepia": "PIL.ImagePalette.sepia",
        "PIL.ImagePalette.wedge": "PIL.ImagePalette.wedge",
        "PIL.ImageOps.SupportsGetMesh": "PIL.ImageOps.SupportsGetMesh",
        "PIL.ImageOps.autocontrast": "PIL.ImageOps.autocontrast",
        "PIL.ImageOps.colorize": "PIL.ImageOps.colorize",
        "PIL.ImageOps.contain": "PIL.ImageOps.contain",
        "PIL.ImageOps.cover": "PIL.ImageOps.cover",
        "PIL.ImageOps.crop": "PIL.ImageOps.crop",
        "PIL.ImageOps.deform": "PIL.ImageOps.deform",
        "PIL.ImageOps.equalize": "PIL.ImageOps.equalize",
        "PIL.ImageOps.exif_transpose": "PIL.ImageOps.exif_transpose",
        "PIL.ImageOps.expand": "PIL.ImageOps.expand",
        "PIL.ImageOps.fit": "PIL.ImageOps.fit",
        "PIL.ImageOps.flip": "PIL.ImageOps.flip",
        "PIL.ImageOps.grayscale": "PIL.ImageOps.grayscale",
        "PIL.ImageOps.invert": "PIL.ImageOps.invert",
        "PIL.ImageOps.mirror": "PIL.ImageOps.mirror",
        "PIL.ImageOps.pad": "PIL.ImageOps.pad",
        "PIL.ImageOps.posterize": "PIL.ImageOps.posterize",
        "PIL.ImageOps.scale": "PIL.ImageOps.scale",
        "PIL.ImageOps.solarize": "PIL.ImageOps.solarize",
        "PIL.ImageSequence.Iterator": "PIL.ImageSequence.Iterator",
        "PIL.ImageSequence.all_frames": "PIL.ImageSequence.all_frames",
        "PIL.PngImagePlugin.Blend": "PIL.PngImagePlugin.Blend",
        "PIL.PngImagePlugin.ChunkStream": "PIL.PngImagePlugin.ChunkStream",
        "PIL.PngImagePlugin.Disposal": "PIL.PngImagePlugin.Disposal",
        "PIL.PngImagePlugin.PngImageFile": "PIL.PngImagePlugin.PngImageFile",
        "PIL.PngImagePlugin.PngInfo": "PIL.PngImagePlugin.PngInfo",
        "PIL.PngImagePlugin.PngStream": "PIL.PngImagePlugin.PngStream",
        "PIL.PngImagePlugin.getchunks": "PIL.PngImagePlugin.getchunks",
        "PIL._binary.i16be": "PIL.PngImagePlugin.i16",
        "PIL._binary.i32be": "PIL.PngImagePlugin.i32",
        "PIL.PngImagePlugin.iTXt": "PIL.PngImagePlugin.iTXt",
        "PIL._binary.o16be": "PIL.PngImagePlugin.o16",
        "PIL.PngImagePlugin.putchunk": "PIL.PngImagePlugin.putchunk"
    },
    "cv2": {
        "cv2.AKAZE": "cv2.AKAZE",
        "cv2.AffineFeature": "cv2.AffineFeature",
        "cv2.AffineTransformer": "cv2.AffineTransformer",
        "cv2.AgastFeatureDetector": "cv2.AgastFeatureDetector",
        "cv2.Algorithm": "cv2.Algorithm",
        "cv2.AlignExposures": "cv2.AlignExposures",
        "cv2.AlignMTB": "cv2.AlignMTB",
        "cv2.AsyncArray": "cv2.AsyncArray",
        "cv2.BFMatcher": "cv2.BFMatcher",
        "cv2.BOWImgDescriptorExtractor": "cv2.BOWImgDescriptorExtractor",
        "cv2.BOWKMeansTrainer": "cv2.BOWKMeansTrainer",
        "cv2.BOWTrainer": "cv2.BOWTrainer",
        "cv2.BRISK": "cv2.BRISK",
        "cv2.BackgroundSubtractor": "cv2.BackgroundSubtractor",
        "cv2.BackgroundSubtractorKNN": "cv2.BackgroundSubtractorKNN",
        "cv2.BackgroundSubtractorMOG2": "cv2.BackgroundSubtractorMOG2",
        "cv2.BaseCascadeClassifier": "cv2.BaseCascadeClassifier",
        "cv2.CLAHE": "cv2.CLAHE",
        "cv2.CalibrateCRF": "cv2.CalibrateCRF",
        "cv2.CalibrateDebevec": "cv2.CalibrateDebevec",
        "cv2.CalibrateRobertson": "cv2.CalibrateRobertson",
        "cv2.CascadeClassifier": "cv2.CascadeClassifier",
        "cv2.ChiHistogramCostExtractor": "cv2.ChiHistogramCostExtractor",
        "cv2.CirclesGridFinderParameters": "cv2.CirclesGridFinderParameters",
        "cv2.DISOpticalFlow": "cv2.DISOpticalFlow",
        "cv2.DMatch": "cv2.DMatch",
        "cv2.DenseOpticalFlow": "cv2.DenseOpticalFlow",
        "cv2.DescriptorMatcher": "cv2.DescriptorMatcher",
        "cv2.EMDHistogramCostExtractor": "cv2.EMDHistogramCostExtractor",
        "cv2.EMDL1HistogramCostExtractor": "cv2.EMDL1HistogramCostExtractor",
        "cv2.FaceDetectorYN": "cv2.FaceDetectorYN",
        "cv2.FaceRecognizerSF": "cv2.FaceRecognizerSF",
        "cv2.FarnebackOpticalFlow": "cv2.FarnebackOpticalFlow",
        "cv2.FastFeatureDetector": "cv2.FastFeatureDetector",
        "cv2.Feature2D": "cv2.typing.FeatureExtractor",
        "cv2.FileNode": "cv2.FileNode",
        "cv2.FileStorage": "cv2.FileStorage",
        "cv2.FlannBasedMatcher": "cv2.FlannBasedMatcher",
        "cv2.gapi.GArray": "cv2.GArray",
        "cv2.GArrayDesc": "cv2.GArrayDesc",
        "cv2.GArrayT": "cv2.GArrayT",
        "cv2.GCompileArg": "cv2.GCompileArg",
        "cv2.GComputation": "cv2.GComputation",
        "cv2.GFTTDetector": "cv2.GFTTDetector",
        "cv2.GFrame": "cv2.GFrame",
        "cv2.gapi.GIn": "cv2.GIn",
        "cv2.GInferInputs": "cv2.GInferInputs",
        "cv2.GInferListInputs": "cv2.GInferListInputs",
        "cv2.GInferListOutputs": "cv2.GInferListOutputs",
        "cv2.GInferOutputs": "cv2.GInferOutputs",
        "cv2.GKernelPackage": "cv2.GKernelPackage",
        "cv2.GMat": "cv2.GMat",
        "cv2.GMatDesc": "cv2.GMatDesc",
        "cv2.gapi.GOpaque": "cv2.GOpaque",
        "cv2.GOpaqueDesc": "cv2.GOpaqueDesc",
        "cv2.GOpaqueT": "cv2.GOpaqueT",
        "cv2.gapi.GOut": "cv2.GOut",
        "cv2.GScalar": "cv2.GScalar",
        "cv2.GScalarDesc": "cv2.GScalarDesc",
        "cv2.GStreamingCompiled": "cv2.GStreamingCompiled",
        "cv2.GeneralizedHough": "cv2.GeneralizedHough",
        "cv2.GeneralizedHoughBallard": "cv2.GeneralizedHoughBallard",
        "cv2.GeneralizedHoughGuil": "cv2.GeneralizedHoughGuil",
        "cv2.GraphicalCodeDetector": "cv2.GraphicalCodeDetector",
        "cv2.HOGDescriptor": "cv2.HOGDescriptor",
        "cv2.HausdorffDistanceExtractor": "cv2.HausdorffDistanceExtractor",
        "cv2.HistogramCostExtractor": "cv2.HistogramCostExtractor",
        "cv2.KAZE": "cv2.KAZE",
        "cv2.KalmanFilter": "cv2.KalmanFilter",
        "cv2.KeyPoint": "cv2.KeyPoint",
        "cv2.LineSegmentDetector": "cv2.LineSegmentDetector",
        "cv2.MSER": "cv2.MSER",
        "cv2.Mat": "cv2.mat_wrapper.Mat",
        "cv2.MergeDebevec": "cv2.MergeDebevec",
        "cv2.MergeExposures": "cv2.MergeExposures",
        "cv2.MergeMertens": "cv2.MergeMertens",
        "cv2.MergeRobertson": "cv2.MergeRobertson",
        "cv2.NormHistogramCostExtractor": "cv2.NormHistogramCostExtractor",
        "cv2.ORB": "cv2.ORB",
        "cv2.PyRotationWarper": "cv2.PyRotationWarper",
        "cv2.QRCodeDetector": "cv2.QRCodeDetector",
        "cv2.QRCodeDetectorAruco": "cv2.QRCodeDetectorAruco",
        "cv2.QRCodeDetectorAruco.Params": "cv2.QRCodeDetectorAruco_Params",
        "cv2.QRCodeEncoder": "cv2.QRCodeEncoder",
        "cv2.QRCodeEncoder.Params": "cv2.QRCodeEncoder_Params",
        "cv2.RotatedRect": "cv2.RotatedRect",
        "cv2.SIFT": "cv2.SIFT",
        "cv2.ShapeContextDistanceExtractor": "cv2.ShapeContextDistanceExtractor",
        "cv2.ShapeDistanceExtractor": "cv2.ShapeDistanceExtractor",
        "cv2.ShapeTransformer": "cv2.ShapeTransformer",
        "cv2.SimpleBlobDetector": "cv2.SimpleBlobDetector",
        "cv2.SimpleBlobDetector.Params": "cv2.SimpleBlobDetector_Params",
        "cv2.SparseOpticalFlow": "cv2.SparseOpticalFlow",
        "cv2.SparsePyrLKOpticalFlow": "cv2.SparsePyrLKOpticalFlow",
        "cv2.StereoBM": "cv2.StereoBM",
        "cv2.StereoMatcher": "cv2.StereoMatcher",
        "cv2.StereoSGBM": "cv2.StereoSGBM",
        "cv2.Stitcher": "cv2.Stitcher",
        "cv2.Subdiv2D": "cv2.Subdiv2D",
        "cv2.ThinPlateSplineShapeTransformer": "cv2.ThinPlateSplineShapeTransformer",
        "cv2.TickMeter": "cv2.TickMeter",
        "cv2.Tonemap": "cv2.Tonemap",
        "cv2.TonemapDrago": "cv2.TonemapDrago",
        "cv2.TonemapMantiuk": "cv2.TonemapMantiuk",
        "cv2.TonemapReinhard": "cv2.TonemapReinhard",
        "cv2.Tracker": "cv2.Tracker",
        "cv2.TrackerCSRT": "cv2.TrackerCSRT",
        "cv2.TrackerCSRT.Params": "cv2.TrackerCSRT_Params",
        "cv2.TrackerDaSiamRPN": "cv2.TrackerDaSiamRPN",
        "cv2.TrackerDaSiamRPN.Params": "cv2.TrackerDaSiamRPN_Params",
        "cv2.TrackerGOTURN": "cv2.TrackerGOTURN",
        "cv2.TrackerGOTURN.Params": "cv2.TrackerGOTURN_Params",
        "cv2.TrackerKCF": "cv2.TrackerKCF",
        "cv2.TrackerKCF.Params": "cv2.TrackerKCF_Params",
        "cv2.TrackerMIL": "cv2.TrackerMIL",
        "cv2.TrackerMIL.Params": "cv2.TrackerMIL_Params",
        "cv2.TrackerNano": "cv2.TrackerNano",
        "cv2.TrackerNano.Params": "cv2.TrackerNano_Params",
        "cv2.TrackerVit": "cv2.TrackerVit",
        "cv2.TrackerVit.Params": "cv2.TrackerVit_Params",
        "cv2.UMat": "cv2.UMat",
        "cv2.UsacParams": "cv2.UsacParams",
        "cv2.VariationalRefinement": "cv2.VariationalRefinement",
        "cv2.VideoCapture": "cv2.VideoCapture",
        "cv2.VideoWriter": "cv2.VideoWriter",
        "cv2.WarperCreator": "cv2.WarperCreator",
        "cv2.aruco.ArucoDetector": "cv2.aruco_ArucoDetector",
        "cv2.aruco.Board": "cv2.aruco_Board",
        "cv2.aruco.CharucoBoard": "cv2.aruco_CharucoBoard",
        "cv2.aruco.CharucoDetector": "cv2.aruco_CharucoDetector",
        "cv2.aruco.CharucoParameters": "cv2.aruco_CharucoParameters",
        "cv2.aruco.DetectorParameters": "cv2.aruco_DetectorParameters",
        "cv2.aruco.Dictionary": "cv2.aruco_Dictionary",
        "cv2.aruco.EstimateParameters": "cv2.aruco_EstimateParameters",
        "cv2.aruco.GridBoard": "cv2.aruco_GridBoard",
        "cv2.aruco.RefineParameters": "cv2.aruco_RefineParameters",
        "cv2.barcode.BarcodeDetector": "cv2.barcode_BarcodeDetector",
        "cv2.bgsegm.BackgroundSubtractorCNT": "cv2.bgsegm_BackgroundSubtractorCNT",
        "cv2.bgsegm.BackgroundSubtractorGMG": "cv2.bgsegm_BackgroundSubtractorGMG",
        "cv2.bgsegm.BackgroundSubtractorGSOC": "cv2.bgsegm_BackgroundSubtractorGSOC",
        "cv2.bgsegm.BackgroundSubtractorLSBP": "cv2.bgsegm_BackgroundSubtractorLSBP",
        "cv2.bgsegm.BackgroundSubtractorLSBPDesc": "cv2.bgsegm_BackgroundSubtractorLSBPDesc",
        "cv2.bgsegm.BackgroundSubtractorMOG": "cv2.bgsegm_BackgroundSubtractorMOG",
        "cv2.bgsegm.SyntheticSequenceGenerator": "cv2.bgsegm_SyntheticSequenceGenerator",
        "cv2.bioinspired.Retina": "cv2.bioinspired_Retina",
        "cv2.bioinspired.RetinaFastToneMapping": "cv2.bioinspired_RetinaFastToneMapping",
        "cv2.bioinspired.TransientAreasSegmentationModule": "cv2.bioinspired_TransientAreasSegmentationModule",
        "cv2.bootstrap": "cv2.bootstrap",
        "cv2.ccm.ColorCorrectionModel": "cv2.ccm_ColorCorrectionModel",
        "cv2.colored_kinfu.ColoredKinFu": "cv2.colored_kinfu_ColoredKinFu",
        "cv2.colored_kinfu.Params": "cv2.colored_kinfu_Params",
        "cv2.createButton": "cv2.createButton",
        "cv2.createTrackbar": "cv2.createTrackbar",
        "cv2.cuda.BufferPool": "cv2.cuda_BufferPool",
        "cv2.cuda.DeviceInfo": "cv2.cuda_DeviceInfo",
        "cv2.cuda.Event": "cv2.cuda_Event",
        "cv2.cuda.GpuData": "cv2.cuda_GpuData",
        "cv2.cuda.GpuMat": "cv2.cuda_GpuMat",
        "cv2.cuda.GpuMatND": "cv2.cuda_GpuMatND",
        "cv2.cuda.HostMem": "cv2.cuda_HostMem",
        "cv2.cuda.SURF_CUDA": "cv2.cuda_SURF_CUDA",
        "cv2.cuda.Stream": "cv2.cuda_Stream",
        "cv2.cuda.TargetArchs": "cv2.cuda_TargetArchs",
        "cv2.cuda.GpuMat.Allocator": "cv2.cuda_GpuMat_Allocator",
        "cv2.detail.AffineBasedEstimator": "cv2.detail_AffineBasedEstimator",
        "cv2.detail.AffineBestOf2NearestMatcher": "cv2.detail_AffineBestOf2NearestMatcher",
        "cv2.detail.BestOf2NearestMatcher": "cv2.detail_BestOf2NearestMatcher",
        "cv2.detail.BestOf2NearestRangeMatcher": "cv2.detail_BestOf2NearestRangeMatcher",
        "cv2.detail.Blender": "cv2.detail_Blender",
        "cv2.detail.BlocksChannelsCompensator": "cv2.detail_BlocksChannelsCompensator",
        "cv2.detail.BlocksCompensator": "cv2.detail_BlocksCompensator",
        "cv2.detail.BlocksGainCompensator": "cv2.detail_BlocksGainCompensator",
        "cv2.detail.BundleAdjusterAffine": "cv2.detail_BundleAdjusterAffine",
        "cv2.detail.BundleAdjusterAffinePartial": "cv2.detail_BundleAdjusterAffinePartial",
        "cv2.detail.BundleAdjusterBase": "cv2.detail_BundleAdjusterBase",
        "cv2.detail.BundleAdjusterRay": "cv2.detail_BundleAdjusterRay",
        "cv2.detail.BundleAdjusterReproj": "cv2.detail_BundleAdjusterReproj",
        "cv2.detail.CameraParams": "cv2.detail_CameraParams",
        "cv2.detail.ChannelsCompensator": "cv2.detail_ChannelsCompensator",
        "cv2.detail.DpSeamFinder": "cv2.detail_DpSeamFinder",
        "cv2.detail.Estimator": "cv2.detail_Estimator",
        "cv2.detail.ExposureCompensator": "cv2.detail_ExposureCompensator",
        "cv2.detail.FeatherBlender": "cv2.detail_FeatherBlender",
        "cv2.detail.FeaturesMatcher": "cv2.detail_FeaturesMatcher",
        "cv2.detail.GainCompensator": "cv2.detail_GainCompensator",
        "cv2.detail.GraphCutSeamFinder": "cv2.detail_GraphCutSeamFinder",
        "cv2.detail.HomographyBasedEstimator": "cv2.detail_HomographyBasedEstimator",
        "cv2.detail.ImageFeatures": "cv2.detail_ImageFeatures",
        "cv2.detail.MatchesInfo": "cv2.detail_MatchesInfo",
        "cv2.detail.MultiBandBlender": "cv2.detail_MultiBandBlender",
        "cv2.detail.NoBundleAdjuster": "cv2.detail_NoBundleAdjuster",
        "cv2.detail.NoExposureCompensator": "cv2.detail_NoExposureCompensator",
        "cv2.detail.NoSeamFinder": "cv2.detail_NoSeamFinder",
        "cv2.detail.PairwiseSeamFinder": "cv2.detail_PairwiseSeamFinder",
        "cv2.detail.ProjectorBase": "cv2.detail_ProjectorBase",
        "cv2.detail.SeamFinder": "cv2.detail_SeamFinder",
        "cv2.detail.SphericalProjector": "cv2.detail_SphericalProjector",
        "cv2.detail.Timelapser": "cv2.detail_Timelapser",
        "cv2.detail.TimelapserCrop": "cv2.detail_TimelapserCrop",
        "cv2.detail.VoronoiSeamFinder": "cv2.detail_VoronoiSeamFinder",
        "cv2.dnn.ClassificationModel": "cv2.dnn_ClassificationModel",
        "cv2.dnn.DetectionModel": "cv2.dnn_DetectionModel",
        "cv2.dnn.DictValue": "cv2.typing.LayerId",
        "cv2.dnn.Image2BlobParams": "cv2.dnn_Image2BlobParams",
        "cv2.dnn.KeypointsModel": "cv2.dnn_KeypointsModel",
        "cv2.dnn.Layer": "cv2.dnn_Layer",
        "cv2.dnn.Model": "cv2.dnn_Model",
        "cv2.dnn.Net": "cv2.dnn_Net",
        "cv2.dnn.SegmentationModel": "cv2.dnn_SegmentationModel",
        "cv2.dnn.TextDetectionModel": "cv2.dnn_TextDetectionModel",
        "cv2.dnn.TextDetectionModel_DB": "cv2.dnn_TextDetectionModel_DB",
        "cv2.dnn.TextDetectionModel_EAST": "cv2.dnn_TextDetectionModel_EAST",
        "cv2.dnn.TextRecognitionModel": "cv2.dnn_TextRecognitionModel",
        "cv2.dnn_registerLayer": "cv2.dnn_registerLayer",
        "cv2.dnn_superres.DnnSuperResImpl": "cv2.dnn_superres_DnnSuperResImpl",
        "cv2.dnn_unregisterLayer": "cv2.dnn_unregisterLayer",
        "cv2.dpm.DPMDetector": "cv2.dpm_DPMDetector",
        "cv2.dpm.DPMDetector.ObjectDetection": "cv2.dpm_DPMDetector_ObjectDetection",
        "cv2.dynafu.DynaFu": "cv2.dynafu_DynaFu",
        "cv2.error": "cv2.error",
        "cv2.face.BIF": "cv2.face_BIF",
        "cv2.face.BasicFaceRecognizer": "cv2.face_BasicFaceRecognizer",
        "cv2.face.EigenFaceRecognizer": "cv2.face_EigenFaceRecognizer",
        "cv2.face.FaceRecognizer": "cv2.face_FaceRecognizer",
        "cv2.face.Facemark": "cv2.face_Facemark",
        "cv2.face.FacemarkAAM": "cv2.face_FacemarkAAM",
        "cv2.face.FacemarkKazemi": "cv2.face_FacemarkKazemi",
        "cv2.face.FacemarkLBF": "cv2.face_FacemarkLBF",
        "cv2.face.FacemarkTrain": "cv2.face_FacemarkTrain",
        "cv2.face.FisherFaceRecognizer": "cv2.face_FisherFaceRecognizer",
        "cv2.face.LBPHFaceRecognizer": "cv2.face_LBPHFaceRecognizer",
        "cv2.face.MACE": "cv2.face_MACE",
        "cv2.face.PredictCollector": "cv2.face_PredictCollector",
        "cv2.face.StandardCollector": "cv2.face_StandardCollector",
        "cv2.flann.Index": "cv2.flann_Index",
        "cv2.gapi.GNetPackage": "cv2.gapi_GNetPackage",
        "cv2.gapi.GNetParam": "cv2.gapi_GNetParam",
        "cv2.gapi.compile_args": "cv2.gapi.compile_args",
        "cv2.gapi.ie.PyParams": "cv2.gapi_ie_PyParams",
        "cv2.gapi.onnx.PyParams": "cv2.gapi_onnx_PyParams",
        "cv2.gapi.onnx.ep.CUDA": "cv2.gapi_onnx_ep_CUDA",
        "cv2.gapi.onnx.ep.CoreML": "cv2.gapi_onnx_ep_CoreML",
        "cv2.gapi.onnx.ep.DirectML": "cv2.gapi_onnx_ep_DirectML",
        "cv2.gapi.onnx.ep.OpenVINO": "cv2.gapi_onnx_ep_OpenVINO",
        "cv2.gapi.onnx.ep.TensorRT": "cv2.gapi_onnx_ep_TensorRT",
        "cv2.gapi.ot.ObjectTrackerParams": "cv2.gapi_ot_ObjectTrackerParams",
        "cv2.gapi.ov.PyParams": "cv2.gapi_ov_PyParams",
        "cv2.gapi.streaming.queue_capacity": "cv2.gapi_streaming_queue_capacity",
        "cv2.gapi.wip.GOutputs": "cv2.gapi_wip_GOutputs",
        "cv2.gapi.wip.IStreamSource": "cv2.gapi_wip_IStreamSource",
        "cv2.gapi.wip.draw.Circle": "cv2.gapi_wip_draw_Circle",
        "cv2.gapi.wip.draw.Image": "cv2.gapi_wip_draw_Image",
        "cv2.gapi.wip.draw.Line": "cv2.gapi_wip_draw_Line",
        "cv2.gapi.wip.draw.Mosaic": "cv2.gapi_wip_draw_Mosaic",
        "cv2.gapi.wip.draw.Poly": "cv2.gapi_wip_draw_Poly",
        "cv2.gapi.wip.draw.Rect": "cv2.gapi_wip_draw_Rect",
        "cv2.gapi.wip.draw.Text": "cv2.gapi_wip_draw_Text",
        "cv2.gapi.wip.gst.GStreamerPipeline": "cv2.gapi_wip_gst_GStreamerPipeline",
        "cv2.gapi.gin": "cv2.gin",
        "cv2.hfs.HfsSegment": "cv2.hfs_HfsSegment",
        "cv2.img_hash.AverageHash": "cv2.img_hash_AverageHash",
        "cv2.img_hash.BlockMeanHash": "cv2.img_hash_BlockMeanHash",
        "cv2.img_hash.ColorMomentHash": "cv2.img_hash_ColorMomentHash",
        "cv2.img_hash.ImgHashBase": "cv2.img_hash_ImgHashBase",
        "cv2.img_hash.MarrHildrethHash": "cv2.img_hash_MarrHildrethHash",
        "cv2.img_hash.PHash": "cv2.img_hash_PHash",
        "cv2.img_hash.RadialVarianceHash": "cv2.img_hash_RadialVarianceHash",
        "cv2.kinfu.KinFu": "cv2.kinfu_KinFu",
        "cv2.kinfu.Params": "cv2.kinfu_Params",
        "cv2.kinfu.Volume": "cv2.kinfu_Volume",
        "cv2.kinfu.VolumeParams": "cv2.kinfu_VolumeParams",
        "cv2.kinfu.detail.PoseGraph": "cv2.kinfu_detail_PoseGraph",
        "cv2.large_kinfu.LargeKinfu": "cv2.large_kinfu_LargeKinfu",
        "cv2.large_kinfu.Params": "cv2.large_kinfu_Params",
        "cv2.legacy.MultiTracker": "cv2.legacy_MultiTracker",
        "cv2.legacy.Tracker": "cv2.legacy_Tracker",
        "cv2.legacy.TrackerBoosting": "cv2.legacy_TrackerBoosting",
        "cv2.legacy.TrackerCSRT": "cv2.legacy_TrackerCSRT",
        "cv2.legacy.TrackerKCF": "cv2.legacy_TrackerKCF",
        "cv2.legacy.TrackerMIL": "cv2.legacy_TrackerMIL",
        "cv2.legacy.TrackerMOSSE": "cv2.legacy_TrackerMOSSE",
        "cv2.legacy.TrackerMedianFlow": "cv2.legacy_TrackerMedianFlow",
        "cv2.legacy.TrackerTLD": "cv2.legacy_TrackerTLD",
        "cv2.line_descriptor.BinaryDescriptor": "cv2.line_descriptor_BinaryDescriptor",
        "cv2.line_descriptor.BinaryDescriptorMatcher": "cv2.line_descriptor_BinaryDescriptorMatcher",
        "cv2.line_descriptor.DrawLinesMatchesFlags": "cv2.line_descriptor_DrawLinesMatchesFlags",
        "cv2.line_descriptor.KeyLine": "cv2.line_descriptor_KeyLine",
        "cv2.line_descriptor.LSDDetector": "cv2.line_descriptor_LSDDetector",
        "cv2.line_descriptor.LSDParam": "cv2.line_descriptor_LSDParam",
        "cv2.linemod.ColorGradient": "cv2.linemod_ColorGradient",
        "cv2.linemod.DepthNormal": "cv2.linemod_DepthNormal",
        "cv2.linemod.Detector": "cv2.linemod_Detector",
        "cv2.linemod.Feature": "cv2.linemod_Feature",
        "cv2.linemod.Match": "cv2.linemod_Match",
        "cv2.linemod.Modality": "cv2.linemod_Modality",
        "cv2.linemod.QuantizedPyramid": "cv2.linemod_QuantizedPyramid",
        "cv2.linemod.Template": "cv2.linemod_Template",
        "cv2.load_config_py3.exec_file_wrapper": "cv2.load_config_py3.exec_file_wrapper",
        "cv2.mcc.CChecker": "cv2.mcc_CChecker",
        "cv2.mcc.CCheckerDetector": "cv2.mcc_CCheckerDetector",
        "cv2.mcc.CCheckerDraw": "cv2.mcc_CCheckerDraw",
        "cv2.mcc.DetectorParameters": "cv2.mcc_DetectorParameters",
        "cv2.misc.version.get_ocv_version": "cv2.misc.version.get_ocv_version",
        "cv2.ml.ANN_MLP": "cv2.ml_ANN_MLP",
        "cv2.ml.Boost": "cv2.ml_Boost",
        "cv2.ml.DTrees": "cv2.ml_DTrees",
        "cv2.ml.EM": "cv2.ml_EM",
        "cv2.ml.KNearest": "cv2.ml_KNearest",
        "cv2.ml.LogisticRegression": "cv2.ml_LogisticRegression",
        "cv2.ml.NormalBayesClassifier": "cv2.ml_NormalBayesClassifier",
        "cv2.ml.ParamGrid": "cv2.ml_ParamGrid",
        "cv2.ml.RTrees": "cv2.ml_RTrees",
        "cv2.ml.SVM": "cv2.ml_SVM",
        "cv2.ml.SVMSGD": "cv2.ml_SVMSGD",
        "cv2.ml.StatModel": "cv2.ml_StatModel",
        "cv2.ml.TrainData": "cv2.ml_TrainData",
        "cv2.ocl.Device": "cv2.ocl_Device",
        "cv2.ocl.OpenCLExecutionContext": "cv2.ocl_OpenCLExecutionContext",
        "cv2.optflow.DenseRLOFOpticalFlow": "cv2.optflow_DenseRLOFOpticalFlow",
        "cv2.optflow.DualTVL1OpticalFlow": "cv2.optflow_DualTVL1OpticalFlow",
        "cv2.optflow.GPCDetails": "cv2.optflow_GPCDetails",
        "cv2.optflow.GPCPatchDescriptor": "cv2.optflow_GPCPatchDescriptor",
        "cv2.optflow.GPCPatchSample": "cv2.optflow_GPCPatchSample",
        "cv2.optflow.GPCTrainingSamples": "cv2.optflow_GPCTrainingSamples",
        "cv2.optflow.GPCTree": "cv2.optflow_GPCTree",
        "cv2.optflow.OpticalFlowPCAFlow": "cv2.optflow_OpticalFlowPCAFlow",
        "cv2.optflow.PCAPrior": "cv2.optflow_PCAPrior",
        "cv2.optflow.RLOFOpticalFlowParameter": "cv2.optflow_RLOFOpticalFlowParameter",
        "cv2.optflow.SparseRLOFOpticalFlow": "cv2.optflow_SparseRLOFOpticalFlow",
        "cv2.phase_unwrapping.HistogramPhaseUnwrapping": "cv2.phase_unwrapping_HistogramPhaseUnwrapping",
        "cv2.phase_unwrapping.PhaseUnwrapping": "cv2.phase_unwrapping_PhaseUnwrapping",
        "cv2.phase_unwrapping.HistogramPhaseUnwrapping.Params": "cv2.phase_unwrapping_HistogramPhaseUnwrapping_Params",
        "cv2.plot.Plot2d": "cv2.plot_Plot2d",
        "cv2.ppf_match_3d.ICP": "cv2.ppf_match_3d_ICP",
        "cv2.ppf_match_3d.PPF3DDetector": "cv2.ppf_match_3d_PPF3DDetector",
        "cv2.ppf_match_3d.Pose3D": "cv2.ppf_match_3d_Pose3D",
        "cv2.ppf_match_3d.PoseCluster3D": "cv2.ppf_match_3d_PoseCluster3D",
        "cv2.quality.QualityBRISQUE": "cv2.quality_QualityBRISQUE",
        "cv2.quality.QualityBase": "cv2.quality_QualityBase",
        "cv2.quality.QualityGMSD": "cv2.quality_QualityGMSD",
        "cv2.quality.QualityMSE": "cv2.quality_QualityMSE",
        "cv2.quality.QualityPSNR": "cv2.quality_QualityPSNR",
        "cv2.quality.QualitySSIM": "cv2.quality_QualitySSIM",
        "cv2.rapid.GOSTracker": "cv2.rapid_GOSTracker",
        "cv2.rapid.OLSTracker": "cv2.rapid_OLSTracker",
        "cv2.rapid.Rapid": "cv2.rapid_Rapid",
        "cv2.rapid.Tracker": "cv2.rapid_Tracker",
        "cv2.redirectError": "cv2.redirectError",
        "cv2.reg.Map": "cv2.reg_Map",
        "cv2.reg.MapAffine": "cv2.reg_MapAffine",
        "cv2.reg.MapProjec": "cv2.reg_MapProjec",
        "cv2.reg.MapShift": "cv2.reg_MapShift",
        "cv2.reg.MapTypeCaster": "cv2.reg_MapTypeCaster",
        "cv2.reg.Mapper": "cv2.reg_Mapper",
        "cv2.reg.MapperGradAffine": "cv2.reg_MapperGradAffine",
        "cv2.reg.MapperGradEuclid": "cv2.reg_MapperGradEuclid",
        "cv2.reg.MapperGradProj": "cv2.reg_MapperGradProj",
        "cv2.reg.MapperGradShift": "cv2.reg_MapperGradShift",
        "cv2.reg.MapperGradSimilar": "cv2.reg_MapperGradSimilar",
        "cv2.reg.MapperPyramid": "cv2.reg_MapperPyramid",
        "cv2.rgbd.DepthCleaner": "cv2.rgbd_DepthCleaner",
        "cv2.rgbd.FastICPOdometry": "cv2.rgbd_FastICPOdometry",
        "cv2.rgbd.ICPOdometry": "cv2.rgbd_ICPOdometry",
        "cv2.rgbd.Odometry": "cv2.rgbd_Odometry",
        "cv2.rgbd.OdometryFrame": "cv2.rgbd_OdometryFrame",
        "cv2.rgbd.RgbdFrame": "cv2.rgbd_RgbdFrame",
        "cv2.rgbd.RgbdICPOdometry": "cv2.rgbd_RgbdICPOdometry",
        "cv2.rgbd.RgbdNormals": "cv2.rgbd_RgbdNormals",
        "cv2.rgbd.RgbdOdometry": "cv2.rgbd_RgbdOdometry",
        "cv2.rgbd.RgbdPlane": "cv2.rgbd_RgbdPlane",
        "cv2.saliency.MotionSaliency": "cv2.saliency_MotionSaliency",
        "cv2.saliency.MotionSaliencyBinWangApr2014": "cv2.saliency_MotionSaliencyBinWangApr2014",
        "cv2.saliency.Objectness": "cv2.saliency_Objectness",
        "cv2.saliency.ObjectnessBING": "cv2.saliency_ObjectnessBING",
        "cv2.saliency.Saliency": "cv2.saliency_Saliency",
        "cv2.saliency.StaticSaliency": "cv2.saliency_StaticSaliency",
        "cv2.saliency.StaticSaliencyFineGrained": "cv2.saliency_StaticSaliencyFineGrained",
        "cv2.saliency.StaticSaliencySpectralResidual": "cv2.saliency_StaticSaliencySpectralResidual",
        "cv2.segmentation.IntelligentScissorsMB": "cv2.segmentation_IntelligentScissorsMB",
        "cv2.setMouseCallback": "cv2.setMouseCallback",
        "cv2.stereo.MatchQuasiDense": "cv2.stereo_MatchQuasiDense",
        "cv2.stereo.PropagationParameters": "cv2.stereo_PropagationParameters",
        "cv2.stereo.QuasiDenseStereo": "cv2.stereo_QuasiDenseStereo",
        "cv2.structured_light.GrayCodePattern": "cv2.structured_light_GrayCodePattern",
        "cv2.structured_light.SinusoidalPattern": "cv2.structured_light_SinusoidalPattern",
        "cv2.structured_light.StructuredLightPattern": "cv2.structured_light_StructuredLightPattern",
        "cv2.structured_light.SinusoidalPattern.Params": "cv2.structured_light_SinusoidalPattern_Params",
        "cv2.text.BaseOCR": "cv2.text_BaseOCR",
        "cv2.text.ERFilter": "cv2.text_ERFilter",
        "cv2.text.OCRBeamSearchDecoder": "cv2.text_OCRBeamSearchDecoder",
        "cv2.text.OCRHMMDecoder": "cv2.text_OCRHMMDecoder",
        "cv2.text.OCRTesseract": "cv2.text_OCRTesseract",
        "cv2.text.TextDetector": "cv2.text_TextDetector",
        "cv2.text.TextDetectorCNN": "cv2.text_TextDetectorCNN",
        "cv2.text.ERFilter.Callback": "cv2.text_ERFilter_Callback",
        "cv2.text.OCRBeamSearchDecoder.ClassifierCallback": "cv2.text_OCRBeamSearchDecoder_ClassifierCallback",
        "cv2.text.OCRHMMDecoder.ClassifierCallback": "cv2.text_OCRHMMDecoder_ClassifierCallback",
        "cv2.utils.ClassWithKeywordProperties": "cv2.utils_ClassWithKeywordProperties",
        "cv2.utils.NativeMethodPatchedResult": "cv2.utils.NativeMethodPatchedResult",
        "cv2.utils.nested.ExportClassName": "cv2.utils_nested_ExportClassName",
        "cv2.utils.testOverwriteNativeMethod": "cv2.utils.testOverwriteNativeMethod",
        "cv2.utils.nested.ExportClassName.Params": "cv2.utils_nested_ExportClassName_Params",
        "cv2.wechat_qrcode.WeChatQRCode": "cv2.wechat_qrcode_WeChatQRCode",
        "cv2.xfeatures2d.AffineFeature2D": "cv2.xfeatures2d_AffineFeature2D",
        "cv2.xfeatures2d.BEBLID": "cv2.xfeatures2d_BEBLID",
        "cv2.xfeatures2d.BoostDesc": "cv2.xfeatures2d_BoostDesc",
        "cv2.xfeatures2d.BriefDescriptorExtractor": "cv2.xfeatures2d_BriefDescriptorExtractor",
        "cv2.xfeatures2d.DAISY": "cv2.xfeatures2d_DAISY",
        "cv2.xfeatures2d.FREAK": "cv2.xfeatures2d_FREAK",
        "cv2.xfeatures2d.HarrisLaplaceFeatureDetector": "cv2.xfeatures2d_HarrisLaplaceFeatureDetector",
        "cv2.xfeatures2d.LATCH": "cv2.xfeatures2d_LATCH",
        "cv2.xfeatures2d.LUCID": "cv2.xfeatures2d_LUCID",
        "cv2.xfeatures2d.MSDDetector": "cv2.xfeatures2d_MSDDetector",
        "cv2.xfeatures2d.PCTSignatures": "cv2.xfeatures2d_PCTSignatures",
        "cv2.xfeatures2d.PCTSignaturesSQFD": "cv2.xfeatures2d_PCTSignaturesSQFD",
        "cv2.xfeatures2d.SURF": "cv2.xfeatures2d_SURF",
        "cv2.xfeatures2d.StarDetector": "cv2.xfeatures2d_StarDetector",
        "cv2.xfeatures2d.TBMR": "cv2.xfeatures2d_TBMR",
        "cv2.xfeatures2d.TEBLID": "cv2.xfeatures2d_TEBLID",
        "cv2.xfeatures2d.VGG": "cv2.xfeatures2d_VGG",
        "cv2.ximgproc.AdaptiveManifoldFilter": "cv2.ximgproc_AdaptiveManifoldFilter",
        "cv2.ximgproc.ContourFitting": "cv2.ximgproc_ContourFitting",
        "cv2.ximgproc.DTFilter": "cv2.ximgproc_DTFilter",
        "cv2.ximgproc.DisparityFilter": "cv2.ximgproc_DisparityFilter",
        "cv2.ximgproc.DisparityWLSFilter": "cv2.ximgproc_DisparityWLSFilter",
        "cv2.ximgproc.EdgeAwareInterpolator": "cv2.ximgproc_EdgeAwareInterpolator",
        "cv2.ximgproc.EdgeBoxes": "cv2.ximgproc_EdgeBoxes",
        "cv2.ximgproc.EdgeDrawing": "cv2.ximgproc_EdgeDrawing",
        "cv2.ximgproc.FastBilateralSolverFilter": "cv2.ximgproc_FastBilateralSolverFilter",
        "cv2.ximgproc.FastGlobalSmootherFilter": "cv2.ximgproc_FastGlobalSmootherFilter",
        "cv2.ximgproc.FastLineDetector": "cv2.ximgproc_FastLineDetector",
        "cv2.ximgproc.GuidedFilter": "cv2.ximgproc_GuidedFilter",
        "cv2.ximgproc.RFFeatureGetter": "cv2.ximgproc_RFFeatureGetter",
        "cv2.ximgproc.RICInterpolator": "cv2.ximgproc_RICInterpolator",
        "cv2.ximgproc.RidgeDetectionFilter": "cv2.ximgproc_RidgeDetectionFilter",
        "cv2.ximgproc.ScanSegment": "cv2.ximgproc_ScanSegment",
        "cv2.ximgproc.SparseMatchInterpolator": "cv2.ximgproc_SparseMatchInterpolator",
        "cv2.ximgproc.StructuredEdgeDetection": "cv2.ximgproc_StructuredEdgeDetection",
        "cv2.ximgproc.SuperpixelLSC": "cv2.ximgproc_SuperpixelLSC",
        "cv2.ximgproc.SuperpixelSEEDS": "cv2.ximgproc_SuperpixelSEEDS",
        "cv2.ximgproc.SuperpixelSLIC": "cv2.ximgproc_SuperpixelSLIC",
        "cv2.ximgproc.segmentation.GraphSegmentation": "cv2.ximgproc_segmentation_GraphSegmentation",
        "cv2.ximgproc.segmentation.SelectiveSearchSegmentation": "cv2.ximgproc_segmentation_SelectiveSearchSegmentation",
        "cv2.ximgproc.segmentation.SelectiveSearchSegmentationStrategy": "cv2.ximgproc_segmentation_SelectiveSearchSegmentationStrategy",
        "cv2.ximgproc.segmentation.SelectiveSearchSegmentationStrategyColor": "cv2.ximgproc_segmentation_SelectiveSearchSegmentationStrategyColor",
        "cv2.ximgproc.segmentation.SelectiveSearchSegmentationStrategyFill": "cv2.ximgproc_segmentation_SelectiveSearchSegmentationStrategyFill",
        "cv2.ximgproc.segmentation.SelectiveSearchSegmentationStrategyMultiple": "cv2.ximgproc_segmentation_SelectiveSearchSegmentationStrategyMultiple",
        "cv2.ximgproc.segmentation.SelectiveSearchSegmentationStrategySize": "cv2.ximgproc_segmentation_SelectiveSearchSegmentationStrategySize",
        "cv2.ximgproc.segmentation.SelectiveSearchSegmentationStrategyTexture": "cv2.ximgproc_segmentation_SelectiveSearchSegmentationStrategyTexture",
        "cv2.ximgproc.EdgeDrawing.Params": "cv2.ximgproc_EdgeDrawing_Params",
        "cv2.xphoto.GrayworldWB": "cv2.xphoto_GrayworldWB",
        "cv2.xphoto.LearningBasedWB": "cv2.xphoto_LearningBasedWB",
        "cv2.xphoto.SimpleWB": "cv2.xphoto_SimpleWB",
        "cv2.xphoto.TonemapDurand": "cv2.xphoto_TonemapDurand",
        "cv2.xphoto.WhiteBalancer": "cv2.xphoto_WhiteBalancer",
        "cv2.gapi.descr_of": "cv2.gapi.descr_of",
        "cv2.gapi.kernel": "cv2.gapi.kernel",
        "cv2.gapi.networks": "cv2.gapi.networks",
        "cv2.gapi.op": "cv2.gapi.op",
        "cv2.gapi.register": "cv2.gapi.register"
    },
    "nltk": {},
    "spacy": {},
    "gensim": {
        "gensim.corpora.bleicorpus.BleiCorpus": "gensim.corpora.bleicorpus.BleiCorpus",
        "gensim.corpora.dictionary.Dictionary": "gensim.models.keyedvectors.Dictionary",
        "gensim.corpora.hashdictionary.HashDictionary": "gensim.corpora.hashdictionary.HashDictionary",
        "gensim.corpora.indexedcorpus.IndexedCorpus": "gensim.corpora.ucicorpus.IndexedCorpus",
        "gensim.corpora.lowcorpus.LowCorpus": "gensim.corpora.malletcorpus.LowCorpus",
        "gensim.corpora.malletcorpus.MalletCorpus": "gensim.corpora.malletcorpus.MalletCorpus",
        "gensim.corpora.mmcorpus.MmCorpus": "gensim.models.atmodel.MmCorpus",
        "gensim.corpora.opinosiscorpus.OpinosisCorpus": "gensim.corpora.opinosiscorpus.OpinosisCorpus",
        "gensim.corpora.svmlightcorpus.SvmLightCorpus": "gensim.corpora.svmlightcorpus.SvmLightCorpus",
        "gensim.corpora.textcorpus.TextCorpus": "gensim.corpora.wikicorpus.TextCorpus",
        "gensim.corpora.textcorpus.TextDirectoryCorpus": "gensim.corpora.textcorpus.TextDirectoryCorpus",
        "gensim.corpora.ucicorpus.UciCorpus": "gensim.corpora.ucicorpus.UciCorpus",
        "gensim.corpora.wikicorpus.WikiCorpus": "gensim.corpora.wikicorpus.WikiCorpus",
        "gensim.utils.ClippedCorpus": "gensim.utils.ClippedCorpus",
        "gensim.utils.FakeDict": "gensim.utils.FakeDict",
        "gensim.utils.InputQueue": "gensim.utils.InputQueue",
        "gensim.utils.RepeatCorpus": "gensim.utils.RepeatCorpus",
        "gensim.utils.RepeatCorpusNTimes": "gensim.utils.RepeatCorpusNTimes",
        "gensim.utils.SaveLoad": "gensim.models.ensemblelda.SaveLoad",
        "gensim.utils.SlicedCorpus": "gensim.utils.SlicedCorpus",
        "gensim.utils.any2unicode": "gensim.utils.to_unicode",
        "gensim.utils.any2utf8": "gensim.models.word2vec_corpusfile.any2utf8",
        "gensim.utils.call_on_class_only": "gensim.models.word2vec.call_on_class_only",
        "gensim.utils.check_output": "gensim.utils.check_output",
        "gensim.utils.chunkize": "gensim.utils.chunkize",
        "gensim.utils.chunkize_serial": "gensim.utils.grouper",
        "gensim.utils.copytree_hardlink": "gensim.utils.copytree_hardlink",
        "gensim.utils.deaccent": "gensim.corpora.textcorpus.deaccent",
        "gensim.utils.decode_htmlentities": "gensim.utils.decode_htmlentities",
        "gensim.utils.deprecated": "gensim.models.word2vec.deprecated",
        "gensim.utils.dict_from_corpus": "gensim.utils.dict_from_corpus",
        "gensim.utils.effective_n_jobs": "gensim.utils.effective_n_jobs",
        "gensim.utils.file_or_filename": "gensim.utils.file_or_filename",
        "gensim.utils.flatten": "gensim.utils.flatten",
        "gensim.utils.getNS": "gensim.utils.getNS",
        "gensim.utils.get_max_id": "gensim.utils.get_max_id",
        "gensim.utils.get_my_ip": "gensim.utils.get_my_ip",
        "gensim.utils.get_random_state": "gensim.utils.get_random_state",
        "gensim.utils.identity": "gensim.utils.identity",
        "gensim.utils.ignore_deprecation_warning": "gensim.utils.ignore_deprecation_warning",
        "gensim.utils.is_corpus": "gensim.similarities.termsim.is_corpus",
        "gensim.utils.is_empty": "gensim.models.lsimodel.is_empty",
        "gensim.utils.iter_windows": "gensim.utils.iter_windows",
        "gensim.utils.keep_vocab_item": "gensim.models.word2vec.keep_vocab_item",
        "gensim.utils.lazy_flatten": "gensim.utils.lazy_flatten",
        "gensim.utils.merge_counts": "gensim.utils.merge_counts",
        "gensim.utils.mock_data": "gensim.utils.mock_data",
        "gensim.utils.mock_data_row": "gensim.utils.mock_data_row",
        "gensim.utils.open_file": "gensim.utils.open_file",
        "gensim.utils.pickle": "gensim.utils.pickle",
        "gensim.utils.prune_vocab": "gensim.utils.prune_vocab",
        "gensim.utils.pyro_daemon": "gensim.utils.pyro_daemon",
        "gensim.utils.qsize": "gensim.utils.qsize",
        "gensim.utils.randfname": "gensim.utils.randfname",
        "gensim.utils.revdict": "gensim.utils.revdict",
        "gensim.utils.safe_unichr": "gensim.utils.safe_unichr",
        "gensim.utils.sample_dict": "gensim.utils.sample_dict",
        "gensim.utils.save_as_line_sentence": "gensim.utils.save_as_line_sentence",
        "gensim.utils.simple_preprocess": "gensim.utils.simple_preprocess",
        "gensim.utils.simple_tokenize": "gensim.corpora.textcorpus.simple_tokenize",
        "gensim.utils.smart_extension": "gensim.utils.smart_extension",
        "gensim.utils.strided_windows": "gensim.utils.strided_windows",
        "gensim.utils.synchronous": "gensim.utils.synchronous",
        "gensim.utils.tokenize": "gensim.utils.tokenize",
        "gensim.utils.toptexts": "gensim.utils.toptexts",
        "gensim.utils.trim_vocab_by_freq": "gensim.utils.trim_vocab_by_freq",
        "gensim.utils.unpickle": "gensim.utils.unpickle",
        "gensim.utils.upload_chunked": "gensim.utils.upload_chunked",
        "gensim.interfaces.CorpusABC": "gensim.interfaces.CorpusABC",
        "gensim.interfaces.SimilarityABC": "gensim.interfaces.SimilarityABC",
        "gensim.interfaces.TransformationABC": "gensim.interfaces.TransformationABC",
        "gensim.interfaces.TransformedCorpus": "gensim.models.nmf.TransformedCorpus",
        "gensim.matutils.Dense2Corpus": "gensim.matutils.Dense2Corpus",
        "gensim.corpora._mmreader.MmReader": "gensim.corpora.ucicorpus.MmReader",
        "gensim.matutils.MmWriter": "gensim.corpora.ucicorpus.MmWriter",
        "gensim.matutils.Scipy2Corpus": "gensim.matutils.Scipy2Corpus",
        "gensim.matutils.Sparse2Corpus": "gensim.matutils.Sparse2Corpus",
        "gensim.matutils.any2sparse": "gensim.matutils.any2sparse",
        "gensim.matutils.argsort": "gensim.matutils.argsort",
        "gensim.matutils.blas": "gensim.matutils.blas",
        "gensim.matutils.corpus2csc": "gensim.similarities.termsim.corpus2csc",
        "gensim.matutils.corpus2dense": "gensim.matutils.corpus2dense",
        "gensim.matutils.cossim": "gensim.matutils.cossim",
        "gensim.matutils.full2sparse": "gensim.matutils.full2sparse",
        "gensim._matutils.dirichlet_expectation": "gensim.models.hdpmodel.dirichlet_expectation",
        "gensim.matutils.full2sparse_clipped": "gensim.matutils.full2sparse_clipped",
        "gensim.matutils.hellinger": "gensim.models.ldamodel.hellinger",
        "gensim.matutils.isbow": "gensim.matutils.isbow",
        "gensim.matutils.ismatrix": "gensim.matutils.ismatrix",
        "gensim.matutils.jaccard": "gensim.matutils.jaccard",
        "gensim.matutils.jaccard_distance": "gensim.models.ldamodel.jaccard_distance",
        "gensim.matutils.jensen_shannon": "gensim.models.ldamodel.jensen_shannon",
        "gensim.matutils.kullback_leibler": "gensim.models.ldamodel.kullback_leibler",
        "gensim._matutils.logsumexp": "gensim.models.ldamodel.logsumexp",
        "gensim._matutils.mean_absolute_difference": "gensim.models.hdpmodel.mean_absolute_difference",
        "gensim.matutils.pad": "gensim.matutils.pad",
        "gensim.matutils.qr_destroy": "gensim.matutils.qr_destroy",
        "gensim.matutils.ret_log_normalize_vec": "gensim.matutils.ret_log_normalize_vec",
        "gensim.matutils.ret_normalized_vec": "gensim.matutils.ret_normalized_vec",
        "gensim.matutils.scipy2scipy_clipped": "gensim.matutils.scipy2scipy_clipped",
        "gensim.matutils.scipy2sparse": "gensim.matutils.scipy2sparse",
        "gensim.matutils.sparse2full": "gensim.matutils.sparse2full",
        "gensim.matutils.unitvec": "gensim.matutils.unitvec",
        "gensim.matutils.veclen": "gensim.matutils.veclen",
        "gensim.matutils.zeros_aligned": "gensim.matutils.zeros_aligned",
        "gensim.parsing.preprocessing.split_on_space": "gensim.parsing.preprocessing.split_on_space",
        "gensim.parsing.porter.PorterStemmer": "gensim.parsing.preprocessing.PorterStemmer",
        "gensim.parsing.preprocessing.lower_to_unicode": "gensim.parsing.preprocessing.lower_to_unicode",
        "gensim.parsing.preprocessing.remove_short_tokens": "gensim.parsing.preprocessing.remove_short_tokens",
        "gensim.parsing.preprocessing.remove_stopword_tokens": "gensim.parsing.preprocessing.remove_stopword_tokens",
        "gensim.parsing.preprocessing.strip_multiple_whitespaces": "gensim.parsing.strip_multiple_whitespaces",
        "gensim.corpora.textcorpus.walk": "gensim.corpora.textcorpus.walk",
        "gensim.corpora.ucicorpus.UciReader": "gensim.corpora.ucicorpus.UciReader",
        "gensim.corpora.ucicorpus.UciWriter": "gensim.corpora.ucicorpus.UciWriter",
        "gensim.corpora.wikicorpus.extract_pages": "gensim.corpora.wikicorpus.extract_pages",
        "gensim.corpora.wikicorpus.filter_example": "gensim.corpora.wikicorpus.filter_example",
        "gensim.corpora.wikicorpus.filter_wiki": "gensim.corpora.wikicorpus.filter_wiki",
        "gensim.corpora.wikicorpus.find_interlinks": "gensim.corpora.wikicorpus.find_interlinks",
        "gensim.corpora.wikicorpus.get_namespace": "gensim.corpora.wikicorpus.get_namespace",
        "gensim.corpora.wikicorpus.init_to_ignore_interrupt": "gensim.corpora.wikicorpus.init_to_ignore_interrupt",
        "gensim.corpora.wikicorpus.process_article": "gensim.corpora.wikicorpus.process_article",
        "gensim.corpora.wikicorpus.remove_file": "gensim.corpora.wikicorpus.remove_file",
        "gensim.corpora.wikicorpus.remove_markup": "gensim.corpora.wikicorpus.remove_markup",
        "gensim.corpora.wikicorpus.remove_template": "gensim.corpora.wikicorpus.remove_template",
        "gensim.corpora.wikicorpus.tokenize": "gensim.corpora.wikicorpus.tokenize",
        "gensim.models.bm25model.AtireBM25Model": "gensim.models.bm25model.AtireBM25Model",
        "gensim.models.atmodel.AuthorTopicModel": "gensim.models.atmodel.AuthorTopicModel",
        "gensim.models.translation_matrix.BackMappingTranslationMatrix": "gensim.models.translation_matrix.BackMappingTranslationMatrix",
        "gensim.models.coherencemodel.CoherenceModel": "gensim.models.nmf.CoherenceModel",
        "gensim.models.doc2vec.Doc2Vec": "gensim.models.doc2vec.Doc2Vec",
        "gensim.models.ensemblelda.EnsembleLda": "gensim.models.ensemblelda.EnsembleLda",
        "gensim.models.fasttext.FastText": "gensim.models.fasttext.FastText",
        "gensim.models.hdpmodel.HdpModel": "gensim.models.hdpmodel.HdpModel",
        "gensim.models.keyedvectors.KeyedVectors": "gensim.models.word2vec.KeyedVectors",
        "gensim.models.ldamodel.LdaModel": "gensim.models.ldamulticore.LdaModel",
        "gensim.models.ldamulticore.LdaMulticore": "gensim.models.ldamulticore.LdaMulticore",
        "gensim.models.ldaseqmodel.LdaSeqModel": "gensim.models.ldaseqmodel.LdaSeqModel",
        "gensim.models.logentropy_model.LogEntropyModel": "gensim.models.logentropy_model.LogEntropyModel",
        "gensim.models.lsimodel.LsiModel": "gensim.models.lsimodel.LsiModel",
        "gensim.models.bm25model.LuceneBM25Model": "gensim.models.bm25model.LuceneBM25Model",
        "gensim.models.nmf.Nmf": "gensim.models.nmf.Nmf",
        "gensim.models.normmodel.NormModel": "gensim.models.normmodel.NormModel",
        "gensim.models.bm25model.OkapiBM25Model": "gensim.models.bm25model.OkapiBM25Model",
        "gensim.models.phrases.Phrases": "gensim.models.phrases.Phrases",
        "gensim.models.rpmodel.RpModel": "gensim.models.rpmodel.RpModel",
        "gensim.models.tfidfmodel.TfidfModel": "gensim.models.tfidfmodel.TfidfModel",
        "gensim.models.translation_matrix.TranslationMatrix": "gensim.models.translation_matrix.TranslationMatrix",
        "gensim.models.VocabTransform": "gensim.models.VocabTransform",
        "gensim.models.word2vec.Word2Vec": "gensim.models.word2vec.Word2Vec",
        "gensim.models.atmodel.AuthorTopicState": "gensim.models.atmodel.AuthorTopicState",
        "gensim.models.ldamodel.LdaState": "gensim.models.ldamulticore.LdaState",
        "gensim.models.atmodel.construct_author2doc": "gensim.models.atmodel.construct_author2doc",
        "gensim.models.atmodel.construct_doc2author": "gensim.models.atmodel.construct_doc2author",
        "gensim.models.basemodel.BaseTopicModel": "gensim.models.basemodel.BaseTopicModel",
        "gensim.models.bm25model.BM25ABC": "gensim.models.bm25model.BM25ABC",
        "gensim.models.callbacks.Callback": "gensim.models.ldamodel.Callback",
        "gensim.models.callbacks.CallbackAny2Vec": "gensim.models.callbacks.CallbackAny2Vec",
        "gensim.models.callbacks.CoherenceMetric": "gensim.models.callbacks.CoherenceMetric",
        "gensim.models.callbacks.ConvergenceMetric": "gensim.models.callbacks.ConvergenceMetric",
        "gensim.models.callbacks.DiffMetric": "gensim.models.callbacks.DiffMetric",
        "gensim.models.callbacks.Metric": "gensim.models.callbacks.Metric",
        "gensim.models.callbacks.PerplexityMetric": "gensim.models.callbacks.PerplexityMetric",
        "gensim.parsing.preprocessing.preprocess_documents": "gensim.parsing.preprocessing.preprocess_documents",
        "gensim.parsing.preprocessing.preprocess_string": "gensim.parsing.preprocessing.preprocess_string",
        "gensim.parsing.preprocessing.read_file": "gensim.parsing.read_file",
        "gensim.parsing.preprocessing.read_files": "gensim.parsing.read_files",
        "gensim.parsing.preprocessing.remove_stopwords": "gensim.parsing.remove_stopwords",
        "gensim.parsing.preprocessing.split_alphanum": "gensim.parsing.split_alphanum",
        "gensim.parsing.preprocessing.stem_text": "gensim.parsing.stem_text",
        "gensim.parsing.preprocessing.strip_non_alphanum": "gensim.parsing.strip_non_alphanum",
        "gensim.parsing.preprocessing.strip_numeric": "gensim.parsing.strip_numeric",
        "gensim.parsing.preprocessing.strip_punctuation": "gensim.parsing.strip_punctuation",
        "gensim.parsing.preprocessing.strip_short": "gensim.parsing.strip_short",
        "gensim.parsing.preprocessing.strip_tags": "gensim.parsing.strip_tags",
        "gensim.similarities.levenshtein.LevenshteinSimilarityIndex": "gensim.similarities.levenshtein.LevenshteinSimilarityIndex",
        "gensim.similarities.docsim.MatrixSimilarity": "gensim.similarities.docsim.MatrixSimilarity",
        "gensim.similarities.docsim.Similarity": "gensim.similarities.docsim.Similarity",
        "gensim.similarities.docsim.SoftCosineSimilarity": "gensim.similarities.docsim.SoftCosineSimilarity",
        "gensim.similarities.docsim.SparseMatrixSimilarity": "gensim.similarities.docsim.SparseMatrixSimilarity",
        "gensim.similarities.termsim.SparseTermSimilarityMatrix": "gensim.similarities.termsim.SparseTermSimilarityMatrix",
        "gensim.similarities.termsim.TermSimilarityIndex": "gensim.similarities.termsim.TermSimilarityIndex",
        "gensim.similarities.termsim.UniformTermSimilarityIndex": "gensim.similarities.termsim.UniformTermSimilarityIndex",
        "gensim.similarities.docsim.WmdSimilarity": "gensim.similarities.docsim.WmdSimilarity",
        "gensim.similarities.termsim.WordEmbeddingSimilarityIndex": "gensim.similarities.termsim.WordEmbeddingSimilarityIndex",
        "gensim.similarities.docsim.Shard": "gensim.similarities.docsim.Shard",
        "gensim.similarities.docsim.query_shard": "gensim.similarities.docsim.query_shard",
        "gensim.similarities.fastss.FastSS": "gensim.similarities.levenshtein.FastSS",
        "gensim.similarities.fastss.bytes2set": "gensim.similarities.fastss.bytes2set",
        "gensim.similarities.fastss.editdist": "gensim.similarities.levenshtein.editdist",
        "gensim.similarities.fastss.indexkeys": "gensim.similarities.fastss.indexkeys",
        "gensim.similarities.fastss.set2bytes": "gensim.similarities.fastss.set2bytes",
        "gensim.topic_coherence.aggregation.arithmetic_mean": "gensim.topic_coherence.aggregation.arithmetic_mean",
        "gensim.topic_coherence.direct_confirmation_measure.aggregate_segment_sims": "gensim.topic_coherence.indirect_confirmation_measure.aggregate_segment_sims",
        "gensim.topic_coherence.direct_confirmation_measure.log_conditional_probability": "gensim.topic_coherence.direct_confirmation_measure.log_conditional_probability",
        "gensim.topic_coherence.direct_confirmation_measure.log_ratio_measure": "gensim.topic_coherence.indirect_confirmation_measure.log_ratio_measure",
        "gensim.topic_coherence.indirect_confirmation_measure.ContextVectorComputer": "gensim.topic_coherence.indirect_confirmation_measure.ContextVectorComputer",
        "gensim.topic_coherence.indirect_confirmation_measure.cosine_similarity": "gensim.topic_coherence.indirect_confirmation_measure.cosine_similarity",
        "gensim.topic_coherence.indirect_confirmation_measure.word2vec_similarity": "gensim.topic_coherence.indirect_confirmation_measure.word2vec_similarity",
        "gensim.topic_coherence.text_analysis.CorpusAccumulator": "gensim.topic_coherence.text_analysis.CorpusAccumulator",
        "gensim.topic_coherence.text_analysis.ParallelWordOccurrenceAccumulator": "gensim.topic_coherence.text_analysis.ParallelWordOccurrenceAccumulator",
        "gensim.topic_coherence.text_analysis.WordOccurrenceAccumulator": "gensim.topic_coherence.text_analysis.WordOccurrenceAccumulator",
        "gensim.topic_coherence.text_analysis.WordVectorsAccumulator": "gensim.topic_coherence.text_analysis.WordVectorsAccumulator",
        "gensim.topic_coherence.probability_estimation.p_boolean_document": "gensim.topic_coherence.probability_estimation.p_boolean_document",
        "gensim.topic_coherence.probability_estimation.p_boolean_sliding_window": "gensim.topic_coherence.probability_estimation.p_boolean_sliding_window",
        "gensim.topic_coherence.probability_estimation.p_word2vec": "gensim.topic_coherence.probability_estimation.p_word2vec",
        "gensim.topic_coherence.probability_estimation.unique_ids_from_segments": "gensim.models.coherencemodel.unique_ids_from_segments",
        "gensim.topic_coherence.segmentation.s_one_one": "gensim.topic_coherence.segmentation.s_one_one",
        "gensim.topic_coherence.segmentation.s_one_pre": "gensim.topic_coherence.segmentation.s_one_pre",
        "gensim.topic_coherence.segmentation.s_one_set": "gensim.topic_coherence.segmentation.s_one_set",
        "gensim.topic_coherence.text_analysis.AccumulatingWorker": "gensim.topic_coherence.text_analysis.AccumulatingWorker",
        "gensim.topic_coherence.text_analysis.BaseAnalyzer": "gensim.topic_coherence.text_analysis.BaseAnalyzer",
        "gensim.topic_coherence.text_analysis.InvertedIndexAccumulator": "gensim.topic_coherence.text_analysis.InvertedIndexAccumulator",
        "gensim.topic_coherence.text_analysis.InvertedIndexBased": "gensim.topic_coherence.text_analysis.InvertedIndexBased",
        "gensim.topic_coherence.text_analysis.PatchedWordOccurrenceAccumulator": "gensim.topic_coherence.text_analysis.PatchedWordOccurrenceAccumulator",
        "gensim.topic_coherence.text_analysis.UsesDictionary": "gensim.topic_coherence.text_analysis.UsesDictionary",
        "gensim.topic_coherence.text_analysis.WindowedTextsAnalyzer": "gensim.topic_coherence.text_analysis.WindowedTextsAnalyzer",
        "gensim.models.doc2vec.Doc2VecTrainables": "gensim.models.doc2vec.Doc2VecTrainables",
        "gensim.models.doc2vec.Doc2VecVocab": "gensim.models.doc2vec.Doc2VecVocab",
        "gensim.models.doc2vec.Doctag": "gensim.models.doc2vec.Doctag",
        "gensim.models.doc2vec.TaggedBrownCorpus": "gensim.models.doc2vec.TaggedBrownCorpus",
        "gensim.models.doc2vec.TaggedDocument": "gensim.models.doc2vec.TaggedDocument",
        "gensim.models.doc2vec.TaggedLineDocument": "gensim.models.doc2vec.TaggedLineDocument",
        "gensim.models.doc2vec_corpusfile.d2v_train_epoch_dbow": "gensim.models.doc2vec_corpusfile.d2v_train_epoch_dbow",
        "gensim.models.doc2vec_corpusfile.d2v_train_epoch_dm": "gensim.models.doc2vec_corpusfile.d2v_train_epoch_dm",
        "gensim.models.doc2vec_corpusfile.d2v_train_epoch_dm_concat": "gensim.models.doc2vec_corpusfile.d2v_train_epoch_dm_concat",
        "gensim.models.keyedvectors.pseudorandom_weak_vector": "gensim.models.word2vec.pseudorandom_weak_vector",
        "gensim.models.doc2vec_inner.train_document_dbow": "gensim.models.doc2vec_inner.train_document_dbow",
        "gensim.models.doc2vec_inner.train_document_dm": "gensim.models.doc2vec_inner.train_document_dm",
        "gensim.models.doc2vec_inner.train_document_dm_concat": "gensim.models.doc2vec_inner.train_document_dm_concat",
        "gensim.models.ensemblelda.CBDBSCAN": "gensim.models.ensemblelda.CBDBSCAN",
        "gensim.models.ensemblelda.Cluster": "gensim.models.ensemblelda.Cluster",
        "gensim.models.ensemblelda.Topic": "gensim.models.ensemblelda.Topic",
        "gensim.models.ldamodel.update_dir_prior": "gensim.models.ldamodel.update_dir_prior",
        "gensim.models.ldamulticore.worker_e_step": "gensim.models.ldamulticore.worker_e_step",
        "gensim.models.ensemblelda.mass_masking": "gensim.models.ensemblelda.mass_masking",
        "gensim.models.ensemblelda.rank_masking": "gensim.models.ensemblelda.rank_masking",
        "gensim.models.fasttext.FastTextKeyedVectors": "gensim.models.keyedvectors.FastTextKeyedVectors",
        "gensim.models.fasttext.FastTextTrainables": "gensim.models.fasttext.FastTextTrainables",
        "gensim.models.fasttext.FastTextVocab": "gensim.models.fasttext.FastTextVocab",
        "gensim.models.fasttext_inner.compute_ngrams": "gensim.models.fasttext_inner.compute_ngrams",
        "gensim.models.fasttext_inner.compute_ngrams_bytes": "gensim.models.fasttext_inner.compute_ngrams_bytes",
        "gensim.models.fasttext_inner.ft_hash_bytes": "gensim.models.fasttext_inner.ft_hash_bytes",
        "gensim.models.fasttext.ft_ngram_hashes": "gensim.models.fasttext.ft_ngram_hashes",
        "gensim.models.keyedvectors.CompatVocab": "gensim.models.word2vec.Vocab",
        "gensim.models.keyedvectors.load_word2vec_format": "gensim.models.keyedvectors.load_word2vec_format",
        "gensim.models.keyedvectors.prep_vectors": "gensim.models.fasttext.prep_vectors",
        "gensim.models.fasttext.load_facebook_model": "gensim.models.fasttext.load_facebook_model",
        "gensim.models.fasttext.load_facebook_vectors": "gensim.models.fasttext.load_facebook_vectors",
        "gensim.models.fasttext.save_facebook_model": "gensim.models.fasttext.save_facebook_model",
        "gensim.models.fasttext_inner.train_batch_any": "gensim.models.fasttext_inner.train_batch_any",
        "gensim.models.fasttext_corpusfile.train_epoch_cbow": "gensim.models.fasttext_corpusfile.train_epoch_cbow",
        "gensim.models.fasttext_corpusfile.train_epoch_sg": "gensim.models.fasttext_corpusfile.train_epoch_sg",
        "gensim.models.fasttext_inner.init": "gensim.models.fasttext_inner.init",
        "gensim.models.hdpmodel.HdpTopicFormatter": "gensim.models.hdpmodel.HdpTopicFormatter",
        "gensim.models.hdpmodel.SuffStats": "gensim.models.hdpmodel.SuffStats",
        "gensim.models.hdpmodel.expect_log_sticks": "gensim.models.hdpmodel.expect_log_sticks",
        "gensim.models.hdpmodel.lda_e_step": "gensim.models.hdpmodel.lda_e_step",
        "gensim.models.ldaseqmodel.LdaPost": "gensim.models.ldaseqmodel.LdaPost",
        "gensim.models.ldaseqmodel.df_obs": "gensim.models.ldaseqmodel.df_obs",
        "gensim.models.ldaseqmodel.f_obs": "gensim.models.ldaseqmodel.f_obs",
        "gensim.models.ldaseqmodel.sslm": "gensim.models.ldaseqmodel.sslm",
        "gensim.models.lsimodel.Projection": "gensim.models.lsimodel.Projection",
        "gensim.models.lsimodel.ascarray": "gensim.models.lsimodel.ascarray",
        "gensim.models.lsimodel.asfarray": "gensim.models.lsimodel.asfarray",
        "gensim.models.lsimodel.clip_spectrum": "gensim.models.lsimodel.clip_spectrum",
        "gensim.models.lsimodel.print_debug": "gensim.models.lsimodel.print_debug",
        "gensim.models.lsimodel.stochastic_svd": "gensim.models.lsimodel.stochastic_svd",
        "gensim.models.nmf_pgd.solve_h": "gensim.models.nmf_pgd.solve_h",
        "gensim.models.nmf.version_tuple": "gensim.models.nmf.version_tuple",
        "gensim.models.phrases.FrozenPhrases": "gensim.models.phrases.Phraser",
        "gensim.models.phrases.npmi_scorer": "gensim.models.phrases.npmi_scorer",
        "gensim.models.phrases.original_scorer": "gensim.models.phrases.original_scorer",
        "gensim.models.tfidfmodel.df2idf": "gensim.models.tfidfmodel.df2idf",
        "gensim.models.tfidfmodel.precompute_idfs": "gensim.models.tfidfmodel.precompute_idfs",
        "gensim.models.tfidfmodel.resolve_weights": "gensim.models.tfidfmodel.resolve_weights",
        "gensim.models.tfidfmodel.smartirs_normalize": "gensim.models.tfidfmodel.smartirs_normalize",
        "gensim.models.tfidfmodel.smartirs_wglobal": "gensim.models.tfidfmodel.smartirs_wglobal",
        "gensim.models.tfidfmodel.smartirs_wlocal": "gensim.models.tfidfmodel.smartirs_wlocal",
        "gensim.models.translation_matrix.Space": "gensim.models.translation_matrix.Space",
        "gensim.models.word2vec.BrownCorpus": "gensim.models.word2vec.BrownCorpus",
        "gensim.models.word2vec.Heapitem": "gensim.models.word2vec.Heapitem",
        "gensim.models.word2vec.LineSentence": "gensim.models.word2vec.LineSentence",
        "gensim.models.word2vec.PathLineSentences": "gensim.models.word2vec.PathLineSentences",
        "gensim.models.word2vec.Text8Corpus": "gensim.models.word2vec.Text8Corpus",
        "gensim.models.word2vec.Word2VecTrainables": "gensim.models.word2vec.Word2VecTrainables",
        "gensim.models.word2vec.Word2VecVocab": "gensim.models.word2vec.Word2VecVocab",
        "gensim.models.word2vec_inner.score_sentence_cbow": "gensim.models.word2vec_inner.score_sentence_cbow",
        "gensim.models.word2vec_inner.score_sentence_sg": "gensim.models.word2vec_inner.score_sentence_sg",
        "gensim.models.word2vec_inner.train_batch_cbow": "gensim.models.word2vec_inner.train_batch_cbow",
        "gensim.models.word2vec_inner.train_batch_sg": "gensim.models.word2vec_inner.train_batch_sg",
        "gensim.models.word2vec_corpusfile.train_epoch_cbow": "gensim.models.word2vec_corpusfile.train_epoch_cbow",
        "gensim.models.word2vec_corpusfile.train_epoch_sg": "gensim.models.word2vec_corpusfile.train_epoch_sg",
        "gensim.models.word2vec_corpusfile.CythonLineSentence": "gensim.models.word2vec_corpusfile.CythonLineSentence",
        "gensim.models.word2vec_corpusfile.CythonVocab": "gensim.models.word2vec_corpusfile.CythonVocab",
        "gensim.models.word2vec_corpusfile.rebuild_cython_line_sentence": "gensim.models.word2vec_corpusfile.rebuild_cython_line_sentence",
        "gensim.models.word2vec_inner.init": "gensim.models.word2vec_inner.init"
    },
    "fastai": {},
    "tqdm": {
        "tqdm._monitor.TMonitor": "tqdm.std.TMonitor",
        "tqdm.std.TqdmDeprecationWarning": "tqdm.std.TqdmDeprecationWarning",
        "tqdm.std.TqdmExperimentalWarning": "tqdm.std.TqdmExperimentalWarning",
        "tqdm.std.TqdmKeyError": "tqdm.std.TqdmKeyError",
        "tqdm.std.TqdmMonitorWarning": "tqdm.std.TqdmMonitorWarning",
        "tqdm._monitor.TqdmSynchronisationWarning": "tqdm.TqdmSynchronisationWarning",
        "tqdm.std.TqdmTypeError": "tqdm.std.TqdmTypeError",
        "tqdm.std.TqdmWarning": "tqdm.std.TqdmWarning",
        "tqdm.std.tqdm": "tqdm.tqdm",
        "tqdm.asyncio.tarange": "tqdm.asyncio.trange",
        "tqdm.asyncio.tqdm_asyncio": "tqdm.contrib.tqdm_auto",
        "tqdm.auto.trange": "tqdm.auto.trange",
        "tqdm.std.trange": "tqdm.trange",
        "tqdm.cli.cast": "tqdm.cli.cast",
        "tqdm.cli.main": "tqdm.main",
        "tqdm.cli.posix_pipe": "tqdm.cli.posix_pipe",
        "tqdm.contrib.DummyTqdmFile": "tqdm.contrib.DummyTqdmFile",
        "tqdm.utils.ObjectWrapper": "tqdm.utils.ObjectWrapper",
        "tqdm.contrib.builtin_iterable": "tqdm.contrib.builtin_iterable",
        "tqdm.contrib.concurrent.ensure_lock": "tqdm.contrib.concurrent.ensure_lock",
        "tqdm.contrib.concurrent.process_map": "tqdm.contrib.concurrent.process_map",
        "tqdm.contrib.concurrent.thread_map": "tqdm.contrib.concurrent.thread_map",
        "tqdm.contrib.tenumerate": "tqdm.contrib.tenumerate",
        "tqdm.contrib.tmap": "tqdm.contrib.tmap",
        "tqdm.contrib.tzip": "tqdm.contrib.tzip",
        "tqdm.gui.tgrange": "tqdm.tgrange",
        "tqdm.gui.tqdm_gui": "tqdm.tqdm_gui",
        "tqdm.notebook.TqdmHBox": "tqdm.notebook.TqdmHBox",
        "tqdm.notebook.tnrange": "tqdm.notebook.trange",
        "tqdm.notebook.tqdm_notebook": "tqdm.notebook.tqdm_notebook",
        "tqdm.std.Bar": "tqdm.std.Bar",
        "tqdm.utils.CallbackIOWrapper": "tqdm.utils.CallbackIOWrapper",
        "tqdm.utils.Comparable": "tqdm.utils.Comparable",
        "tqdm.utils.DisableOnWriteError": "tqdm.utils.DisableOnWriteError",
        "tqdm.std.EMA": "tqdm.std.EMA",
        "tqdm.utils.FormatReplace": "tqdm.utils.FormatReplace",
        "tqdm.utils.SimpleTextIOWrapper": "tqdm.utils.SimpleTextIOWrapper",
        "tqdm.std.TRLock": "tqdm.std.TRLock",
        "tqdm.std.TqdmDefaultWriteLock": "tqdm.std.TqdmDefaultWriteLock",
        "tqdm.utils.disp_len": "tqdm.utils.disp_len",
        "tqdm.utils.disp_trim": "tqdm.utils.disp_trim",
        "tqdm.utils.envwrap": "tqdm.utils.envwrap",
        "tqdm.tnrange": "tqdm.tnrange",
        "tqdm.tqdm_notebook": "tqdm.tqdm_notebook",
        "tqdm._tqdm_pandas.tqdm_pandas": "tqdm.tqdm_pandas"
    },
    "joblib": {
        "joblib.logger.Logger": "joblib.parallel.Logger",
        "joblib.memory.MemorizedResult": "joblib.memory.MemorizedResult",
        "joblib.memory.Memory": "joblib.memory.Memory",
        "joblib.parallel.Parallel": "joblib.parallel.Parallel",
        "joblib.logger.PrintTime": "joblib.logger.PrintTime",
        "joblib.backports.LooseVersion": "joblib.compressor.LooseVersion",
        "joblib.backports.Version": "joblib.backports.Version",
        "joblib.backports.make_memmap": "joblib.numpy_pickle.make_memmap",
        "joblib.compressor.BZ2CompressorWrapper": "joblib.numpy_pickle.BZ2CompressorWrapper",
        "joblib.compressor.BinaryGzipFile": "joblib.compressor.BinaryGzipFile",
        "joblib.compressor.BinaryZlibFile": "joblib.numpy_pickle.BinaryZlibFile",
        "joblib.compressor.CompressorWrapper": "joblib.compressor.CompressorWrapper",
        "joblib.compressor.GzipCompressorWrapper": "joblib.numpy_pickle.GzipCompressorWrapper",
        "joblib.compressor.LZ4CompressorWrapper": "joblib.numpy_pickle.LZ4CompressorWrapper",
        "joblib.compressor.LZMACompressorWrapper": "joblib.numpy_pickle.LZMACompressorWrapper",
        "joblib.compressor.XZCompressorWrapper": "joblib.numpy_pickle.XZCompressorWrapper",
        "joblib.compressor.ZlibCompressorWrapper": "joblib.numpy_pickle.ZlibCompressorWrapper",
        "joblib.compressor.register_compressor": "joblib.register_compressor",
        "joblib.parallel.cpu_count": "joblib.parallel.cpu_count",
        "joblib.parallel.delayed": "joblib.parallel.delayed",
        "joblib.disk.delete_folder": "joblib.disk.delete_folder",
        "joblib.disk.disk_used": "joblib.disk.disk_used",
        "joblib.disk.memstr_to_bytes": "joblib.parallel.memstr_to_bytes",
        "joblib.disk.mkdirp": "joblib.logger.mkdirp",
        "joblib.disk.rm_subdirs": "joblib.disk.rm_subdirs",
        "joblib.numpy_pickle.dump": "joblib.numpy_pickle.dump",
        "joblib.parallel.effective_n_jobs": "joblib.parallel.effective_n_jobs",
        "joblib.executor.MemmappingExecutor": "joblib.executor.MemmappingExecutor",
        "joblib._memmapping_reducer.TemporaryResourcesManager": "joblib.pool.TemporaryResourcesManager",
        "joblib.executor.get_memmapping_executor": "joblib.executor.get_memmapping_executor",
        "joblib._memmapping_reducer.get_memmapping_reducers": "joblib.pool.get_memmapping_reducers",
        "joblib.memory.expires_after": "joblib.memory.expires_after",
        "joblib.externals.cloudpickle.cloudpickle.Pickler": "joblib.externals.cloudpickle.cloudpickle.Pickler",
        "joblib.externals.cloudpickle.cloudpickle.dump": "joblib.externals.cloudpickle.dump",
        "joblib.externals.cloudpickle.cloudpickle.dumps": "joblib.externals.loky.cloudpickle_wrapper.dumps",
        "joblib.externals.cloudpickle.cloudpickle.dynamic_subimport": "joblib.externals.cloudpickle.dynamic_subimport",
        "joblib.externals.cloudpickle.cloudpickle.instance": "joblib.externals.cloudpickle.instance",
        "joblib.externals.cloudpickle.cloudpickle.is_tornado_coroutine": "joblib.externals.cloudpickle.is_tornado_coroutine",
        "joblib.externals.cloudpickle.cloudpickle.list_registry_pickle_by_value": "joblib.externals.cloudpickle.list_registry_pickle_by_value",
        "joblib.externals.cloudpickle.cloudpickle.register_pickle_by_value": "joblib.externals.cloudpickle.register_pickle_by_value",
        "joblib.externals.cloudpickle.cloudpickle.subimport": "joblib.externals.cloudpickle.subimport",
        "joblib.externals.cloudpickle.cloudpickle.unregister_pickle_by_value": "joblib.externals.cloudpickle.unregister_pickle_by_value",
        "joblib.externals.loky.process_executor.BrokenProcessPool": "joblib.externals.loky.process_executor.BrokenProcessPool",
        "joblib.externals.loky._base.Future": "joblib.externals.loky.process_executor.Future",
        "joblib.externals.loky.process_executor.ProcessPoolExecutor": "joblib.externals.loky.reusable_executor.ProcessPoolExecutor",
        "joblib.externals.loky.backend.context.LokyContext": "joblib.externals.loky.backend.context.LokyContext",
        "joblib.externals.loky.backend.context.LokyInitMainContext": "joblib.externals.loky.backend.context.LokyInitMainContext",
        "joblib.externals.loky.backend.process.LokyInitMainProcess": "joblib.externals.loky.backend.process.LokyInitMainProcess",
        "joblib.externals.loky.backend.process.LokyProcess": "joblib.externals.loky.backend.process.LokyProcess",
        "joblib.externals.loky.backend.context.cpu_count": "joblib.externals.loky.reusable_executor.cpu_count",
        "joblib.externals.loky.backend.context.get_context": "joblib.externals.loky.reusable_executor.get_context",
        "joblib.externals.loky.backend.context.get_start_method": "joblib.externals.loky.backend.context.get_start_method",
        "joblib.externals.loky.backend.context.set_start_method": "joblib.externals.loky.backend.context.set_start_method",
        "joblib.externals.loky.backend.process.AuthenticationKey": "joblib.externals.loky.backend.process.AuthenticationKey",
        "joblib.externals.loky.backend.queues.Queue": "joblib.externals.loky.process_executor.Queue",
        "joblib.externals.loky.backend.queues.SimpleQueue": "joblib.externals.loky.process_executor.SimpleQueue",
        "joblib.externals.loky.backend.reduction.dumps": "joblib.externals.loky.backend.reduction.dumps",
        "joblib.externals.loky.backend.reduction.dump": "joblib.externals.loky.backend.reduction.dump",
        "joblib.externals.loky.backend.reduction.get_loky_pickler": "joblib.externals.loky.backend.reduction.get_loky_pickler",
        "joblib.externals.loky.backend.reduction.get_loky_pickler_name": "joblib.externals.loky.process_executor.get_loky_pickler_name",
        "joblib.externals.loky.backend.reduction.register": "joblib.externals.loky.backend.reduction.register",
        "joblib.externals.loky.backend.reduction.set_loky_pickler": "joblib.externals.loky.set_loky_pickler",
        "joblib.externals.loky.backend.resource_tracker.ResourceTracker": "joblib.externals.loky.backend.resource_tracker.ResourceTracker",
        "joblib.externals.loky.backend.resource_tracker.ResourceTracker.ensure_running": "joblib.externals.loky.backend.resource_tracker.ensure_running",
        "joblib.externals.loky.backend.resource_tracker.ResourceTracker.getfd": "joblib.externals.loky.backend.resource_tracker.getfd",
        "joblib.externals.loky.backend.resource_tracker.main": "joblib.externals.loky.backend.resource_tracker.main",
        "joblib.externals.loky.backend.resource_tracker.ResourceTracker.maybe_unlink": "joblib.externals.loky.backend.resource_tracker.maybe_unlink",
        "joblib.externals.loky.backend.resource_tracker.ResourceTracker.register": "joblib.externals.loky.backend.resource_tracker.register",
        "joblib.externals.loky.backend.spawn.get_executable": "joblib.externals.loky.backend.spawn.get_executable",
        "joblib.externals.loky.backend.spawn.get_preparation_data": "joblib.externals.loky.backend.spawn.get_preparation_data",
        "joblib.externals.loky.backend.spawn.prepare": "joblib.externals.loky.backend.spawn.prepare",
        "joblib.externals.loky.backend.resource_tracker.spawnv_passfds": "joblib.externals.loky.backend.resource_tracker.spawnv_passfds",
        "joblib.externals.loky.backend.resource_tracker.ResourceTracker.unregister": "joblib.externals.loky.backend.resource_tracker.unregister",
        "joblib.externals.loky.backend.utils.get_exitcodes_terminated_worker": "joblib.externals.loky.process_executor.get_exitcodes_terminated_worker",
        "joblib.externals.loky.backend.utils.kill_process_tree": "joblib.externals.loky.process_executor.kill_process_tree",
        "joblib.externals.loky.backend.utils.recursive_terminate": "joblib.externals.loky.backend.utils.recursive_terminate",
        "joblib.externals.loky.cloudpickle_wrapper.CallableObjectWrapper": "joblib.externals.loky.cloudpickle_wrapper.CallableObjectWrapper",
        "joblib.externals.loky.cloudpickle_wrapper.CloudpickledObjectWrapper": "joblib.externals.loky.cloudpickle_wrapper.CloudpickledObjectWrapper",
        "joblib.externals.loky.cloudpickle_wrapper.wrap_non_picklable_objects": "joblib.wrap_non_picklable_objects",
        "joblib.externals.loky.reusable_executor.get_reusable_executor": "joblib.externals.loky.reusable_executor.get_reusable_executor",
        "joblib.externals.loky.process_executor.LokyRecursionError": "joblib.externals.loky.process_executor.LokyRecursionError",
        "joblib.externals.loky.process_executor.ShutdownExecutorError": "joblib.externals.loky.process_executor.ShutdownExecutorError",
        "joblib.externals.loky.process_executor.TerminatedWorkerError": "joblib.externals.loky.process_executor.TerminatedWorkerError",
        "joblib.func_inspect.filter_args": "joblib.memory.filter_args",
        "joblib.func_inspect.format_call": "joblib.memory.format_call",
        "joblib.func_inspect.format_signature": "joblib.memory.format_signature",
        "joblib.func_inspect.FullArgSpec": "joblib.func_inspect.full_argspec_type",
        "joblib.func_inspect.get_func_code": "joblib.memory.get_func_code",
        "joblib.func_inspect.get_func_name": "joblib.memory.get_func_name",
        "joblib.logger.pformat": "joblib.memory.pformat",
        "joblib.hashing.hash": "joblib.hashing.hash",
        "joblib.hashing.Hasher": "joblib.hashing.Hasher",
        "joblib.hashing.NumpyHasher": "joblib.hashing.NumpyHasher",
        "joblib.numpy_pickle.load": "joblib.numpy_pickle.load",
        "joblib.logger.format_time": "joblib.memory.format_time",
        "joblib.logger.short_format_time": "joblib.parallel.short_format_time",
        "joblib.memory.AsyncMemorizedFunc": "joblib.memory.AsyncMemorizedFunc",
        "joblib.memory.AsyncNotMemorizedFunc": "joblib.memory.AsyncNotMemorizedFunc",
        "joblib._store_backends.CacheWarning": "joblib.memory.CacheWarning",
        "joblib._store_backends.FileSystemStoreBackend": "joblib.memory.FileSystemStoreBackend",
        "joblib.memory.JobLibCollisionWarning": "joblib.memory.JobLibCollisionWarning",
        "joblib.memory.MemorizedFunc": "joblib.memory.MemorizedFunc",
        "joblib.memory.NotMemorizedFunc": "joblib.memory.NotMemorizedFunc",
        "joblib.memory.NotMemorizedResult": "joblib.memory.NotMemorizedResult",
        "joblib._store_backends.StoreBackendBase": "joblib.memory.StoreBackendBase",
        "joblib.memory.extract_first_line": "joblib.memory.extract_first_line",
        "joblib.memory.register_store_backend": "joblib.register_store_backend",
        "joblib.numpy_pickle_compat.NDArrayWrapper": "joblib.numpy_pickle_compat.NDArrayWrapper",
        "joblib.numpy_pickle.NumpyArrayWrapper": "joblib.numpy_pickle.NumpyArrayWrapper",
        "joblib.numpy_pickle.NumpyPickler": "joblib.numpy_pickle.NumpyPickler",
        "joblib.numpy_pickle.NumpyUnpickler": "joblib.numpy_pickle.NumpyUnpickler",
        "joblib.numpy_pickle_compat.ZNDArrayWrapper": "joblib.numpy_pickle_compat.ZNDArrayWrapper",
        "joblib.numpy_pickle_compat.load_compatibility": "joblib.numpy_pickle_compat.load_compatibility",
        "joblib.numpy_pickle.load_temporary_memmap": "joblib.numpy_pickle.load_temporary_memmap",
        "joblib.numpy_pickle_compat.ZipNumpyUnpickler": "joblib.numpy_pickle_compat.ZipNumpyUnpickler",
        "joblib.numpy_pickle_compat.asbytes": "joblib.numpy_pickle_compat.asbytes",
        "joblib.numpy_pickle_compat.hex_str": "joblib.numpy_pickle_compat.hex_str",
        "joblib.numpy_pickle_compat.read_zfile": "joblib.numpy_pickle_compat.read_zfile",
        "joblib.numpy_pickle_compat.write_zfile": "joblib.numpy_pickle_compat.write_zfile",
        "joblib._parallel_backends.AutoBatchingMixin": "joblib.parallel.AutoBatchingMixin",
        "joblib.parallel.BatchCompletionCallBack": "joblib.parallel.BatchCompletionCallBack",
        "joblib.parallel.BatchedCalls": "joblib.parallel.BatchedCalls",
        "joblib._parallel_backends.FallbackToBackend": "joblib.parallel.FallbackToBackend",
        "joblib._parallel_backends.LokyBackend": "joblib.parallel.LokyBackend",
        "joblib._parallel_backends.MultiprocessingBackend": "joblib.parallel.MultiprocessingBackend",
        "joblib._parallel_backends.ParallelBackendBase": "joblib.parallel.ParallelBackendBase",
        "joblib._parallel_backends.SequentialBackend": "joblib.parallel.SequentialBackend",
        "joblib._parallel_backends.ThreadingBackend": "joblib.parallel.ThreadingBackend",
        "joblib._utils.eval_expr": "joblib.parallel.eval_expr",
        "joblib.parallel.get_active_backend": "joblib.parallel.get_active_backend",
        "joblib.parallel.parallel_backend": "joblib.parallel_backend",
        "joblib.parallel.parallel_config": "joblib.parallel_config",
        "joblib.parallel.register_parallel_backend": "joblib.register_parallel_backend",
        "joblib.pool.CustomizablePickler": "joblib.pool.CustomizablePickler",
        "joblib.pool.CustomizablePicklingQueue": "joblib.pool.CustomizablePicklingQueue",
        "joblib.pool.MemmappingPool": "joblib.pool.MemmappingPool",
        "joblib.pool.PicklingPool": "joblib.pool.PicklingPool"
    },
    "h5py": {
        "h5py._hl.attrs.AttributeManager": "h5py.AttributeManager",
        "h5py._hl.dataset.Dataset": "h5py.Dataset",
        "h5py._hl.datatype.Datatype": "h5py.Datatype",
        "h5py._hl.base.Empty": "h5py.Empty",
        "h5py._hl.group.ExternalLink": "h5py.ExternalLink",
        "h5py._hl.files.File": "h5py.File",
        "h5py._hl.group.Group": "h5py.Group",
        "h5py._hl.base.HLObject": "h5py.HLObject",
        "h5py._hl.group.HardLink": "h5py.HardLink",
        "h5py._selector.MultiBlockSlice": "h5py.MultiBlockSlice",
        "h5py.h5r.Reference": "h5py.h5r.Reference",
        "h5py.h5r.RegionReference": "h5py.h5r.RegionReference",
        "h5py._hl.group.SoftLink": "h5py.SoftLink",
        "h5py._hl.vds.VirtualLayout": "h5py.VirtualLayout",
        "h5py._hl.vds.VirtualSource": "h5py.VirtualSource",
        "h5py.h5t.check_dtype": "h5py.h5t.check_dtype",
        "h5py.h5t.check_enum_dtype": "h5py.h5t.check_enum_dtype",
        "h5py.h5t.check_opaque_dtype": "h5py.h5t.check_opaque_dtype",
        "h5py.h5t.check_ref_dtype": "h5py.h5t.check_ref_dtype",
        "h5py.h5t.check_string_dtype": "h5py.h5t.check_string_dtype",
        "h5py.h5t.check_vlen_dtype": "h5py.h5t.check_vlen_dtype",
        "h5py.enable_ipython_completer": "h5py.enable_ipython_completer",
        "h5py.h5t.enum_dtype": "h5py.h5t.enum_dtype",
        "h5py._hl.filters.FilterRefBase": "h5py._hl.filters.FilterRefBase",
        "h5py._hl.filters.Gzip": "h5py._hl.filters.Gzip",
        "h5py._hl.compat.filename_encode": "h5py._hl.filters.filename_encode",
        "h5py._hl.filters.fill_dcpl": "h5py._hl.filters.fill_dcpl",
        "h5py._hl.filters.get_filters": "h5py._hl.filters.get_filters",
        "h5py._hl.filters.guess_chunk": "h5py._hl.filters.guess_chunk",
        "h5py.h5d.DatasetID": "h5py.h5d.DatasetID",
        "h5py.h5d.create": "h5py.h5d.create",
        "h5py.h5d.open": "h5py.h5d.open",
        "h5py._objects.with_phil": "h5py.h5t.with_phil",
        "h5py.h5f.FileID": "h5py.h5f.FileID",
        "h5py.h5f.create": "h5py.h5f.create",
        "h5py.h5f.flush": "h5py.h5f.flush",
        "h5py.h5f.get_name": "h5py.h5f.get_name",
        "h5py.h5f.get_obj_count": "h5py.h5f.get_obj_count",
        "h5py.h5f.get_obj_ids": "h5py.h5f.get_obj_ids",
        "h5py.h5f.is_hdf5": "h5py.h5f.is_hdf5",
        "h5py.h5f.mount": "h5py.h5f.mount",
        "h5py.h5f.open": "h5py.h5f.open",
        "h5py.h5f.open_file_image": "h5py.h5f.open_file_image",
        "h5py.h5f.unmount": "h5py.h5f.unmount",
        "h5py.h5p.PropClassID": "h5py.h5p.PropClassID",
        "h5py.h5p.PropCopyID": "h5py.h5p.PropCopyID",
        "h5py.h5p.PropCreateID": "h5py.h5p.PropCreateID",
        "h5py.h5p.PropDAID": "h5py.h5p.PropDAID",
        "h5py.h5p.PropDCID": "h5py.h5p.PropDCID",
        "h5py.h5p.PropDXID": "h5py.h5p.PropDXID",
        "h5py.h5p.PropFAID": "h5py.h5p.PropFAID",
        "h5py.h5p.PropFCID": "h5py.h5p.PropFCID",
        "h5py.h5p.PropGCID": "h5py.h5p.PropGCID",
        "h5py.h5p.PropID": "h5py.h5p.PropID",
        "h5py.h5p.PropInstanceID": "h5py.h5p.PropInstanceID",
        "h5py.h5p.PropLAID": "h5py.h5p.PropLAID",
        "h5py.h5p.PropLCID": "h5py.h5p.PropLCID",
        "h5py.h5p.PropOCID": "h5py.h5p.PropOCID",
        "h5py.h5p.PropTCID": "h5py.h5p.PropTCID",
        "h5py.h5p.create": "h5py.h5p.create",
        "h5py.h5z.filter_avail": "h5py.h5z.filter_avail",
        "h5py.h5z.get_filter_info": "h5py.h5z.get_filter_info",
        "h5py.h5z.register_filter": "h5py.h5z.register_filter",
        "h5py.h5z.unregister_filter": "h5py.h5z.unregister_filter",
        "h5py._hl.base.product": "h5py._hl.filters.product",
        "h5py.h5.get_config": "h5py.h5t.get_config",
        "h5py.h5.ByteStringContext": "h5py.h5.ByteStringContext",
        "h5py.h5.H5PYConfig": "h5py.h5.H5PYConfig",
        "h5py.h5py_warnings.H5pyDeprecationWarning": "h5py.h5py_warnings.H5pyDeprecationWarning",
        "h5py.h5.get_libversion": "h5py.h5.get_libversion",
        "h5py.h5a.AttrID": "h5py.h5a.AttrID",
        "h5py.h5a.AttrInfo": "h5py.h5a.AttrInfo",
        "h5py.h5a.create": "h5py.h5a.create",
        "h5py.h5a.delete": "h5py.h5a.delete",
        "h5py.h5a.exists": "h5py.h5a.exists",
        "h5py.h5a.get_info": "h5py.h5a.get_info",
        "h5py.h5a.get_num_attrs": "h5py.h5a.get_num_attrs",
        "h5py.h5a.iterate": "h5py.h5a.iterate",
        "h5py.h5a.open": "h5py.h5a.open",
        "h5py.h5a.rename": "h5py.h5a.rename",
        "h5py.h5ac.CacheConfig": "h5py.h5ac.CacheConfig",
        "h5py.h5ds.attach_scale": "h5py.h5ds.attach_scale",
        "h5py.h5ds.detach_scale": "h5py.h5ds.detach_scale",
        "h5py.h5ds.get_label": "h5py.h5ds.get_label",
        "h5py.h5ds.get_num_scales": "h5py.h5ds.get_num_scales",
        "h5py.h5ds.get_scale_name": "h5py.h5ds.get_scale_name",
        "h5py.h5ds.is_attached": "h5py.h5ds.is_attached",
        "h5py.h5ds.is_scale": "h5py.h5ds.is_scale",
        "h5py.h5ds.iterate": "h5py.h5ds.iterate",
        "h5py.h5ds.set_label": "h5py.h5ds.set_label",
        "h5py.h5ds.set_scale": "h5py.h5ds.set_scale",
        "h5py.h5g.GroupID": "h5py.h5g.GroupID",
        "h5py.h5g.GroupIter": "h5py.h5g.GroupIter",
        "h5py.h5g.GroupStat": "h5py.h5g.GroupStat",
        "h5py.h5g.create": "h5py.h5g.create",
        "h5py.h5g.get_objinfo": "h5py.h5g.get_objinfo",
        "h5py.h5g.iterate": "h5py.h5g.iterate",
        "h5py.h5g.open": "h5py.h5g.open",
        "h5py.h5i.dec_ref": "h5py.h5i.dec_ref",
        "h5py.h5i.get_file_id": "h5py.h5i.get_file_id",
        "h5py.h5i.get_name": "h5py.h5i.get_name",
        "h5py.h5i.get_ref": "h5py.h5i.get_ref",
        "h5py.h5i.get_type": "h5py.h5i.get_type",
        "h5py.h5i.inc_ref": "h5py.h5i.inc_ref",
        "h5py.h5i.wrap_identifier": "h5py.h5i.wrap_identifier",
        "h5py.h5l.LinkInfo": "h5py.h5l.LinkInfo",
        "h5py.h5l.LinkProxy": "h5py.h5l.LinkProxy",
        "h5py.h5o.ObjInfo": "h5py.h5o.ObjInfo",
        "h5py.h5o.copy": "h5py.h5o.copy",
        "h5py.h5o.exists_by_name": "h5py.h5o.exists_by_name",
        "h5py.h5o.get_comment": "h5py.h5o.get_comment",
        "h5py.h5o.get_info": "h5py.h5o.get_info",
        "h5py.h5o.link": "h5py.h5o.link",
        "h5py.h5o.open": "h5py.h5o.open",
        "h5py.h5o.set_comment": "h5py.h5o.set_comment",
        "h5py.h5o.visit": "h5py.h5o.visit",
        "h5py.h5pl.append": "h5py.h5pl.append",
        "h5py.h5pl.get": "h5py.h5pl.get",
        "h5py.h5pl.insert": "h5py.h5pl.insert",
        "h5py.h5pl.prepend": "h5py.h5pl.prepend",
        "h5py.h5pl.remove": "h5py.h5pl.remove",
        "h5py.h5pl.replace": "h5py.h5pl.replace",
        "h5py.h5pl.size": "h5py.h5pl.size",
        "h5py.h5py_warnings.H5pyWarning": "h5py.h5py_warnings.H5pyWarning",
        "h5py.h5r.create": "h5py.h5r.create",
        "h5py.h5r.dereference": "h5py.h5r.dereference",
        "h5py.h5r.get_name": "h5py.h5r.get_name",
        "h5py.h5r.get_obj_type": "h5py.h5r.get_obj_type",
        "h5py.h5r.get_region": "h5py.h5r.get_region",
        "h5py.h5s.SpaceID": "h5py.h5s.SpaceID",
        "h5py.h5s.create": "h5py.h5s.create",
        "h5py.h5s.create_simple": "h5py.h5s.create_simple",
        "h5py.h5s.decode": "h5py.h5s.decode",
        "h5py.h5t.TypeArrayID": "h5py.h5t.TypeArrayID",
        "h5py.h5t.TypeAtomicID": "h5py.h5t.TypeAtomicID",
        "h5py.h5t.TypeBitfieldID": "h5py.h5t.TypeBitfieldID",
        "h5py.h5t.TypeCompositeID": "h5py.h5t.TypeCompositeID",
        "h5py.h5t.TypeCompoundID": "h5py.h5t.TypeCompoundID",
        "h5py.h5t.TypeEnumID": "h5py.h5t.TypeEnumID",
        "h5py.h5t.TypeFloatID": "h5py.h5t.TypeFloatID",
        "h5py.h5t.TypeID": "h5py.h5t.TypeID",
        "h5py.h5t.TypeIntegerID": "h5py.h5t.TypeIntegerID",
        "h5py.h5t.TypeOpaqueID": "h5py.h5t.TypeOpaqueID",
        "h5py.h5t.TypeReferenceID": "h5py.h5t.TypeReferenceID",
        "h5py.h5t.TypeStringID": "h5py.h5t.TypeStringID",
        "h5py.h5t.TypeTimeID": "h5py.h5t.TypeTimeID",
        "h5py.h5t.TypeVlenID": "h5py.h5t.TypeVlenID",
        "h5py.h5t.array_create": "h5py.h5t.array_create",
        "h5py.h5t.convert": "h5py.h5t.convert",
        "h5py.h5t.create": "h5py.h5t.create",
        "h5py.h5t.decode": "h5py.h5t.decode",
        "h5py.h5t.enum_create": "h5py.h5t.enum_create",
        "h5py.h5t.find": "h5py.h5t.find",
        "h5py.h5t.opaque_dtype": "h5py.opaque_dtype",
        "h5py.h5t.open": "h5py.h5t.open",
        "h5py.h5t.py_create": "h5py.h5t.py_create",
        "h5py.h5t.special_dtype": "h5py.special_dtype",
        "h5py.h5t.string_dtype": "h5py.string_dtype",
        "h5py.h5t.typewrap": "h5py.h5t.typewrap",
        "h5py.h5t.vlen_create": "h5py.h5t.vlen_create",
        "h5py.h5t.vlen_dtype": "h5py.vlen_dtype",
        "h5py._hl.base.is_hdf5": "h5py.is_hdf5",
        "h5py._hl.files.register_driver": "h5py.register_driver",
        "h5py._hl.files.registered_drivers": "h5py.registered_drivers",
        "h5py.run_tests": "h5py.run_tests",
        "h5py._hl.files.unregister_driver": "h5py.unregister_driver",
        "h5py.utils.check_numpy_read": "h5py.utils.check_numpy_read",
        "h5py.utils.check_numpy_write": "h5py.utils.check_numpy_write"
    },
    "pydantic": {
        "pydantic.functional_validators.AfterValidator": "pydantic.AfterValidator",
        "pydantic.aliases.AliasChoices": "pydantic.AliasChoices",
        "pydantic.aliases.AliasGenerator": "pydantic.AliasGenerator",
        "pydantic.aliases.AliasPath": "pydantic.AliasPath",
        "pydantic.types.AllowInfNan": "pydantic.AllowInfNan",
        "pydantic.types.AwareDatetime": "pydantic.AwareDatetime",
        "pydantic.types.Base64Encoder": "pydantic.Base64Encoder",
        "pydantic.deprecated.config.BaseConfig": "pydantic.BaseConfig",
        "pydantic.main.BaseModel": "pydantic.BaseModel",
        "pydantic.functional_validators.BeforeValidator": "pydantic.BeforeValidator",
        "pydantic.types.ByteSize": "pydantic.ByteSize",
        "pydantic.config.ConfigDict": "pydantic.dataclasses.ConfigDict",
        "pydantic.types.Discriminator": "pydantic.Discriminator",
        "pydantic.networks.EmailStr": "pydantic.EmailStr",
        "pydantic.types.EncodedBytes": "pydantic.EncodedBytes",
        "pydantic.types.EncodedStr": "pydantic.EncodedStr",
        "pydantic.types.EncoderProtocol": "pydantic.EncoderProtocol",
        "pydantic.deprecated.config.Extra": "pydantic.Extra",
        "pydantic.types.FailFast": "pydantic.FailFast",
        "pydantic.fields.Field": "pydantic.dataclasses.Field",
        "pydantic.types.FutureDate": "pydantic.FutureDate",
        "pydantic.types.FutureDatetime": "pydantic.FutureDatetime",
        "pydantic._internal._generate_schema.GenerateSchema": "pydantic.GenerateSchema",
        "pydantic.annotated_handlers.GetCoreSchemaHandler": "pydantic.GetCoreSchemaHandler",
        "pydantic.annotated_handlers.GetJsonSchemaHandler": "pydantic.GetJsonSchemaHandler",
        "pydantic.types.GetPydanticSchema": "pydantic.GetPydanticSchema",
        "pydantic.networks.IPvAnyAddress": "pydantic.IPvAnyAddress",
        "pydantic.networks.IPvAnyInterface": "pydantic.IPvAnyInterface",
        "pydantic.networks.IPvAnyNetwork": "pydantic.IPvAnyNetwork",
        "pydantic.types.ImportString": "pydantic.ImportString",
        "pydantic.functional_validators.InstanceOf": "pydantic.InstanceOf",
        "pydantic.types.Json": "pydantic.Json",
        "pydantic.types.NaiveDatetime": "pydantic.NaiveDatetime",
        "pydantic.networks.NameEmail": "pydantic.NameEmail",
        "pydantic.types.Annotated": "pydantic.OnErrorOmit",
        "pydantic.types.PastDate": "pydantic.PastDate",
        "pydantic.types.PastDatetime": "pydantic.PastDatetime",
        "pydantic.types.PaymentCardNumber": "pydantic.PaymentCardNumber",
        "pydantic.functional_serializers.PlainSerializer": "pydantic.PlainSerializer",
        "pydantic.functional_validators.PlainValidator": "pydantic.PlainValidator",
        "pydantic.fields.PrivateAttr": "pydantic.dataclasses.PrivateAttr",
        "pydantic.warnings.PydanticDeprecatedSince20": "pydantic.PydanticDeprecatedSince20",
        "pydantic.warnings.PydanticDeprecatedSince26": "pydantic.PydanticDeprecatedSince26",
        "pydantic.warnings.PydanticDeprecatedSince29": "pydantic.PydanticDeprecatedSince29",
        "pydantic.warnings.PydanticDeprecationWarning": "pydantic.PydanticDeprecationWarning",
        "pydantic.warnings.PydanticExperimentalWarning": "pydantic.PydanticExperimentalWarning",
        "pydantic.errors.PydanticImportError": "pydantic.PydanticImportError",
        "pydantic.errors.PydanticInvalidForJsonSchema": "pydantic.PydanticInvalidForJsonSchema",
        "pydantic.errors.PydanticSchemaGenerationError": "pydantic.PydanticSchemaGenerationError",
        "pydantic.errors.PydanticUndefinedAnnotation": "pydantic.PydanticUndefinedAnnotation",
        "pydantic.errors.PydanticUserError": "pydantic.dataclasses.PydanticUserError",
        "pydantic.root_model.RootModel": "pydantic.RootModel",
        "pydantic.types.Secret": "pydantic.Secret",
        "pydantic.types.SecretBytes": "pydantic.SecretBytes",
        "pydantic.types.SecretStr": "pydantic.SecretStr",
        "pydantic.functional_serializers.SerializeAsAny": "pydantic.SerializeAsAny",
        "pydantic.functional_validators.SkipValidation": "pydantic.SkipValidation",
        "pydantic.types.Strict": "pydantic.Strict",
        "pydantic.types.StringConstraints": "pydantic.StringConstraints",
        "pydantic.types.Tag": "pydantic.Tag",
        "pydantic.type_adapter.TypeAdapter": "pydantic.TypeAdapter",
        "pydantic.networks.UrlConstraints": "pydantic.UrlConstraints",
        "pydantic.json_schema.WithJsonSchema": "pydantic.WithJsonSchema",
        "pydantic.functional_serializers.WrapSerializer": "pydantic.WrapSerializer",
        "pydantic.functional_validators.WrapValidator": "pydantic.WrapValidator",
        "pydantic.fields.computed_field": "pydantic.computed_field",
        "pydantic.types.conbytes": "pydantic.conbytes",
        "pydantic.types.condate": "pydantic.condate",
        "pydantic.types.condecimal": "pydantic.condecimal",
        "pydantic.types.confloat": "pydantic.confloat",
        "pydantic.types.confrozenset": "pydantic.confrozenset",
        "pydantic.types.conint": "pydantic.conint",
        "pydantic.types.conlist": "pydantic.conlist",
        "pydantic.types.conset": "pydantic.conset",
        "pydantic.types.constr": "pydantic.constr",
        "pydantic.main.create_model": "pydantic.create_model",
        "pydantic.fields.FieldInfo": "pydantic.dataclasses.FieldInfo",
        "pydantic.dataclasses.dataclass": "pydantic.dataclasses.dataclass",
        "pydantic._migration.getattr_migration": "pydantic.dataclasses.getattr_migration",
        "pydantic.dataclasses.is_pydantic_dataclass": "pydantic.dataclasses.is_pydantic_dataclass",
        "pydantic.dataclasses.rebuild_dataclass": "pydantic.dataclasses.rebuild_dataclass",
        "pydantic.functional_serializers.field_serializer": "pydantic.field_serializer",
        "pydantic.functional_validators.field_validator": "pydantic.field_validator",
        "pydantic.functional_serializers.model_serializer": "pydantic.model_serializer",
        "pydantic.functional_validators.model_validator": "pydantic.model_validator",
        "pydantic.deprecated.tools.parse_obj_as": "pydantic.parse_obj_as",
        "pydantic.deprecated.class_validators.root_validator": "pydantic.root_validator",
        "pydantic.deprecated.tools.schema_json_of": "pydantic.schema_json_of",
        "pydantic.deprecated.tools.schema_of": "pydantic.schema_of",
        "pydantic.validate_call_decorator.validate_call": "pydantic.validate_call",
        "pydantic.networks.validate_email": "pydantic.validate_email",
        "pydantic.deprecated.class_validators.validator": "pydantic.validator",
        "pydantic.config.with_config": "pydantic.with_config"
    },
    "tensorflow": {
        "tensorflow.python.ops.gradients_util.AggregationMethod": "tensorflow.AggregationMethod",
        "tensorflow.python.ops.control_flow_assert.Assert": "tensorflow.Assert",
        "tensorflow.python.ops.critical_section_ops.CriticalSection": "tensorflow.CriticalSection",
        "tensorflow.python.framework.dtypes.DType": "tensorflow.DType",
        "tensorflow.python.framework.device_spec.DeviceSpecV2": "tensorflow.DeviceSpec",
        "tensorflow.python.eager.backprop.GradientTape": "tensorflow.GradientTape",
        "tensorflow.python.framework.ops.Graph": "tensorflow.Graph",
        "tensorflow.python.framework.indexed_slices.IndexedSlices": "tensorflow.IndexedSlices",
        "tensorflow.python.framework.indexed_slices.IndexedSlicesSpec": "tensorflow.IndexedSlicesSpec",
        "tensorflow.python.module.module.Module": "tensorflow.Module",
        "tensorflow.python.framework.ops.Operation": "tensorflow.Operation",
        "tensorflow.python.data.ops.optional_ops.OptionalSpec": "tensorflow.OptionalSpec",
        "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor": "tensorflow.RaggedTensor",
        "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensorSpec": "tensorflow.RaggedTensorSpec",
        "tensorflow.python.framework.ops.RegisterGradient": "tensorflow.RegisterGradient",
        "tensorflow.python.framework.sparse_tensor.SparseTensor": "tensorflow.SparseTensor",
        "tensorflow.python.framework.sparse_tensor.SparseTensorSpec": "tensorflow.SparseTensorSpec",
        "tensorflow.python.framework.tensor.Tensor": "tensorflow.Tensor",
        "tensorflow.python.ops.tensor_array_ops.TensorArray": "tensorflow.TensorArray",
        "tensorflow.python.ops.tensor_array_ops.TensorArraySpec": "tensorflow.TensorArraySpec",
        "tensorflow.python.framework.tensor_shape.TensorShape": "tensorflow.TensorShape",
        "tensorflow.python.framework.tensor.TensorSpec": "tensorflow.TensorSpec",
        "tensorflow.python.framework.type_spec.TypeSpec": "tensorflow.TypeSpec",
        "tensorflow.python.ops.unconnected_gradients.UnconnectedGradients": "tensorflow.UnconnectedGradients",
        "tensorflow.python.ops.variables.Variable": "tensorflow.Variable",
        "tensorflow.python.ops.variables.VariableAggregationV2": "tensorflow.VariableAggregation",
        "tensorflow.python.ops.variables.VariableSynchronization": "tensorflow.VariableSynchronization",
        "tensorflow.python.ops.math_ops.abs": "tensorflow.math.abs",
        "tensorflow.python.ops.math_ops.acos": "tensorflow.math.acos",
        "tensorflow.python.ops.gen_math_ops.acosh": "tensorflow.math.acosh",
        "tensorflow.python.ops.math_ops.add": "tensorflow.math.add",
        "tensorflow.python.ops.math_ops.add_n": "tensorflow.math.add_n",
        "tensorflow.python.ops.gen_nn_ops.approx_top_k": "tensorflow.approx_top_k",
        "tensorflow.python.ops.math_ops.argmax_v2": "tensorflow.math.argmax",
        "tensorflow.python.ops.math_ops.argmin_v2": "tensorflow.math.argmin",
        "tensorflow.python.ops.sort_ops.argsort": "tensorflow.argsort",
        "tensorflow.python.framework.dtypes.as_dtype": "tensorflow.as_dtype",
        "tensorflow.python.ops.gen_string_ops.as_string": "tensorflow.as_string",
        "tensorflow.python.ops.gen_math_ops.asin": "tensorflow.math.asin",
        "tensorflow.python.ops.gen_math_ops.asinh": "tensorflow.math.asinh",
        "tensorflow.python.ops.check_ops.assert_equal_v2": "tensorflow.assert_equal",
        "tensorflow.python.ops.check_ops.assert_greater_v2": "tensorflow.assert_greater",
        "tensorflow.python.ops.check_ops.assert_less_v2": "tensorflow.assert_less",
        "tensorflow.python.ops.check_ops.assert_rank_v2": "tensorflow.assert_rank",
        "tensorflow.python.ops.gen_math_ops.atan": "tensorflow.math.atan",
        "tensorflow.python.ops.gen_math_ops.atan2": "tensorflow.math.atan2",
        "tensorflow.python.ops.gen_math_ops.atanh": "tensorflow.math.atanh",
        "tensorflow.python.ops.array_ops.batch_to_space_v2": "tensorflow.batch_to_space",
        "tensorflow.python.ops.gen_array_ops.bitcast": "tensorflow.bitcast",
        "tensorflow.python.ops.array_ops.boolean_mask_v2": "tensorflow.boolean_mask",
        "tensorflow.python.ops.array_ops.broadcast_dynamic_shape": "tensorflow.broadcast_dynamic_shape",
        "tensorflow.python.ops.array_ops.broadcast_static_shape": "tensorflow.broadcast_static_shape",
        "tensorflow.python.ops.gen_array_ops.broadcast_to": "tensorflow.broadcast_to",
        "tensorflow.python.ops.control_flow_case.case_v2": "tensorflow.case",
        "tensorflow.python.ops.math_ops.cast": "tensorflow.cast",
        "tensorflow.python.ops.clip_ops.clip_by_global_norm": "tensorflow.clip_by_global_norm",
        "tensorflow.python.ops.clip_ops.clip_by_norm": "tensorflow.clip_by_norm",
        "tensorflow.python.ops.clip_ops.clip_by_value": "tensorflow.clip_by_value",
        "tensorflow.python.ops.math_ops.complex": "tensorflow.complex",
        "tensorflow.python.ops.array_ops.concat": "tensorflow.concat",
        "tensorflow.python.ops.cond.cond_for_tf_v2": "tensorflow.cond",
        "tensorflow.python.framework.constant_op.constant": "tensorflow.constant",
        "tensorflow.python.ops.init_ops_v2.Constant": "tensorflow.constant_initializer",
        "tensorflow.python.framework.ops.control_dependencies": "tensorflow.control_dependencies",
        "tensorflow.python.ops.gen_nn_ops.conv": "tensorflow.conv",
        "tensorflow.python.ops.gen_nn_ops.conv2d_backprop_filter_v2": "tensorflow.conv2d_backprop_filter_v2",
        "tensorflow.python.ops.gen_nn_ops.conv2d_backprop_input_v2": "tensorflow.conv2d_backprop_input_v2",
        "tensorflow.python.framework.tensor_conversion.convert_to_tensor_v2_with_dispatch": "tensorflow.convert_to_tensor",
        "tensorflow.python.ops.gen_math_ops.cos": "tensorflow.math.cos",
        "tensorflow.python.ops.gen_math_ops.cosh": "tensorflow.math.cosh",
        "tensorflow.python.ops.math_ops.cumsum": "tensorflow.math.cumsum",
        "tensorflow.python.ops.custom_gradient.custom_gradient": "tensorflow.custom_gradient",
        "tensorflow.python.framework.ops.device_v2": "tensorflow.device",
        "tensorflow.python.ops.math_ops.divide": "tensorflow.math.divide",
        "tensorflow.python.ops.gen_data_flow_ops.dynamic_partition": "tensorflow.dynamic_partition",
        "tensorflow.python.ops.gen_data_flow_ops.dynamic_stitch": "tensorflow.dynamic_stitch",
        "tensorflow.python.ops.array_ops.edit_distance": "tensorflow.edit_distance",
        "tensorflow.python.ops.linalg_ops.eig": "tensorflow.linalg.eig",
        "tensorflow.python.ops.linalg_ops.eigvals": "tensorflow.linalg.eigvals",
        "tensorflow.python.ops.special_math_ops.einsum": "tensorflow.linalg.einsum",
        "tensorflow.python.ops.check_ops.ensure_shape": "tensorflow.ensure_shape",
        "tensorflow.python.ops.math_ops.equal": "tensorflow.math.equal",
        "tensorflow.python.eager.context.executing_eagerly": "tensorflow.executing_eagerly",
        "tensorflow.python.ops.math_ops.exp": "tensorflow.math.exp",
        "tensorflow.python.ops.array_ops.expand_dims_v2": "tensorflow.expand_dims",
        "tensorflow.python.ops.gen_array_ops.extract_volume_patches": "tensorflow.extract_volume_patches",
        "tensorflow.python.ops.linalg_ops.eye": "tensorflow.linalg.eye",
        "tensorflow.python.ops.gen_spectral_ops.fftnd": "tensorflow.fftnd",
        "tensorflow.python.ops.array_ops.fill": "tensorflow.fill",
        "tensorflow.python.ops.array_ops.fingerprint": "tensorflow.fingerprint",
        "tensorflow.python.ops.math_ops.floor": "tensorflow.math.floor",
        "tensorflow.python.ops.functional_ops.foldl_v2": "tensorflow.foldl",
        "tensorflow.python.ops.functional_ops.foldr_v2": "tensorflow.foldr",
        "tensorflow.python.eager.polymorphic_function.polymorphic_function.function": "tensorflow.function",
        "tensorflow.python.ops.array_ops.gather_v2": "tensorflow.gather",
        "tensorflow.python.ops.array_ops.gather_nd_v2": "tensorflow.gather_nd",
        "tensorflow.python.framework.ops.get_current_name_scope": "tensorflow.get_current_name_scope",
        "tensorflow.python.platform.tf_logging.get_logger": "tensorflow.get_logger",
        "tensorflow.python.framework.tensor_util.constant_value": "tensorflow.get_static_value",
        "tensorflow.python.ops.custom_gradient.grad_pass_through": "tensorflow.grad_pass_through",
        "tensorflow.python.ops.gradients_impl.gradients_v2": "tensorflow.gradients",
        "tensorflow.python.ops.gen_math_ops.greater": "tensorflow.math.greater",
        "tensorflow.python.ops.gen_math_ops.greater_equal": "tensorflow.math.greater_equal",
        "tensorflow.python.ops.control_flow_ops.group": "tensorflow.group",
        "tensorflow.python.ops.array_ops.guarantee_const": "tensorflow.guarantee_const",
        "tensorflow.python.ops.gradients_impl.HessiansV2": "tensorflow.hessians",
        "tensorflow.python.ops.histogram_ops.histogram_fixed_width": "tensorflow.histogram_fixed_width",
        "tensorflow.python.ops.histogram_ops.histogram_fixed_width_bins": "tensorflow.histogram_fixed_width_bins",
        "tensorflow.python.ops.array_ops.identity": "tensorflow.identity",
        "tensorflow.python.ops.gen_array_ops.identity_n": "tensorflow.identity_n",
        "tensorflow.python.ops.gen_spectral_ops.ifftnd": "tensorflow.ifftnd",
        "tensorflow.python.framework.importer.import_graph_def": "tensorflow.import_graph_def",
        "tensorflow.python.framework.ops.init_scope": "tensorflow.init_scope",
        "tensorflow.python.framework.ops.inside_function": "tensorflow.inside_function",
        "tensorflow.python.ops.gen_spectral_ops.irfftnd": "tensorflow.irfftnd",
        "tensorflow.python.framework.ops.is_symbolic_tensor": "tensorflow.is_symbolic_tensor",
        "tensorflow.python.framework.tensor_util.is_tf_type": "tensorflow.is_tensor",
        "tensorflow.python.ops.gen_math_ops.less": "tensorflow.math.less",
        "tensorflow.python.ops.gen_math_ops.less_equal": "tensorflow.math.less_equal",
        "tensorflow.python.ops.math_ops.linspace_nd": "tensorflow.linspace",
        "tensorflow.python.framework.load_library.load_library": "tensorflow.load_library",
        "tensorflow.python.framework.load_library.load_op_library": "tensorflow.load_op_library",
        "tensorflow.python.ops.gen_math_ops.logical_and": "tensorflow.math.logical_and",
        "tensorflow.python.ops.gen_math_ops.logical_not": "tensorflow.math.logical_not",
        "tensorflow.python.ops.gen_math_ops.logical_or": "tensorflow.math.logical_or",
        "tensorflow.python.framework.tensor_util.MakeNdarray": "tensorflow.make_ndarray",
        "tensorflow.python.framework.tensor_util.make_tensor_proto": "tensorflow.make_tensor_proto",
        "tensorflow.python.ops.map_fn.map_fn_v2": "tensorflow.map_fn",
        "tensorflow.python.ops.math_ops.matmul": "tensorflow.linalg.matmul",
        "tensorflow.python.ops.gen_linalg_ops.matrix_square_root": "tensorflow.linalg.sqrtm",
        "tensorflow.python.ops.gen_math_ops.maximum": "tensorflow.math.maximum",
        "tensorflow.python.ops.array_ops.meshgrid": "tensorflow.meshgrid",
        "tensorflow.python.ops.gen_math_ops.minimum": "tensorflow.math.minimum",
        "tensorflow.python.ops.math_ops.multiply": "tensorflow.math.multiply",
        "tensorflow.python.framework.ops.name_scope_v2": "tensorflow.name_scope",
        "tensorflow.python.ops.gen_math_ops.neg": "tensorflow.math.negative",
        "tensorflow.python.framework.ops.no_gradient": "tensorflow.no_gradient",
        "tensorflow.python.ops.gen_control_flow_ops.no_op": "tensorflow.no_op",
        "tensorflow.python.ops.batch_ops.batch_function": "tensorflow.nondifferentiable_batch_function",
        "tensorflow.python.ops.linalg_ops.norm_v2": "tensorflow.linalg.norm",
        "tensorflow.python.ops.math_ops.not_equal": "tensorflow.math.not_equal",
        "tensorflow.python.ops.script_ops.numpy_function": "tensorflow.numpy_function",
        "tensorflow.python.ops.array_ops.one_hot": "tensorflow.one_hot",
        "tensorflow.python.ops.array_ops.ones": "tensorflow.ones",
        "tensorflow.python.ops.init_ops_v2.Ones": "tensorflow.ones_initializer",
        "tensorflow.python.ops.array_ops.ones_like_v2": "tensorflow.ones_like",
        "tensorflow.python.ops.array_ops.pad_v2": "tensorflow.pad",
        "tensorflow.python.ops.array_ops.parallel_stack": "tensorflow.parallel_stack",
        "tensorflow.python.ops.math_ops.pow": "tensorflow.math.pow",
        "tensorflow.python.ops.logging_ops.print_v2": "tensorflow.print",
        "tensorflow.python.ops.script_ops.eager_py_func": "tensorflow.py_function",
        "tensorflow.python.ops.gen_ragged_array_ops.ragged_fill_empty_rows": "tensorflow.ragged_fill_empty_rows",
        "tensorflow.python.ops.gen_ragged_array_ops.ragged_fill_empty_rows_grad": "tensorflow.ragged_fill_empty_rows_grad",
        "tensorflow.python.ops.gen_random_index_shuffle_ops.random_index_shuffle": "tensorflow.random_index_shuffle",
        "tensorflow.python.ops.init_ops_v2.RandomNormal": "tensorflow.random_normal_initializer",
        "tensorflow.python.ops.init_ops_v2.RandomUniform": "tensorflow.random_uniform_initializer",
        "tensorflow.python.ops.math_ops.range": "tensorflow.range",
        "tensorflow.python.ops.array_ops.rank": "tensorflow.rank",
        "tensorflow.python.ops.gen_math_ops.real_div": "tensorflow.realdiv",
        "tensorflow.python.ops.custom_gradient.recompute_grad": "tensorflow.recompute_grad",
        "tensorflow.python.ops.math_ops.reduce_all": "tensorflow.math.reduce_all",
        "tensorflow.python.ops.math_ops.reduce_any": "tensorflow.math.reduce_any",
        "tensorflow.python.ops.math_ops.reduce_logsumexp": "tensorflow.math.reduce_logsumexp",
        "tensorflow.python.ops.math_ops.reduce_max": "tensorflow.math.reduce_max",
        "tensorflow.python.ops.math_ops.reduce_mean": "tensorflow.math.reduce_mean",
        "tensorflow.python.ops.math_ops.reduce_min": "tensorflow.math.reduce_min",
        "tensorflow.python.ops.math_ops.reduce_prod": "tensorflow.math.reduce_prod",
        "tensorflow.python.ops.math_ops.reduce_sum": "tensorflow.math.reduce_sum",
        "tensorflow.python.framework.tensor_conversion_registry.register_tensor_conversion_function": "tensorflow.register_tensor_conversion_function",
        "tensorflow.python.ops.array_ops.repeat": "tensorflow.repeat",
        "tensorflow.python.ops.array_ops.required_space_to_batch_paddings": "tensorflow.required_space_to_batch_paddings",
        "tensorflow.python.ops.array_ops.reshape": "tensorflow.reshape",
        "tensorflow.python.ops.gen_array_ops.reverse_v2": "tensorflow.reverse",
        "tensorflow.python.ops.array_ops.reverse_sequence_v2": "tensorflow.reverse_sequence",
        "tensorflow.python.ops.gen_spectral_ops.rfftnd": "tensorflow.rfftnd",
        "tensorflow.python.ops.manip_ops.roll": "tensorflow.roll",
        "tensorflow.python.ops.math_ops.round": "tensorflow.math.round",
        "tensorflow.python.ops.math_ops.saturate_cast": "tensorflow.saturate_cast",
        "tensorflow.python.ops.math_ops.scalar_mul_v2": "tensorflow.math.scalar_mul",
        "tensorflow.python.ops.functional_ops.scan_v2": "tensorflow.scan",
        "tensorflow.python.ops.gen_array_ops.scatter_nd": "tensorflow.scatter_nd",
        "tensorflow.python.ops.array_ops.searchsorted": "tensorflow.searchsorted",
        "tensorflow.python.ops.array_ops.sequence_mask": "tensorflow.sequence_mask",
        "tensorflow.python.ops.array_ops.shape_v2": "tensorflow.shape",
        "tensorflow.python.ops.array_ops.shape_n": "tensorflow.shape_n",
        "tensorflow.python.ops.math_ops.sigmoid": "tensorflow.math.sigmoid",
        "tensorflow.python.ops.math_ops.sign": "tensorflow.math.sign",
        "tensorflow.python.ops.gen_math_ops.sin": "tensorflow.math.sin",
        "tensorflow.python.ops.gen_math_ops.sinh": "tensorflow.math.sinh",
        "tensorflow.python.ops.array_ops.size_v2": "tensorflow.size",
        "tensorflow.python.ops.array_ops.slice": "tensorflow.slice",
        "tensorflow.python.ops.sort_ops.sort": "tensorflow.sort",
        "tensorflow.python.ops.array_ops.space_to_batch_v2": "tensorflow.nn.space_to_batch",
        "tensorflow.python.ops.gen_array_ops.space_to_batch_nd": "tensorflow.space_to_batch_nd",
        "tensorflow.python.ops.array_ops.split": "tensorflow.split",
        "tensorflow.python.ops.math_ops.sqrt": "tensorflow.math.sqrt",
        "tensorflow.python.ops.gen_math_ops.square": "tensorflow.math.square",
        "tensorflow.python.ops.array_ops.squeeze_v2": "tensorflow.squeeze",
        "tensorflow.python.ops.array_ops_stack.stack": "tensorflow.stack",
        "tensorflow.python.ops.array_ops.stop_gradient": "tensorflow.stop_gradient",
        "tensorflow.python.ops.array_ops.strided_slice": "tensorflow.strided_slice",
        "tensorflow.python.ops.math_ops.subtract": "tensorflow.math.subtract",
        "tensorflow.python.ops.control_flow_switch_case.switch_case": "tensorflow.switch_case",
        "tensorflow.python.ops.gen_math_ops.tan": "tensorflow.math.tan",
        "tensorflow.python.ops.gen_math_ops.tanh": "tensorflow.math.tanh",
        "tensorflow.python.ops.gen_array_ops.tensor_scatter_add": "tensorflow.tensor_scatter_nd_add",
        "tensorflow.python.ops.gen_array_ops.tensor_scatter_max": "tensorflow.tensor_scatter_nd_max",
        "tensorflow.python.ops.gen_array_ops.tensor_scatter_min": "tensorflow.tensor_scatter_nd_min",
        "tensorflow.python.ops.gen_array_ops.tensor_scatter_sub": "tensorflow.tensor_scatter_nd_sub",
        "tensorflow.python.ops.array_ops.tensor_scatter_nd_update": "tensorflow.tensor_scatter_nd_update",
        "tensorflow.python.ops.math_ops.tensordot": "tensorflow.linalg.tensordot",
        "tensorflow.python.ops.gen_array_ops.tile": "tensorflow.tile",
        "tensorflow.python.ops.gen_logging_ops.timestamp": "tensorflow.timestamp",
        "tensorflow.python.ops.array_ops.transpose_v2": "tensorflow.transpose",
        "tensorflow.python.ops.math_ops.truediv": "tensorflow.math.truediv",
        "tensorflow.python.ops.gen_math_ops.truncate_div": "tensorflow.truncatediv",
        "tensorflow.python.ops.gen_math_ops.truncate_mod": "tensorflow.truncatemod",
        "tensorflow.python.ops.control_flow_ops.tuple_v2": "tensorflow.tuple",
        "tensorflow.python.framework.type_spec.type_spec_from_value": "tensorflow.type_spec_from_value",
        "tensorflow.python.ops.array_ops.unique": "tensorflow.unique",
        "tensorflow.python.ops.array_ops.unique_with_counts": "tensorflow.unique_with_counts",
        "tensorflow.python.ops.gen_array_ops.unravel_index": "tensorflow.unravel_index",
        "tensorflow.python.ops.array_ops_stack.unstack": "tensorflow.unstack",
        "tensorflow.python.ops.variable_scope.variable_creator_scope": "tensorflow.variable_creator_scope",
        "tensorflow.python.ops.parallel_for.control_flow_ops.vectorized_map": "tensorflow.vectorized_map",
        "tensorflow.python.ops.array_ops.where_v2": "tensorflow.where",
        "tensorflow.python.ops.while_loop.while_loop_v2": "tensorflow.while_loop",
        "tensorflow.python.ops.array_ops.zeros": "tensorflow.zeros",
        "tensorflow.python.ops.init_ops_v2.Zeros": "tensorflow.zeros_initializer",
        "tensorflow.python.ops.array_ops.zeros_like_v2": "tensorflow.zeros_like",
        "tensorflow.python.keras.layers.rnn_cell_wrapper_v2.DeviceWrapper": "tensorflow.nn.RNNCellDeviceWrapper",
        "tensorflow.python.keras.layers.rnn_cell_wrapper_v2.DropoutWrapper": "tensorflow.nn.RNNCellDropoutWrapper",
        "tensorflow.python.keras.layers.rnn_cell_wrapper_v2.ResidualWrapper": "tensorflow.nn.RNNCellResidualWrapper",
        "tensorflow.python.ops.candidate_sampling_ops.all_candidate_sampler": "tensorflow.nn.all_candidate_sampler",
        "tensorflow.python.ops.nn_ops.approx_max_k": "tensorflow.math.approx_max_k",
        "tensorflow.python.ops.nn_ops.approx_min_k": "tensorflow.math.approx_min_k",
        "tensorflow.python.ops.nn_ops.atrous_conv2d": "tensorflow.nn.atrous_conv2d",
        "tensorflow.python.ops.nn_ops.atrous_conv2d_transpose": "tensorflow.nn.atrous_conv2d_transpose",
        "tensorflow.python.ops.nn_ops.avg_pool_v2": "tensorflow.nn.avg_pool",
        "tensorflow.python.ops.nn_ops.avg_pool1d": "tensorflow.nn.avg_pool1d",
        "tensorflow.python.ops.nn_ops.avg_pool2d": "tensorflow.nn.avg_pool2d",
        "tensorflow.python.ops.nn_ops.avg_pool3d": "tensorflow.nn.avg_pool3d",
        "tensorflow.python.ops.nn_impl.batch_norm_with_global_normalization_v2": "tensorflow.nn.batch_norm_with_global_normalization",
        "tensorflow.python.ops.nn_impl.batch_normalization": "tensorflow.nn.batch_normalization",
        "tensorflow.python.ops.nn_ops.bias_add": "tensorflow.nn.bias_add",
        "tensorflow.python.ops.ctc_ops.collapse_repeated": "tensorflow.nn.collapse_repeated",
        "tensorflow.python.ops.candidate_sampling_ops.compute_accidental_hits": "tensorflow.nn.compute_accidental_hits",
        "tensorflow.python.ops.nn_impl_distribute.compute_average_loss": "tensorflow.nn.compute_average_loss",
        "tensorflow.python.ops.nn_ops.conv1d_v2": "tensorflow.nn.conv1d",
        "tensorflow.python.ops.nn_ops.conv1d_transpose": "tensorflow.nn.conv1d_transpose",
        "tensorflow.python.ops.nn_ops.conv2d_v2": "tensorflow.nn.conv2d",
        "tensorflow.python.ops.nn_ops.conv2d_transpose_v2": "tensorflow.nn.conv2d_transpose",
        "tensorflow.python.ops.nn_ops.conv3d_v2": "tensorflow.nn.conv3d",
        "tensorflow.python.ops.nn_ops.conv3d_transpose_v2": "tensorflow.nn.conv3d_transpose",
        "tensorflow.python.ops.nn_ops.conv_transpose": "tensorflow.nn.conv_transpose",
        "tensorflow.python.ops.nn_ops.convolution_v2": "tensorflow.nn.convolution",
        "tensorflow.python.ops.nn_ops.crelu_v2": "tensorflow.nn.crelu",
        "tensorflow.python.ops.ctc_ops.ctc_beam_search_decoder_v2": "tensorflow.nn.ctc_beam_search_decoder",
        "tensorflow.python.ops.ctc_ops.ctc_greedy_decoder": "tensorflow.nn.ctc_greedy_decoder",
        "tensorflow.python.ops.ctc_ops.ctc_loss_v3": "tensorflow.nn.ctc_loss",
        "tensorflow.python.ops.ctc_ops.ctc_unique_labels": "tensorflow.nn.ctc_unique_labels",
        "tensorflow.python.ops.array_ops.depth_to_space_v2": "tensorflow.nn.depth_to_space",
        "tensorflow.python.ops.nn_impl.depthwise_conv2d_v2": "tensorflow.nn.depthwise_conv2d",
        "tensorflow.python.ops.nn_ops.depthwise_conv2d_native_backprop_filter": "tensorflow.nn.depthwise_conv2d_backprop_filter",
        "tensorflow.python.ops.nn_ops.depthwise_conv2d_native_backprop_input": "tensorflow.nn.depthwise_conv2d_backprop_input",
        "tensorflow.python.ops.nn_ops.dilation2d_v2": "tensorflow.nn.dilation2d",
        "tensorflow.python.ops.nn_ops.dropout_v2": "tensorflow.nn.dropout",
        "tensorflow.python.ops.gen_nn_ops.elu": "tensorflow.nn.elu",
        "tensorflow.python.ops.embedding_ops.embedding_lookup_v2": "tensorflow.nn.embedding_lookup",
        "tensorflow.python.ops.embedding_ops.embedding_lookup_sparse_v2": "tensorflow.nn.embedding_lookup_sparse",
        "tensorflow.python.ops.nn_ops.erosion2d_v2": "tensorflow.nn.erosion2d",
        "tensorflow.python.ops.candidate_sampling_ops.fixed_unigram_candidate_sampler": "tensorflow.nn.fixed_unigram_candidate_sampler",
        "tensorflow.python.ops.nn_ops.fractional_avg_pool_v2": "tensorflow.nn.fractional_avg_pool",
        "tensorflow.python.ops.nn_ops.fractional_max_pool_v2": "tensorflow.nn.fractional_max_pool",
        "tensorflow.python.ops.nn_ops.gelu": "tensorflow.nn.gelu",
        "tensorflow.python.ops.nn_ops.in_top_k_v2": "tensorflow.math.in_top_k",
        "tensorflow.python.ops.nn_ops.isotonic_regression": "tensorflow.nn.isotonic_regression",
        "tensorflow.python.ops.gen_nn_ops.l2_loss": "tensorflow.nn.l2_loss",
        "tensorflow.python.ops.nn_impl.l2_normalize": "tensorflow.linalg.l2_normalize",
        "tensorflow.python.ops.nn_ops.leaky_relu": "tensorflow.nn.leaky_relu",
        "tensorflow.python.ops.candidate_sampling_ops.learned_unigram_candidate_sampler": "tensorflow.nn.learned_unigram_candidate_sampler",
        "tensorflow.python.ops.gen_nn_ops.lrn": "tensorflow.nn.lrn",
        "tensorflow.python.ops.nn_impl.log_poisson_loss": "tensorflow.nn.log_poisson_loss",
        "tensorflow.python.ops.nn_ops.log_softmax_v2": "tensorflow.math.log_softmax",
        "tensorflow.python.ops.nn_ops.max_pool_v2": "tensorflow.nn.max_pool",
        "tensorflow.python.ops.nn_ops.max_pool1d": "tensorflow.nn.max_pool1d",
        "tensorflow.python.ops.nn_ops.max_pool2d": "tensorflow.nn.max_pool2d",
        "tensorflow.python.ops.nn_ops.max_pool3d": "tensorflow.nn.max_pool3d",
        "tensorflow.python.ops.nn_ops.max_pool_with_argmax_v2": "tensorflow.nn.max_pool_with_argmax",
        "tensorflow.python.ops.nn_impl.moments_v2": "tensorflow.nn.moments",
        "tensorflow.python.ops.nn_impl.nce_loss_v2": "tensorflow.nn.nce_loss",
        "tensorflow.python.ops.nn_impl.normalize_moments": "tensorflow.nn.normalize_moments",
        "tensorflow.python.ops.nn_ops.pool_v2": "tensorflow.nn.pool",
        "tensorflow.python.ops.gen_nn_ops.relu": "tensorflow.nn.relu",
        "tensorflow.python.ops.nn_ops.relu6": "tensorflow.nn.relu6",
        "tensorflow.python.ops.embedding_ops.safe_embedding_lookup_sparse_v2": "tensorflow.nn.safe_embedding_lookup_sparse",
        "tensorflow.python.ops.nn_impl.sampled_softmax_loss_v2": "tensorflow.nn.sampled_softmax_loss",
        "tensorflow.python.ops.nn_impl_distribute.scale_regularization_loss": "tensorflow.nn.scale_regularization_loss",
        "tensorflow.python.ops.gen_nn_ops.selu": "tensorflow.nn.selu",
        "tensorflow.python.ops.nn_impl.separable_conv2d_v2": "tensorflow.nn.separable_conv2d",
        "tensorflow.python.ops.nn_impl.sigmoid_cross_entropy_with_logits_v2": "tensorflow.nn.sigmoid_cross_entropy_with_logits",
        "tensorflow.python.ops.nn_impl.swish": "tensorflow.nn.swish",
        "tensorflow.python.ops.nn_ops.softmax_v2": "tensorflow.math.softmax",
        "tensorflow.python.ops.nn_ops.softmax_cross_entropy_with_logits_v2": "tensorflow.nn.softmax_cross_entropy_with_logits",
        "tensorflow.python.ops.math_ops.softplus": "tensorflow.math.softplus",
        "tensorflow.python.ops.gen_nn_ops.softsign": "tensorflow.math.softsign",
        "tensorflow.python.ops.array_ops.space_to_depth_v2": "tensorflow.nn.space_to_depth",
        "tensorflow.python.ops.nn_ops.sparse_softmax_cross_entropy_with_logits_v2": "tensorflow.nn.sparse_softmax_cross_entropy_with_logits",
        "tensorflow.python.ops.nn_impl.sufficient_statistics_v2": "tensorflow.nn.sufficient_statistics",
        "tensorflow.python.ops.nn_ops.top_k": "tensorflow.math.top_k",
        "tensorflow.python.ops.nn_impl.weighted_cross_entropy_with_logits_v2": "tensorflow.nn.weighted_cross_entropy_with_logits",
        "tensorflow.python.ops.nn_impl.weighted_moments_v2": "tensorflow.nn.weighted_moments",
        "tensorflow.python.ops.nn_ops.with_space_to_batch": "tensorflow.nn.with_space_to_batch",
        "tensorflow.python.ops.nn_impl.zero_fraction": "tensorflow.math.zero_fraction",
        "tensorflow.python.ops.math_ops.accumulate_n": "tensorflow.math.accumulate_n",
        "tensorflow.python.ops.math_ops.angle": "tensorflow.math.angle",
        "tensorflow.python.ops.special_math_ops.bessel_i0": "tensorflow.math.bessel_i0",
        "tensorflow.python.ops.special_math_ops.bessel_i0e": "tensorflow.math.bessel_i0e",
        "tensorflow.python.ops.special_math_ops.bessel_i1": "tensorflow.math.bessel_i1",
        "tensorflow.python.ops.special_math_ops.bessel_i1e": "tensorflow.math.bessel_i1e",
        "tensorflow.python.ops.gen_math_ops.betainc": "tensorflow.math.betainc",
        "tensorflow.python.ops.bincount_ops.bincount": "tensorflow.math.bincount",
        "tensorflow.python.ops.math_ops.ceil": "tensorflow.math.ceil",
        "tensorflow.python.ops.confusion_matrix.confusion_matrix": "tensorflow.math.confusion_matrix",
        "tensorflow.python.ops.math_ops.conj": "tensorflow.math.conj",
        "tensorflow.python.ops.math_ops.count_nonzero_v2": "tensorflow.math.count_nonzero",
        "tensorflow.python.ops.math_ops.cumprod": "tensorflow.math.cumprod",
        "tensorflow.python.ops.math_ops.cumulative_logsumexp": "tensorflow.math.cumulative_logsumexp",
        "tensorflow.python.ops.gen_math_ops.digamma": "tensorflow.math.digamma",
        "tensorflow.python.ops.math_ops.div_no_nan": "tensorflow.math.divide_no_nan",
        "tensorflow.python.ops.gen_math_ops.erf": "tensorflow.math.erf",
        "tensorflow.python.ops.gen_math_ops.erfc": "tensorflow.math.erfc",
        "tensorflow.python.ops.math_ops.erfcinv": "tensorflow.math.erfcinv",
        "tensorflow.python.ops.math_ops.erfinv": "tensorflow.math.erfinv",
        "tensorflow.python.ops.gen_math_ops.expm1": "tensorflow.math.expm1",
        "tensorflow.python.ops.math_ops.floordiv": "tensorflow.math.floordiv",
        "tensorflow.python.ops.gen_math_ops.floor_mod": "tensorflow.math.mod",
        "tensorflow.python.ops.gen_math_ops.igamma": "tensorflow.math.igamma",
        "tensorflow.python.ops.gen_math_ops.igammac": "tensorflow.math.igammac",
        "tensorflow.python.ops.math_ops.imag": "tensorflow.math.imag",
        "tensorflow.python.ops.gen_array_ops.invert_permutation": "tensorflow.math.invert_permutation",
        "tensorflow.python.ops.gen_math_ops.is_finite": "tensorflow.math.is_finite",
        "tensorflow.python.ops.gen_math_ops.is_inf": "tensorflow.math.is_inf",
        "tensorflow.python.ops.gen_math_ops.is_nan": "tensorflow.math.is_nan",
        "tensorflow.python.ops.check_ops.is_non_decreasing": "tensorflow.math.is_non_decreasing",
        "tensorflow.python.ops.check_ops.is_strictly_increasing": "tensorflow.math.is_strictly_increasing",
        "tensorflow.python.ops.special_math_ops.lbeta": "tensorflow.math.lbeta",
        "tensorflow.python.ops.gen_math_ops.lgamma": "tensorflow.math.lgamma",
        "tensorflow.python.ops.gen_math_ops.log": "tensorflow.math.log",
        "tensorflow.python.ops.gen_math_ops.log1p": "tensorflow.math.log1p",
        "tensorflow.python.ops.math_ops.log_sigmoid": "tensorflow.math.log_sigmoid",
        "tensorflow.python.ops.math_ops.logical_xor": "tensorflow.math.logical_xor",
        "tensorflow.python.ops.math_ops.multiply_no_nan": "tensorflow.math.multiply_no_nan",
        "tensorflow.python.ops.math_ops.ndtri": "tensorflow.math.ndtri",
        "tensorflow.python.ops.gen_math_ops.next_after": "tensorflow.math.nextafter",
        "tensorflow.python.ops.gen_math_ops.polygamma": "tensorflow.math.polygamma",
        "tensorflow.python.ops.math_ops.polyval": "tensorflow.math.polyval",
        "tensorflow.python.ops.math_ops.real": "tensorflow.math.real",
        "tensorflow.python.ops.gen_math_ops.reciprocal": "tensorflow.math.reciprocal",
        "tensorflow.python.ops.math_ops.reciprocal_no_nan": "tensorflow.math.reciprocal_no_nan",
        "tensorflow.python.ops.math_ops.reduce_euclidean_norm": "tensorflow.math.reduce_euclidean_norm",
        "tensorflow.python.ops.math_ops.reduce_std": "tensorflow.math.reduce_std",
        "tensorflow.python.ops.math_ops.reduce_variance": "tensorflow.math.reduce_variance",
        "tensorflow.python.ops.gen_math_ops.rint": "tensorflow.math.rint",
        "tensorflow.python.ops.math_ops.rsqrt": "tensorflow.math.rsqrt",
        "tensorflow.python.ops.gen_math_ops.segment_max": "tensorflow.math.segment_max",
        "tensorflow.python.ops.gen_math_ops.segment_mean": "tensorflow.math.segment_mean",
        "tensorflow.python.ops.gen_math_ops.segment_min": "tensorflow.math.segment_min",
        "tensorflow.python.ops.gen_math_ops.segment_prod": "tensorflow.math.segment_prod",
        "tensorflow.python.ops.gen_math_ops.segment_sum": "tensorflow.math.segment_sum",
        "tensorflow.python.ops.math_ops.sobol_sample": "tensorflow.math.sobol_sample",
        "tensorflow.python.ops.gen_math_ops.squared_difference": "tensorflow.math.squared_difference",
        "tensorflow.python.ops.gen_math_ops.unsorted_segment_max": "tensorflow.math.unsorted_segment_max",
        "tensorflow.python.ops.math_ops.unsorted_segment_mean": "tensorflow.math.unsorted_segment_mean",
        "tensorflow.python.ops.gen_math_ops.unsorted_segment_min": "tensorflow.math.unsorted_segment_min",
        "tensorflow.python.ops.gen_math_ops.unsorted_segment_prod": "tensorflow.math.unsorted_segment_prod",
        "tensorflow.python.ops.math_ops.unsorted_segment_sqrt_n": "tensorflow.math.unsorted_segment_sqrt_n",
        "tensorflow.python.ops.gen_math_ops.unsorted_segment_sum": "tensorflow.math.unsorted_segment_sum",
        "tensorflow.python.ops.math_ops.xdivy": "tensorflow.math.xdivy",
        "tensorflow.python.ops.math_ops.xlog1py": "tensorflow.math.xlog1py",
        "tensorflow.python.ops.gen_math_ops.xlogy": "tensorflow.math.xlogy",
        "tensorflow.python.ops.gen_math_ops.zeta": "tensorflow.math.zeta",
        "tensorflow.python.ops.linalg.linear_operator.LinearOperator": "tensorflow.linalg.LinearOperator",
        "tensorflow.python.ops.linalg.linear_operator_adjoint.LinearOperatorAdjoint": "tensorflow.linalg.LinearOperatorAdjoint",
        "tensorflow.python.ops.linalg.linear_operator_block_diag.LinearOperatorBlockDiag": "tensorflow.linalg.LinearOperatorBlockDiag",
        "tensorflow.python.ops.linalg.linear_operator_block_lower_triangular.LinearOperatorBlockLowerTriangular": "tensorflow.linalg.LinearOperatorBlockLowerTriangular",
        "tensorflow.python.ops.linalg.linear_operator_circulant.LinearOperatorCirculant": "tensorflow.linalg.LinearOperatorCirculant",
        "tensorflow.python.ops.linalg.linear_operator_circulant.LinearOperatorCirculant2D": "tensorflow.linalg.LinearOperatorCirculant2D",
        "tensorflow.python.ops.linalg.linear_operator_circulant.LinearOperatorCirculant3D": "tensorflow.linalg.LinearOperatorCirculant3D",
        "tensorflow.python.ops.linalg.linear_operator_composition.LinearOperatorComposition": "tensorflow.linalg.LinearOperatorComposition",
        "tensorflow.python.ops.linalg.linear_operator_diag.LinearOperatorDiag": "tensorflow.linalg.LinearOperatorDiag",
        "tensorflow.python.ops.linalg.linear_operator_full_matrix.LinearOperatorFullMatrix": "tensorflow.linalg.LinearOperatorFullMatrix",
        "tensorflow.python.ops.linalg.linear_operator_householder.LinearOperatorHouseholder": "tensorflow.linalg.LinearOperatorHouseholder",
        "tensorflow.python.ops.linalg.linear_operator_identity.LinearOperatorIdentity": "tensorflow.linalg.LinearOperatorIdentity",
        "tensorflow.python.ops.linalg.linear_operator_inversion.LinearOperatorInversion": "tensorflow.linalg.LinearOperatorInversion",
        "tensorflow.python.ops.linalg.linear_operator_kronecker.LinearOperatorKronecker": "tensorflow.linalg.LinearOperatorKronecker",
        "tensorflow.python.ops.linalg.linear_operator_low_rank_update.LinearOperatorLowRankUpdate": "tensorflow.linalg.LinearOperatorLowRankUpdate",
        "tensorflow.python.ops.linalg.linear_operator_lower_triangular.LinearOperatorLowerTriangular": "tensorflow.linalg.LinearOperatorLowerTriangular",
        "tensorflow.python.ops.linalg.linear_operator_permutation.LinearOperatorPermutation": "tensorflow.linalg.LinearOperatorPermutation",
        "tensorflow.python.ops.linalg.linear_operator_identity.LinearOperatorScaledIdentity": "tensorflow.linalg.LinearOperatorScaledIdentity",
        "tensorflow.python.ops.linalg.linear_operator_toeplitz.LinearOperatorToeplitz": "tensorflow.linalg.LinearOperatorToeplitz",
        "tensorflow.python.ops.linalg.linear_operator_tridiag.LinearOperatorTridiag": "tensorflow.linalg.LinearOperatorTridiag",
        "tensorflow.python.ops.linalg.linear_operator_zeros.LinearOperatorZeros": "tensorflow.linalg.LinearOperatorZeros",
        "tensorflow.python.ops.linalg.linalg_impl.adjoint": "tensorflow.linalg.adjoint",
        "tensorflow.python.ops.gen_array_ops.matrix_band_part": "tensorflow.linalg.band_part",
        "tensorflow.python.ops.linalg.linalg_impl.banded_triangular_solve": "tensorflow.linalg.banded_triangular_solve",
        "tensorflow.python.ops.gen_linalg_ops.cholesky": "tensorflow.linalg.cholesky",
        "tensorflow.python.ops.linalg_ops.cholesky_solve": "tensorflow.linalg.cholesky_solve",
        "tensorflow.python.ops.gen_math_ops.cross": "tensorflow.linalg.cross",
        "tensorflow.python.ops.gen_linalg_ops.matrix_determinant": "tensorflow.linalg.det",
        "tensorflow.python.ops.array_ops.matrix_diag": "tensorflow.linalg.diag",
        "tensorflow.python.ops.array_ops.matrix_diag_part": "tensorflow.linalg.diag_part",
        "tensorflow.python.ops.linalg_ops.self_adjoint_eig": "tensorflow.linalg.eigh",
        "tensorflow.python.ops.linalg.linalg_impl.eigh_tridiagonal": "tensorflow.linalg.eigh_tridiagonal",
        "tensorflow.python.ops.linalg_ops.self_adjoint_eigvals": "tensorflow.linalg.eigvalsh",
        "tensorflow.python.ops.linalg.linalg_impl.matrix_exponential": "tensorflow.linalg.expm",
        "tensorflow.python.ops.clip_ops.global_norm": "tensorflow.linalg.global_norm",
        "tensorflow.python.ops.gen_linalg_ops.matrix_inverse": "tensorflow.linalg.inv",
        "tensorflow.python.ops.linalg.linalg_impl.logdet": "tensorflow.linalg.logdet",
        "tensorflow.python.ops.gen_linalg_ops.matrix_logarithm": "tensorflow.linalg.logm",
        "tensorflow.python.ops.linalg_ops.matrix_solve_ls": "tensorflow.linalg.lstsq",
        "tensorflow.python.ops.gen_linalg_ops.lu": "tensorflow.linalg.lu",
        "tensorflow.python.ops.linalg.linalg_impl.lu_matrix_inverse": "tensorflow.linalg.lu_matrix_inverse",
        "tensorflow.python.ops.linalg.linalg_impl.lu_reconstruct": "tensorflow.linalg.lu_reconstruct",
        "tensorflow.python.ops.linalg.linalg_impl.lu_solve": "tensorflow.linalg.lu_solve",
        "tensorflow.python.ops.linalg.linalg_impl.matrix_rank": "tensorflow.linalg.matrix_rank",
        "tensorflow.python.ops.array_ops.matrix_transpose": "tensorflow.linalg.matrix_transpose",
        "tensorflow.python.ops.math_ops.matvec": "tensorflow.linalg.matvec",
        "tensorflow.python.ops.nn_impl.normalize": "tensorflow.linalg.normalize",
        "tensorflow.python.ops.linalg.linalg_impl.pinv": "tensorflow.linalg.pinv",
        "tensorflow.python.ops.gen_linalg_ops.qr": "tensorflow.linalg.qr",
        "tensorflow.python.ops.array_ops.matrix_set_diag": "tensorflow.linalg.set_diag",
        "tensorflow.python.ops.gen_linalg_ops.log_matrix_determinant": "tensorflow.linalg.slogdet",
        "tensorflow.python.ops.gen_linalg_ops.matrix_solve": "tensorflow.linalg.solve",
        "tensorflow.python.ops.linalg_ops.svd": "tensorflow.linalg.svd",
        "tensorflow.python.ops.gen_array_ops.diag": "tensorflow.linalg.tensor_diag",
        "tensorflow.python.ops.array_ops.tensor_diag_part": "tensorflow.linalg.tensor_diag_part",
        "tensorflow.python.ops.math_ops.trace": "tensorflow.linalg.trace",
        "tensorflow.python.ops.linalg_ops.matrix_triangular_solve": "tensorflow.linalg.triangular_solve",
        "tensorflow.python.ops.linalg.linalg_impl.tridiagonal_matmul": "tensorflow.linalg.tridiagonal_matmul",
        "tensorflow.python.ops.linalg.linalg_impl.tridiagonal_solve": "tensorflow.linalg.tridiagonal_solve",
        "tensorflow.python.ops.image_ops_impl.ResizeMethod": "tensorflow.image.ResizeMethod",
        "tensorflow.python.ops.image_ops_impl.adjust_brightness": "tensorflow.image.adjust_brightness",
        "tensorflow.python.ops.image_ops_impl.adjust_contrast": "tensorflow.image.adjust_contrast",
        "tensorflow.python.ops.image_ops_impl.adjust_gamma": "tensorflow.image.adjust_gamma",
        "tensorflow.python.ops.image_ops_impl.adjust_hue": "tensorflow.image.adjust_hue",
        "tensorflow.python.ops.image_ops_impl.adjust_jpeg_quality": "tensorflow.image.adjust_jpeg_quality",
        "tensorflow.python.ops.image_ops_impl.adjust_saturation": "tensorflow.image.adjust_saturation",
        "tensorflow.python.ops.image_ops_impl.central_crop": "tensorflow.image.central_crop",
        "tensorflow.python.ops.image_ops_impl.combined_non_max_suppression": "tensorflow.image.combined_non_max_suppression",
        "tensorflow.python.ops.image_ops_impl.convert_image_dtype": "tensorflow.image.convert_image_dtype",
        "tensorflow.python.ops.image_ops_impl.crop_and_resize_v2": "tensorflow.image.crop_and_resize",
        "tensorflow.python.ops.image_ops_impl.crop_to_bounding_box": "tensorflow.image.crop_to_bounding_box",
        "tensorflow.python.ops.gen_image_ops.decode_and_crop_jpeg": "tensorflow.image.decode_and_crop_jpeg",
        "tensorflow.python.ops.gen_image_ops.decode_bmp": "tensorflow.image.decode_bmp",
        "tensorflow.python.ops.gen_image_ops.decode_gif": "tensorflow.image.decode_gif",
        "tensorflow.python.ops.image_ops_impl.decode_image": "tensorflow.image.decode_image",
        "tensorflow.python.ops.gen_image_ops.decode_jpeg": "tensorflow.image.decode_jpeg",
        "tensorflow.python.ops.gen_image_ops.decode_png": "tensorflow.image.decode_png",
        "tensorflow.python.ops.image_ops_impl.draw_bounding_boxes_v2": "tensorflow.image.draw_bounding_boxes",
        "tensorflow.python.ops.gen_image_ops.encode_jpeg": "tensorflow.image.encode_jpeg",
        "tensorflow.python.ops.image_ops_impl.encode_png": "tensorflow.image.encode_png",
        "tensorflow.python.ops.image_ops_impl.extract_glimpse_v2": "tensorflow.image.extract_glimpse",
        "tensorflow.python.ops.gen_image_ops.extract_jpeg_shape": "tensorflow.image.extract_jpeg_shape",
        "tensorflow.python.ops.array_ops.extract_image_patches_v2": "tensorflow.image.extract_patches",
        "tensorflow.python.ops.image_ops_impl.flip_left_right": "tensorflow.image.flip_left_right",
        "tensorflow.python.ops.image_ops_impl.flip_up_down": "tensorflow.image.flip_up_down",
        "tensorflow.python.ops.image_ops_impl.generate_bounding_box_proposals": "tensorflow.image.generate_bounding_box_proposals",
        "tensorflow.python.ops.image_ops_impl.grayscale_to_rgb": "tensorflow.image.grayscale_to_rgb",
        "tensorflow.python.ops.gen_image_ops.hsv_to_rgb": "tensorflow.image.hsv_to_rgb",
        "tensorflow.python.ops.image_ops_impl.image_gradients": "tensorflow.image.image_gradients",
        "tensorflow.python.ops.image_ops_impl.is_jpeg": "tensorflow.image.is_jpeg",
        "tensorflow.python.ops.image_ops_impl.non_max_suppression": "tensorflow.image.non_max_suppression",
        "tensorflow.python.ops.image_ops_impl.non_max_suppression_with_overlaps": "tensorflow.image.non_max_suppression_overlaps",
        "tensorflow.python.ops.image_ops_impl.non_max_suppression_padded": "tensorflow.image.non_max_suppression_padded",
        "tensorflow.python.ops.image_ops_impl.non_max_suppression_with_scores": "tensorflow.image.non_max_suppression_with_scores",
        "tensorflow.python.ops.image_ops_impl.pad_to_bounding_box": "tensorflow.image.pad_to_bounding_box",
        "tensorflow.python.ops.image_ops_impl.per_image_standardization": "tensorflow.image.per_image_standardization",
        "tensorflow.python.ops.image_ops_impl.psnr": "tensorflow.image.psnr",
        "tensorflow.python.ops.image_ops_impl.random_brightness": "tensorflow.image.random_brightness",
        "tensorflow.python.ops.image_ops_impl.random_contrast": "tensorflow.image.random_contrast",
        "tensorflow.python.ops.random_crop_ops.random_crop": "tensorflow.image.random_crop",
        "tensorflow.python.ops.image_ops_impl.random_flip_left_right": "tensorflow.image.random_flip_left_right",
        "tensorflow.python.ops.image_ops_impl.random_flip_up_down": "tensorflow.image.random_flip_up_down",
        "tensorflow.python.ops.image_ops_impl.random_hue": "tensorflow.image.random_hue",
        "tensorflow.python.ops.image_ops_impl.random_jpeg_quality": "tensorflow.image.random_jpeg_quality",
        "tensorflow.python.ops.image_ops_impl.random_saturation": "tensorflow.image.random_saturation",
        "tensorflow.python.ops.image_ops_impl.resize_images_v2": "tensorflow.image.resize",
        "tensorflow.python.ops.image_ops_impl.resize_image_with_crop_or_pad": "tensorflow.image.resize_with_crop_or_pad",
        "tensorflow.python.ops.image_ops_impl.resize_image_with_pad_v2": "tensorflow.image.resize_with_pad",
        "tensorflow.python.ops.image_ops_impl.rgb_to_grayscale": "tensorflow.image.rgb_to_grayscale",
        "tensorflow.python.ops.gen_image_ops.rgb_to_hsv": "tensorflow.image.rgb_to_hsv",
        "tensorflow.python.ops.image_ops_impl.rgb_to_yiq": "tensorflow.image.rgb_to_yiq",
        "tensorflow.python.ops.image_ops_impl.rgb_to_yuv": "tensorflow.image.rgb_to_yuv",
        "tensorflow.python.ops.image_ops_impl.rot90": "tensorflow.image.rot90",
        "tensorflow.python.ops.image_ops_impl.sample_distorted_bounding_box_v2": "tensorflow.image.sample_distorted_bounding_box",
        "tensorflow.python.ops.image_ops_impl.sobel_edges": "tensorflow.image.sobel_edges",
        "tensorflow.python.ops.image_ops_impl.ssim": "tensorflow.image.ssim",
        "tensorflow.python.ops.image_ops_impl.ssim_multiscale": "tensorflow.image.ssim_multiscale",
        "tensorflow.python.ops.image_ops_impl.stateless_random_brightness": "tensorflow.image.stateless_random_brightness",
        "tensorflow.python.ops.image_ops_impl.stateless_random_contrast": "tensorflow.image.stateless_random_contrast",
        "tensorflow.python.ops.random_crop_ops.stateless_random_crop": "tensorflow.image.stateless_random_crop",
        "tensorflow.python.ops.image_ops_impl.stateless_random_flip_left_right": "tensorflow.image.stateless_random_flip_left_right",
        "tensorflow.python.ops.image_ops_impl.stateless_random_flip_up_down": "tensorflow.image.stateless_random_flip_up_down",
        "tensorflow.python.ops.image_ops_impl.stateless_random_hue": "tensorflow.image.stateless_random_hue",
        "tensorflow.python.ops.image_ops_impl.stateless_random_jpeg_quality": "tensorflow.image.stateless_random_jpeg_quality",
        "tensorflow.python.ops.image_ops_impl.stateless_random_saturation": "tensorflow.image.stateless_random_saturation",
        "tensorflow.python.ops.image_ops_impl.stateless_sample_distorted_bounding_box": "tensorflow.image.stateless_sample_distorted_bounding_box",
        "tensorflow.python.ops.image_ops_impl.total_variation": "tensorflow.image.total_variation",
        "tensorflow.python.ops.image_ops_impl.transpose": "tensorflow.image.transpose",
        "tensorflow.python.ops.image_ops_impl.yiq_to_rgb": "tensorflow.image.yiq_to_rgb",
        "tensorflow.python.ops.image_ops_impl.yuv_to_rgb": "tensorflow.image.yuv_to_rgb",
        "tensorflow.python.data.ops.dataset_ops.DatasetV2": "tensorflow.data.Dataset",
        "tensorflow.python.data.ops.dataset_ops.DatasetSpec": "tensorflow.data.DatasetSpec",
        "tensorflow.python.data.ops.readers.FixedLengthRecordDatasetV2": "tensorflow.data.FixedLengthRecordDataset",
        "tensorflow.python.data.ops.iterator_ops.IteratorBase": "tensorflow.data.Iterator",
        "tensorflow.python.data.ops.iterator_ops.IteratorSpec": "tensorflow.data.IteratorSpec",
        "tensorflow.python.data.ops.dataset_ops.NumpyIterator": "tensorflow.data.NumpyIterator",
        "tensorflow.python.data.ops.options.Options": "tensorflow.data.Options",
        "tensorflow.python.data.ops.readers.TFRecordDatasetV2": "tensorflow.data.TFRecordDataset",
        "tensorflow.python.data.ops.readers.TextLineDatasetV2": "tensorflow.data.TextLineDataset",
        "tensorflow.python.data.ops.options.ThreadingOptions": "tensorflow.data.ThreadingOptions",
        "tensorflow.core.example.feature_pb2.BytesList": "tensorflow.train.BytesList",
        "tensorflow.python.checkpoint.checkpoint.Checkpoint": "tensorflow.train.Checkpoint",
        "tensorflow.python.checkpoint.checkpoint_management.CheckpointManager": "tensorflow.train.CheckpointManager",
        "tensorflow.python.checkpoint.checkpoint_options.CheckpointOptions": "tensorflow.train.CheckpointOptions",
        "tensorflow.python.checkpoint.checkpoint_view.CheckpointView": "tensorflow.train.CheckpointView",
        "tensorflow.core.protobuf.cluster_pb2.ClusterDef": "tensorflow.train.ClusterDef",
        "tensorflow.python.training.server_lib.ClusterSpec": "tensorflow.train.ClusterSpec",
        "tensorflow.python.training.coordinator.Coordinator": "tensorflow.train.Coordinator",
        "tensorflow.core.example.example_pb2.Example": "tensorflow.train.Example",
        "tensorflow.python.training.moving_averages.ExponentialMovingAverage": "tensorflow.train.ExponentialMovingAverage",
        "tensorflow.core.example.feature_pb2.Feature": "tensorflow.train.Feature",
        "tensorflow.core.example.feature_pb2.FeatureList": "tensorflow.train.FeatureList",
        "tensorflow.core.example.feature_pb2.FeatureLists": "tensorflow.train.FeatureLists",
        "tensorflow.core.example.feature_pb2.Features": "tensorflow.train.Features",
        "tensorflow.core.example.feature_pb2.FloatList": "tensorflow.train.FloatList",
        "tensorflow.core.example.feature_pb2.Int64List": "tensorflow.train.Int64List",
        "tensorflow.core.protobuf.cluster_pb2.JobDef": "tensorflow.train.JobDef",
        "tensorflow.core.example.example_pb2.SequenceExample": "tensorflow.train.SequenceExample",
        "tensorflow.core.protobuf.tensorflow_server_pb2.ServerDef": "tensorflow.train.ServerDef",
        "tensorflow.python.checkpoint.trackable_view.TrackableView": "tensorflow.train.TrackableView",
        "tensorflow.python.training.checkpoint_utils.checkpoints_iterator": "tensorflow.train.checkpoints_iterator",
        "tensorflow.python.checkpoint.checkpoint_management.get_checkpoint_state": "tensorflow.train.get_checkpoint_state",
        "tensorflow.python.checkpoint.checkpoint_management.latest_checkpoint": "tensorflow.train.latest_checkpoint",
        "tensorflow.python.training.checkpoint_utils.list_variables": "tensorflow.train.list_variables",
        "tensorflow.python.training.checkpoint_utils.load_checkpoint": "tensorflow.train.load_checkpoint",
        "tensorflow.python.training.checkpoint_utils.load_variable": "tensorflow.train.load_variable",
        "tensorflow.python.data.ops.prefetch_op._PrefetchDataset": "tensorflow.data.Dataset",
        "tensorflow.python.data.ops.batch_op._BatchDataset": "tensorflow.data.Dataset",
        "tensorflow.python.data.ops.map_op._MapDataset": "tensorflow.data.Dataset",
        "tensorflow.python.data.ops.filter_op._FilterDataset": "tensorflow.data.Dataset",
        "tensorflow.python.data.ops.repeat_op._RepeatDataset": "tensorflow.data.Dataset",
        "tensorflow.python.data.ops.take_op._TakeDataset": "tensorflow.data.Dataset",
        "tensorflow.python.data.ops.skip_op._SkipDataset": "tensorflow.data.Dataset",
        "tensorflow.python.data.ops.shuffle_op._ShuffleDataset": "tensorflow.data.Dataset"
    },
    "keras_tuner": {
        "keras_tuner.src.tuners.randomsearch.RandomSearch": "keras_tuner.RandomSearch"
    },
    "keras": {
        "keras.src.dtype_policies.dtype_policy.DTypePolicy": "keras.DTypePolicy",
        "keras.src.dtype_policies.dtype_policy.FloatDTypePolicy": "keras.FloatDTypePolicy",
        "keras.src.ops.function.Function": "keras.Function",
        "keras.src.initializers.initializer.Initializer": "keras.Initializer",
        "keras.src.layers.core.input_layer.Input": "keras.layers.Input",
        "keras.src.layers.input_spec.InputSpec": "keras.layers.InputSpec",
        "keras.src.backend.common.keras_tensor.KerasTensor": "keras.KerasTensor",
        "keras.src.layers.layer.Layer": "keras.layers.Layer",
        "keras.src.losses.loss.Loss": "keras.losses.Loss",
        "keras.src.metrics.metric.Metric": "keras.metrics.Metric",
        "keras.src.models.model.Model": "keras.models.Model",
        "keras.src.ops.operation.Operation": "keras.Operation",
        "keras.src.optimizers.optimizer.Optimizer": "keras.optimizers.Optimizer",
        "keras.src.quantizers.quantizers.Quantizer": "keras.Quantizer",
        "keras.src.regularizers.regularizers.Regularizer": "keras.Regularizer",
        "keras.src.models.sequential.Sequential": "keras.Sequential",
        "keras.src.backend.common.stateless_scope.StatelessScope": "keras.StatelessScope",
        "keras.src.backend.exports.Variable": "keras.Variable",
        "keras.src.backend.exports.device": "keras.device",
        "keras.src.backend.exports.name_scope": "keras.name_scope",
        "keras.src.version.version": "keras.version",
        "keras.src.models.cloning.clone_model": "keras.models.clone_model",
        "keras.src.saving.saving_api.load_model": "keras.models.load_model",
        "keras.src.models.model.model_from_json": "keras.models.model_from_json",
        "keras.src.saving.saving_api.save_model": "keras.models.save_model",
        "keras.src.layers.activations.activation.Activation": "keras.layers.Activation",
        "keras.src.layers.regularization.activity_regularization.ActivityRegularization": "keras.layers.ActivityRegularization",
        "keras.src.layers.merging.add.Add": "keras.layers.Add",
        "keras.src.layers.attention.additive_attention.AdditiveAttention": "keras.layers.AdditiveAttention",
        "keras.src.layers.regularization.alpha_dropout.AlphaDropout": "keras.layers.AlphaDropout",
        "keras.src.layers.attention.attention.Attention": "keras.layers.Attention",
        "keras.src.layers.merging.average.Average": "keras.layers.Average",
        "keras.src.layers.pooling.average_pooling1d.AveragePooling1D": "keras.layers.AvgPool1D",
        "keras.src.layers.pooling.average_pooling2d.AveragePooling2D": "keras.layers.AvgPool2D",
        "keras.src.layers.pooling.average_pooling3d.AveragePooling3D": "keras.layers.AvgPool3D",
        "keras.src.layers.normalization.batch_normalization.BatchNormalization": "keras.layers.BatchNormalization",
        "keras.src.layers.rnn.bidirectional.Bidirectional": "keras.layers.Bidirectional",
        "keras.src.layers.preprocessing.category_encoding.CategoryEncoding": "keras.layers.CategoryEncoding",
        "keras.src.layers.preprocessing.center_crop.CenterCrop": "keras.layers.CenterCrop",
        "keras.src.layers.merging.concatenate.Concatenate": "keras.layers.Concatenate",
        "keras.src.layers.convolutional.conv1d.Conv1D": "keras.layers.Convolution1D",
        "keras.src.layers.convolutional.conv1d_transpose.Conv1DTranspose": "keras.layers.Convolution1DTranspose",
        "keras.src.layers.convolutional.conv2d.Conv2D": "keras.layers.Convolution2D",
        "keras.src.layers.convolutional.conv2d_transpose.Conv2DTranspose": "keras.layers.Convolution2DTranspose",
        "keras.src.layers.convolutional.conv3d.Conv3D": "keras.layers.Convolution3D",
        "keras.src.layers.convolutional.conv3d_transpose.Conv3DTranspose": "keras.layers.Convolution3DTranspose",
        "keras.src.layers.rnn.conv_lstm1d.ConvLSTM1D": "keras.layers.ConvLSTM1D",
        "keras.src.layers.rnn.conv_lstm2d.ConvLSTM2D": "keras.layers.ConvLSTM2D",
        "keras.src.layers.rnn.conv_lstm3d.ConvLSTM3D": "keras.layers.ConvLSTM3D",
        "keras.src.layers.reshaping.cropping1d.Cropping1D": "keras.layers.Cropping1D",
        "keras.src.layers.reshaping.cropping2d.Cropping2D": "keras.layers.Cropping2D",
        "keras.src.layers.reshaping.cropping3d.Cropping3D": "keras.layers.Cropping3D",
        "keras.src.layers.core.dense.Dense": "keras.layers.Dense",
        "keras.src.layers.convolutional.depthwise_conv1d.DepthwiseConv1D": "keras.layers.DepthwiseConv1D",
        "keras.src.layers.convolutional.depthwise_conv2d.DepthwiseConv2D": "keras.layers.DepthwiseConv2D",
        "keras.src.layers.preprocessing.discretization.Discretization": "keras.layers.Discretization",
        "keras.src.layers.merging.dot.Dot": "keras.layers.Dot",
        "keras.src.layers.regularization.dropout.Dropout": "keras.layers.Dropout",
        "keras.src.layers.activations.elu.ELU": "keras.layers.ELU",
        "keras.src.layers.core.einsum_dense.EinsumDense": "keras.layers.EinsumDense",
        "keras.src.layers.core.embedding.Embedding": "keras.layers.Embedding",
        "keras.src.layers.reshaping.flatten.Flatten": "keras.layers.Flatten",
        "keras.src.utils.jax_layer.FlaxLayer": "keras.layers.FlaxLayer",
        "keras.src.layers.rnn.gru.GRU": "keras.layers.GRU",
        "keras.src.layers.rnn.gru.GRUCell": "keras.layers.GRUCell",
        "keras.src.layers.regularization.gaussian_dropout.GaussianDropout": "keras.layers.GaussianDropout",
        "keras.src.layers.regularization.gaussian_noise.GaussianNoise": "keras.layers.GaussianNoise",
        "keras.src.layers.pooling.global_average_pooling1d.GlobalAveragePooling1D": "keras.layers.GlobalAvgPool1D",
        "keras.src.layers.pooling.global_average_pooling2d.GlobalAveragePooling2D": "keras.layers.GlobalAvgPool2D",
        "keras.src.layers.pooling.global_average_pooling3d.GlobalAveragePooling3D": "keras.layers.GlobalAvgPool3D",
        "keras.src.layers.pooling.global_max_pooling1d.GlobalMaxPooling1D": "keras.layers.GlobalMaxPooling1D",
        "keras.src.layers.pooling.global_max_pooling2d.GlobalMaxPooling2D": "keras.layers.GlobalMaxPooling2D",
        "keras.src.layers.pooling.global_max_pooling3d.GlobalMaxPooling3D": "keras.layers.GlobalMaxPooling3D",
        "keras.src.layers.normalization.group_normalization.GroupNormalization": "keras.layers.GroupNormalization",
        "keras.src.layers.attention.grouped_query_attention.GroupedQueryAttention": "keras.layers.GroupQueryAttention",
        "keras.src.layers.preprocessing.hashed_crossing.HashedCrossing": "keras.layers.HashedCrossing",
        "keras.src.layers.preprocessing.hashing.Hashing": "keras.layers.Hashing",
        "keras.src.layers.core.identity.Identity": "keras.layers.Identity",
        "keras.src.layers.core.input_layer.InputLayer": "keras.layers.InputLayer",
        "keras.src.layers.preprocessing.integer_lookup.IntegerLookup": "keras.layers.IntegerLookup",
        "keras.src.utils.jax_layer.JaxLayer": "keras.layers.JaxLayer",
        "keras.src.layers.rnn.lstm.LSTM": "keras.layers.LSTM",
        "keras.src.layers.rnn.lstm.LSTMCell": "keras.layers.LSTMCell",
        "keras.src.layers.core.lambda_layer.Lambda": "keras.layers.Lambda",
        "keras.src.layers.normalization.layer_normalization.LayerNormalization": "keras.layers.LayerNormalization",
        "keras.src.layers.activations.leaky_relu.LeakyReLU": "keras.layers.LeakyReLU",
        "keras.src.layers.core.masking.Masking": "keras.layers.Masking",
        "keras.src.layers.pooling.max_pooling1d.MaxPooling1D": "keras.layers.MaxPooling1D",
        "keras.src.layers.pooling.max_pooling2d.MaxPooling2D": "keras.layers.MaxPooling2D",
        "keras.src.layers.pooling.max_pooling3d.MaxPooling3D": "keras.layers.MaxPooling3D",
        "keras.src.layers.merging.maximum.Maximum": "keras.layers.Maximum",
        "keras.src.layers.preprocessing.audio_preprocessing.MelSpectrogram": "keras.layers.MelSpectrogram",
        "keras.src.layers.merging.minimum.Minimum": "keras.layers.Minimum",
        "keras.src.layers.attention.multi_head_attention.MultiHeadAttention": "keras.layers.MultiHeadAttention",
        "keras.src.layers.merging.multiply.Multiply": "keras.layers.Multiply",
        "keras.src.layers.preprocessing.normalization.Normalization": "keras.layers.Normalization",
        "keras.src.layers.activations.prelu.PReLU": "keras.layers.PReLU",
        "keras.src.layers.reshaping.permute.Permute": "keras.layers.Permute",
        "keras.src.layers.rnn.rnn.RNN": "keras.layers.RNN",
        "keras.src.layers.preprocessing.random_brightness.RandomBrightness": "keras.layers.RandomBrightness",
        "keras.src.layers.preprocessing.random_contrast.RandomContrast": "keras.layers.RandomContrast",
        "keras.src.layers.preprocessing.random_crop.RandomCrop": "keras.layers.RandomCrop",
        "keras.src.layers.preprocessing.random_flip.RandomFlip": "keras.layers.RandomFlip",
        "keras.src.layers.preprocessing.random_rotation.RandomRotation": "keras.layers.RandomRotation",
        "keras.src.layers.preprocessing.random_translation.RandomTranslation": "keras.layers.RandomTranslation",
        "keras.src.layers.preprocessing.random_zoom.RandomZoom": "keras.layers.RandomZoom",
        "keras.src.layers.activations.relu.ReLU": "keras.layers.ReLU",
        "keras.src.layers.reshaping.repeat_vector.RepeatVector": "keras.layers.RepeatVector",
        "keras.src.layers.preprocessing.rescaling.Rescaling": "keras.layers.Rescaling",
        "keras.src.layers.reshaping.reshape.Reshape": "keras.layers.Reshape",
        "keras.src.layers.preprocessing.resizing.Resizing": "keras.layers.Resizing",
        "keras.src.layers.convolutional.separable_conv1d.SeparableConv1D": "keras.layers.SeparableConvolution1D",
        "keras.src.layers.convolutional.separable_conv2d.SeparableConv2D": "keras.layers.SeparableConvolution2D",
        "keras.src.layers.rnn.simple_rnn.SimpleRNN": "keras.layers.SimpleRNN",
        "keras.src.layers.rnn.simple_rnn.SimpleRNNCell": "keras.layers.SimpleRNNCell",
        "keras.src.layers.activations.softmax.Softmax": "keras.layers.Softmax",
        "keras.src.layers.regularization.spatial_dropout.SpatialDropout1D": "keras.layers.SpatialDropout1D",
        "keras.src.layers.regularization.spatial_dropout.SpatialDropout2D": "keras.layers.SpatialDropout2D",
        "keras.src.layers.regularization.spatial_dropout.SpatialDropout3D": "keras.layers.SpatialDropout3D",
        "keras.src.layers.normalization.spectral_normalization.SpectralNormalization": "keras.layers.SpectralNormalization",
        "keras.src.layers.rnn.stacked_rnn_cells.StackedRNNCells": "keras.layers.StackedRNNCells",
        "keras.src.layers.preprocessing.string_lookup.StringLookup": "keras.layers.StringLookup",
        "keras.src.layers.merging.subtract.Subtract": "keras.layers.Subtract",
        "keras.src.export.export_lib.TFSMLayer": "keras.layers.TFSMLayer",
        "keras.src.layers.preprocessing.text_vectorization.TextVectorization": "keras.layers.TextVectorization",
        "keras.src.layers.rnn.time_distributed.TimeDistributed": "keras.layers.TimeDistributed",
        "keras.src.utils.torch_utils.TorchModuleWrapper": "keras.layers.TorchModuleWrapper",
        "keras.src.layers.normalization.unit_normalization.UnitNormalization": "keras.layers.UnitNormalization",
        "keras.src.layers.reshaping.up_sampling1d.UpSampling1D": "keras.layers.UpSampling1D",
        "keras.src.layers.reshaping.up_sampling2d.UpSampling2D": "keras.layers.UpSampling2D",
        "keras.src.layers.reshaping.up_sampling3d.UpSampling3D": "keras.layers.UpSampling3D",
        "keras.src.layers.core.wrapper.Wrapper": "keras.layers.Wrapper",
        "keras.src.layers.reshaping.zero_padding1d.ZeroPadding1D": "keras.layers.ZeroPadding1D",
        "keras.src.layers.reshaping.zero_padding2d.ZeroPadding2D": "keras.layers.ZeroPadding2D",
        "keras.src.layers.reshaping.zero_padding3d.ZeroPadding3D": "keras.layers.ZeroPadding3D",
        "keras.src.layers.merging.add.add": "keras.layers.add",
        "keras.src.layers.merging.average.average": "keras.layers.average",
        "keras.src.layers.merging.concatenate.concatenate": "keras.layers.concatenate",
        "keras.src.layers.deserialize": "keras.layers.deserialize",
        "keras.src.layers.merging.dot.dot": "keras.layers.dot",
        "keras.src.layers.merging.maximum.maximum": "keras.layers.maximum",
        "keras.src.layers.merging.minimum.minimum": "keras.layers.minimum",
        "keras.src.layers.merging.multiply.multiply": "keras.layers.multiply",
        "keras.src.layers.serialize": "keras.layers.serialize",
        "keras.src.layers.merging.subtract.subtract": "keras.layers.subtract",
        "keras.src.optimizers.adadelta.Adadelta": "keras.optimizers.Adadelta",
        "keras.src.optimizers.adafactor.Adafactor": "keras.optimizers.Adafactor",
        "keras.src.optimizers.adagrad.Adagrad": "keras.optimizers.Adagrad",
        "keras.src.optimizers.adam.Adam": "keras.optimizers.Adam",
        "keras.src.optimizers.adamw.AdamW": "keras.optimizers.AdamW",
        "keras.src.optimizers.adamax.Adamax": "keras.optimizers.Adamax",
        "keras.src.optimizers.ftrl.Ftrl": "keras.optimizers.Ftrl",
        "keras.src.optimizers.lion.Lion": "keras.optimizers.Lion",
        "keras.src.optimizers.loss_scale_optimizer.LossScaleOptimizer": "keras.optimizers.LossScaleOptimizer",
        "keras.src.optimizers.nadam.Nadam": "keras.optimizers.Nadam",
        "keras.src.optimizers.rmsprop.RMSprop": "keras.optimizers.RMSprop",
        "keras.src.optimizers.sgd.SGD": "keras.optimizers.SGD",
        "keras.src.optimizers.deserialize": "keras.optimizers.deserialize",
        "keras.src.optimizers.get": "keras.optimizers.get",
        "keras.src.optimizers.serialize": "keras.optimizers.serialize",
        "keras.src.losses.losses.BinaryCrossentropy": "keras.losses.BinaryCrossentropy",
        "keras.src.losses.losses.BinaryFocalCrossentropy": "keras.losses.BinaryFocalCrossentropy",
        "keras.src.losses.losses.CTC": "keras.losses.CTC",
        "keras.src.losses.losses.CategoricalCrossentropy": "keras.losses.CategoricalCrossentropy",
        "keras.src.losses.losses.CategoricalFocalCrossentropy": "keras.losses.CategoricalFocalCrossentropy",
        "keras.src.losses.losses.CategoricalHinge": "keras.losses.CategoricalHinge",
        "keras.src.losses.losses.CosineSimilarity": "keras.losses.CosineSimilarity",
        "keras.src.losses.losses.Dice": "keras.losses.Dice",
        "keras.src.losses.losses.Hinge": "keras.losses.Hinge",
        "keras.src.losses.losses.Huber": "keras.losses.Huber",
        "keras.src.losses.losses.KLDivergence": "keras.losses.KLDivergence",
        "keras.src.losses.losses.LogCosh": "keras.losses.LogCosh",
        "keras.src.losses.losses.MeanAbsoluteError": "keras.losses.MeanAbsoluteError",
        "keras.src.losses.losses.MeanAbsolutePercentageError": "keras.losses.MeanAbsolutePercentageError",
        "keras.src.losses.losses.MeanSquaredError": "keras.losses.MeanSquaredError",
        "keras.src.losses.losses.MeanSquaredLogarithmicError": "keras.losses.MeanSquaredLogarithmicError",
        "keras.src.losses.losses.Poisson": "keras.losses.Poisson",
        "keras.src.losses.losses.SparseCategoricalCrossentropy": "keras.losses.SparseCategoricalCrossentropy",
        "keras.src.losses.losses.SquaredHinge": "keras.losses.SquaredHinge",
        "keras.src.losses.losses.Tversky": "keras.losses.Tversky",
        "keras.src.losses.losses.binary_crossentropy": "keras.metrics.binary_crossentropy",
        "keras.src.losses.losses.binary_focal_crossentropy": "keras.metrics.binary_focal_crossentropy",
        "keras.src.losses.losses.categorical_crossentropy": "keras.metrics.categorical_crossentropy",
        "keras.src.losses.losses.categorical_focal_crossentropy": "keras.metrics.categorical_focal_crossentropy",
        "keras.src.losses.losses.categorical_hinge": "keras.metrics.categorical_hinge",
        "keras.src.losses.losses.cosine_similarity": "keras.losses.cosine_similarity",
        "keras.src.losses.losses.ctc": "keras.losses.ctc",
        "keras.src.losses.deserialize": "keras.losses.deserialize",
        "keras.src.losses.losses.dice": "keras.losses.dice",
        "keras.src.losses.get": "keras.losses.get",
        "keras.src.losses.losses.hinge": "keras.metrics.hinge",
        "keras.src.losses.losses.huber": "keras.metrics.huber",
        "keras.src.losses.losses.kl_divergence": "keras.metrics.kl_divergence",
        "keras.src.losses.losses.log_cosh": "keras.metrics.log_cosh",
        "keras.src.losses.losses.mean_absolute_error": "keras.metrics.mean_absolute_error",
        "keras.src.losses.losses.mean_absolute_percentage_error": "keras.metrics.mean_absolute_percentage_error",
        "keras.src.losses.losses.mean_squared_error": "keras.metrics.mean_squared_error",
        "keras.src.losses.losses.mean_squared_logarithmic_error": "keras.metrics.mean_squared_logarithmic_error",
        "keras.src.losses.losses.poisson": "keras.metrics.poisson",
        "keras.src.losses.serialize": "keras.losses.serialize",
        "keras.src.losses.losses.sparse_categorical_crossentropy": "keras.metrics.sparse_categorical_crossentropy",
        "keras.src.losses.losses.squared_hinge": "keras.metrics.squared_hinge",
        "keras.src.losses.losses.tversky": "keras.losses.tversky",
        "keras.src.metrics.confusion_metrics.AUC": "keras.metrics.AUC",
        "keras.src.metrics.accuracy_metrics.Accuracy": "keras.metrics.Accuracy",
        "keras.src.metrics.accuracy_metrics.BinaryAccuracy": "keras.metrics.BinaryAccuracy",
        "keras.src.metrics.probabilistic_metrics.BinaryCrossentropy": "keras.metrics.BinaryCrossentropy",
        "keras.src.metrics.iou_metrics.BinaryIoU": "keras.metrics.BinaryIoU",
        "keras.src.metrics.accuracy_metrics.CategoricalAccuracy": "keras.metrics.CategoricalAccuracy",
        "keras.src.metrics.probabilistic_metrics.CategoricalCrossentropy": "keras.metrics.CategoricalCrossentropy",
        "keras.src.metrics.hinge_metrics.CategoricalHinge": "keras.metrics.CategoricalHinge",
        "keras.src.metrics.regression_metrics.CosineSimilarity": "keras.metrics.CosineSimilarity",
        "keras.src.metrics.f_score_metrics.F1Score": "keras.metrics.F1Score",
        "keras.src.metrics.f_score_metrics.FBetaScore": "keras.metrics.FBetaScore",
        "keras.src.metrics.confusion_metrics.FalseNegatives": "keras.metrics.FalseNegatives",
        "keras.src.metrics.confusion_metrics.FalsePositives": "keras.metrics.FalsePositives",
        "keras.src.metrics.hinge_metrics.Hinge": "keras.metrics.Hinge",
        "keras.src.metrics.iou_metrics.IoU": "keras.metrics.IoU",
        "keras.src.metrics.probabilistic_metrics.KLDivergence": "keras.metrics.KLDivergence",
        "keras.src.metrics.regression_metrics.LogCoshError": "keras.metrics.LogCoshError",
        "keras.src.metrics.reduction_metrics.Mean": "keras.metrics.Mean",
        "keras.src.metrics.regression_metrics.MeanAbsoluteError": "keras.metrics.MeanAbsoluteError",
        "keras.src.metrics.regression_metrics.MeanAbsolutePercentageError": "keras.metrics.MeanAbsolutePercentageError",
        "keras.src.metrics.iou_metrics.MeanIoU": "keras.metrics.MeanIoU",
        "keras.src.metrics.reduction_metrics.MeanMetricWrapper": "keras.metrics.MeanMetricWrapper",
        "keras.src.metrics.regression_metrics.MeanSquaredError": "keras.metrics.MeanSquaredError",
        "keras.src.metrics.regression_metrics.MeanSquaredLogarithmicError": "keras.metrics.MeanSquaredLogarithmicError",
        "keras.src.metrics.iou_metrics.OneHotIoU": "keras.metrics.OneHotIoU",
        "keras.src.metrics.iou_metrics.OneHotMeanIoU": "keras.metrics.OneHotMeanIoU",
        "keras.src.metrics.probabilistic_metrics.Poisson": "keras.metrics.Poisson",
        "keras.src.metrics.confusion_metrics.Precision": "keras.metrics.Precision",
        "keras.src.metrics.confusion_metrics.PrecisionAtRecall": "keras.metrics.PrecisionAtRecall",
        "keras.src.metrics.regression_metrics.R2Score": "keras.metrics.R2Score",
        "keras.src.metrics.confusion_metrics.Recall": "keras.metrics.Recall",
        "keras.src.metrics.confusion_metrics.RecallAtPrecision": "keras.metrics.RecallAtPrecision",
        "keras.src.metrics.regression_metrics.RootMeanSquaredError": "keras.metrics.RootMeanSquaredError",
        "keras.src.metrics.confusion_metrics.SensitivityAtSpecificity": "keras.metrics.SensitivityAtSpecificity",
        "keras.src.metrics.accuracy_metrics.SparseCategoricalAccuracy": "keras.metrics.SparseCategoricalAccuracy",
        "keras.src.metrics.probabilistic_metrics.SparseCategoricalCrossentropy": "keras.metrics.SparseCategoricalCrossentropy",
        "keras.src.metrics.accuracy_metrics.SparseTopKCategoricalAccuracy": "keras.metrics.SparseTopKCategoricalAccuracy",
        "keras.src.metrics.confusion_metrics.SpecificityAtSensitivity": "keras.metrics.SpecificityAtSensitivity",
        "keras.src.metrics.hinge_metrics.SquaredHinge": "keras.metrics.SquaredHinge",
        "keras.src.metrics.reduction_metrics.Sum": "keras.metrics.Sum",
        "keras.src.metrics.accuracy_metrics.TopKCategoricalAccuracy": "keras.metrics.TopKCategoricalAccuracy",
        "keras.src.metrics.confusion_metrics.TrueNegatives": "keras.metrics.TrueNegatives",
        "keras.src.metrics.confusion_metrics.TruePositives": "keras.metrics.TruePositives",
        "keras.src.metrics.accuracy_metrics.binary_accuracy": "keras.metrics.binary_accuracy",
        "keras.src.metrics.accuracy_metrics.categorical_accuracy": "keras.metrics.categorical_accuracy",
        "keras.src.metrics.deserialize": "keras.metrics.deserialize",
        "keras.src.metrics.get": "keras.metrics.get",
        "keras.src.metrics.serialize": "keras.metrics.serialize",
        "keras.src.metrics.accuracy_metrics.sparse_categorical_accuracy": "keras.metrics.sparse_categorical_accuracy",
        "keras.src.metrics.accuracy_metrics.sparse_top_k_categorical_accuracy": "keras.metrics.sparse_top_k_categorical_accuracy",
        "keras.src.metrics.accuracy_metrics.top_k_categorical_accuracy": "keras.metrics.top_k_categorical_accuracy",
        "keras.src.callbacks.backup_and_restore.BackupAndRestore": "keras.callbacks.BackupAndRestore",
        "keras.src.callbacks.csv_logger.CSVLogger": "keras.callbacks.CSVLogger",
        "keras.src.callbacks.callback.Callback": "keras.callbacks.Callback",
        "keras.src.callbacks.callback_list.CallbackList": "keras.callbacks.CallbackList",
        "keras.src.callbacks.early_stopping.EarlyStopping": "keras.callbacks.EarlyStopping",
        "keras.src.callbacks.history.History": "keras.callbacks.History",
        "keras.src.callbacks.lambda_callback.LambdaCallback": "keras.callbacks.LambdaCallback",
        "keras.src.callbacks.learning_rate_scheduler.LearningRateScheduler": "keras.callbacks.LearningRateScheduler",
        "keras.src.callbacks.model_checkpoint.ModelCheckpoint": "keras.callbacks.ModelCheckpoint",
        "keras.src.callbacks.progbar_logger.ProgbarLogger": "keras.callbacks.ProgbarLogger",
        "keras.src.callbacks.reduce_lr_on_plateau.ReduceLROnPlateau": "keras.callbacks.ReduceLROnPlateau",
        "keras.src.callbacks.remote_monitor.RemoteMonitor": "keras.callbacks.RemoteMonitor",
        "keras.src.callbacks.swap_ema_weights.SwapEMAWeights": "keras.callbacks.SwapEMAWeights",
        "keras.src.callbacks.tensorboard.TensorBoard": "keras.callbacks.TensorBoard",
        "keras.src.callbacks.terminate_on_nan.TerminateOnNaN": "keras.callbacks.TerminateOnNaN",
        "keras.src.models.functional.Functional": "keras.Model",
        "keras.src.legacy.preprocessing.image.DirectoryIterator": "tensorflow.keras.utils.Sequence",
        "keras.src.legacy.preprocessing.image.ImageDataGenerator": "tensorflow.keras.preprocessing.image.ImageDataGenerator",
        "keras.src.legacy.preprocessing.image.DataFrameIterator": "tensorflow.keras.preprocessing.image.DataFrameIterator",
        "keras.api.preprocessing.image.DirectoryIterator": "tensorflow.keras.utils.Sequence",
        "keras.api.preprocessing.image.ImageDataGenerator": "tensorflow.keras.preprocessing.image.ImageDataGenerator",
        "keras.preprocessing.image.DirectoryIterator": "tensorflow.keras.utils.Sequence"
    },
    "torch": {
        "torch.AggregationType": "torch.AggregationType",
        "torch.AliasDb": "torch.AliasDb",
        "torch.AnyType": "torch.AnyType",
        "torch.Argument": "torch.Argument",
        "torch.ArgumentSpec": "torch.ArgumentSpec",
        "torch.AwaitType": "torch.AwaitType",
        "torch.BFloat16Storage": "torch.BFloat16Storage",
        "torch.BFloat16Tensor": "torch.BFloat16Tensor",
        "torch.BenchmarkConfig": "torch.BenchmarkConfig",
        "torch.BenchmarkExecutionStats": "torch.BenchmarkExecutionStats",
        "torch.Block": "torch.Block",
        "torch.BoolStorage": "torch.BoolStorage",
        "torch.BoolTensor": "torch.BoolTensor",
        "torch.BoolType": "torch.BoolType",
        "torch.BufferDict": "torch.BufferDict",
        "torch.ByteStorage": "torch.ByteStorage",
        "torch.ByteTensor": "torch.ByteTensor",
        "torch.CallStack": "torch.CallStack",
        "torch.Capsule": "torch.Capsule",
        "torch.CharStorage": "torch.CharStorage",
        "torch.CharTensor": "torch.CharTensor",
        "torch.ClassType": "torch.ClassType",
        "torch.Code": "torch.Code",
        "torch.jit.CompilationUnit": "torch.jit.CompilationUnit",
        "torch.CompleteArgumentSpec": "torch.CompleteArgumentSpec",
        "torch.ComplexDoubleStorage": "torch.ComplexDoubleStorage",
        "torch.ComplexFloatStorage": "torch.ComplexFloatStorage",
        "torch.ComplexType": "torch.ComplexType",
        "torch.ConcreteModuleType": "torch.ConcreteModuleType",
        "torch.ConcreteModuleTypeBuilder": "torch.ConcreteModuleTypeBuilder",
        "torch.DeepCopyMemoTable": "torch.DeepCopyMemoTable",
        "torch.DeserializationStorageContext": "torch.DeserializationStorageContext",
        "torch.DeviceObjType": "torch.DeviceObjType",
        "torch.DictType": "torch.DictType",
        "torch._C.DisableTorchFunction": "torch.DisableTorchFunction",
        "torch._C.DisableTorchFunctionSubclass": "torch.DisableTorchFunctionSubclass",
        "torch.DispatchKey": "torch.DispatchKey",
        "torch.DispatchKeySet": "torch.DispatchKeySet",
        "torch.DoubleStorage": "torch.DoubleStorage",
        "torch.DoubleTensor": "torch.DoubleTensor",
        "torch.EnumType": "torch.EnumType",
        "torch.ErrorReport": "torch.ErrorReport",
        "torch.Event": "torch.Event",
        "torch.ExcludeDispatchKeyGuard": "torch.ExcludeDispatchKeyGuard",
        "torch.ExecutionPlan": "torch.ExecutionPlan",
        "torch.FatalError": "torch.FatalError",
        "torch.FileCheck": "torch.FileCheck",
        "torch.FloatStorage": "torch.Storage",
        "torch.FloatTensor": "torch.FloatTensor",
        "torch.FloatType": "torch.FloatType",
        "torch.FunctionSchema": "torch.FunctionSchema",
        "torch.Future": "torch.Future",
        "torch.FutureType": "torch.FutureType",
        "torch._C.Generator": "torch.Generator",
        "torch.amp.grad_scaler.GradScaler": "torch.GradScaler",
        "torch.Gradient": "torch.Gradient",
        "torch.Graph": "torch.Graph",
        "torch.GraphExecutorState": "torch.GraphExecutorState",
        "torch.HalfStorage": "torch.HalfStorage",
        "torch.HalfTensor": "torch.HalfTensor",
        "torch.IODescriptor": "torch.IODescriptor",
        "torch.InferredType": "torch.InferredType",
        "torch.IntStorage": "torch.IntStorage",
        "torch.IntTensor": "torch.IntTensor",
        "torch.IntType": "torch.IntType",
        "torch.InterfaceType": "torch.InterfaceType",
        "torch.jit.Error": "torch.jit.Error",
        "torch.ListType": "torch.ListType",
        "torch.LiteScriptModule": "torch.LiteScriptModule",
        "torch.LockingLogger": "torch.LockingLogger",
        "torch._C.LoggerBase": "torch.LoggerBase",
        "torch.LongStorage": "torch.LongStorage",
        "torch.LongTensor": "torch.LongTensor",
        "torch.ModuleDict": "torch.ModuleDict",
        "torch.Node": "torch.Node",
        "torch.NoneType": "torch.NoneType",
        "torch.NoopLogger": "torch.NoopLogger",
        "torch.NumberType": "torch.NumberType",
        "torch.OperatorInfo": "torch.OperatorInfo",
        "torch.OptionalType": "torch.OptionalType",
        "torch.OutOfMemoryError": "torch.OutOfMemoryError",
        "torch.ParameterDict": "torch.ParameterDict",
        "torch.PyObjectType": "torch.PyObjectType",
        "torch.PyTorchFileReader": "torch.PyTorchFileReader",
        "torch.PyTorchFileWriter": "torch.PyTorchFileWriter",
        "torch.QInt32Storage": "torch.QInt32Storage",
        "torch.QInt8Storage": "torch.QInt8Storage",
        "torch.QUInt2x4Storage": "torch.QUInt2x4Storage",
        "torch.QUInt4x2Storage": "torch.QUInt4x2Storage",
        "torch.QUInt8Storage": "torch.QUInt8Storage",
        "torch.RRefType": "torch.RRefType",
        "torch.ScriptClass": "torch.ScriptClass",
        "torch.ScriptClassFunction": "torch.ScriptClassFunction",
        "torch.ScriptDict": "torch.ScriptDict",
        "torch.ScriptDictIterator": "torch.ScriptDictIterator",
        "torch.ScriptDictKeyIterator": "torch.ScriptDictKeyIterator",
        "torch.jit.ScriptFunction": "torch.jit.ScriptFunction",
        "torch.ScriptList": "torch.ScriptList",
        "torch.ScriptListIterator": "torch.ScriptListIterator",
        "torch.ScriptMethod": "torch.ScriptMethod",
        "torch.ScriptModule": "torch.ScriptModule",
        "torch.ScriptModuleSerializer": "torch.ScriptModuleSerializer",
        "torch.ScriptObject": "torch.ScriptObject",
        "torch.ScriptObjectProperty": "torch.ScriptObjectProperty",
        "torch.SerializationStorageContext": "torch.SerializationStorageContext",
        "torch.ShortStorage": "torch.ShortStorage",
        "torch.ShortTensor": "torch.ShortTensor",
        "torch.Size": "torch.Size",
        "torch.StaticModule": "torch.StaticModule",
        "torch._C.StorageBase": "torch.StorageBase",
        "torch.Stream": "torch.Stream",
        "torch.StreamObjType": "torch.StreamObjType",
        "torch.StringType": "torch.StringType",
        "torch.SymBool": "torch.SymBool",
        "torch.SymBoolType": "torch.SymBoolType",
        "torch.SymFloat": "torch.SymFloat",
        "torch.SymInt": "torch.SymInt",
        "torch.SymIntType": "torch.SymIntType",
        "torch.Tag": "torch.Tag",
        "torch.Tensor": "torch.fft.Tensor",
        "torch.TensorType": "torch.TensorType",
        "torch.ThroughputBenchmark": "torch.ThroughputBenchmark",
        "torch.TracingState": "torch.TracingState",
        "torch.TupleType": "torch.TupleType",
        "torch.Type": "torch.Type",
        "torch.storage.TypedStorage": "torch.TypedStorage",
        "torch.UnionType": "torch.UnionType",
        "torch.storage.UntypedStorage": "torch.UntypedStorage",
        "torch.Use": "torch.Use",
        "torch.Value": "torch.Value",
        "torch._VariableFunctionsClass.abs": "torch.abs",
        "torch._VariableFunctionsClass.abs_": "torch.abs_",
        "torch._VariableFunctionsClass.absolute": "torch.absolute",
        "torch._VariableFunctionsClass.acos": "torch.acos",
        "torch._VariableFunctionsClass.acos_": "torch.acos_",
        "torch._VariableFunctionsClass.acosh": "torch.acosh",
        "torch._VariableFunctionsClass.acosh_": "torch.acosh_",
        "torch._VariableFunctionsClass.adaptive_avg_pool1d": "torch.nn.functional.adaptive_avg_pool1d",
        "torch._VariableFunctionsClass.adaptive_max_pool1d": "torch.adaptive_max_pool1d",
        "torch._VariableFunctionsClass.add": "torch.add",
        "torch._VariableFunctionsClass.addbmm": "torch.addbmm",
        "torch._VariableFunctionsClass.addcdiv": "torch.addcdiv",
        "torch._VariableFunctionsClass.addcmul": "torch.addcmul",
        "torch._VariableFunctionsClass.addmm": "torch.addmm",
        "torch._VariableFunctionsClass.addmv": "torch.addmv",
        "torch._VariableFunctionsClass.addmv_": "torch.addmv_",
        "torch._VariableFunctionsClass.addr": "torch.addr",
        "torch._VariableFunctionsClass.adjoint": "torch.adjoint",
        "torch._VariableFunctionsClass.affine_grid_generator": "torch.affine_grid_generator",
        "torch._VariableFunctionsClass.alias_copy": "torch.alias_copy",
        "torch.functional.align_tensors": "torch.align_tensors",
        "torch._VariableFunctionsClass.all": "torch.all",
        "torch._VariableFunctionsClass.allclose": "torch.allclose",
        "torch._VariableFunctionsClass.alpha_dropout": "torch.alpha_dropout",
        "torch._VariableFunctionsClass.alpha_dropout_": "torch.alpha_dropout_",
        "torch._VariableFunctionsClass.amax": "torch.amax",
        "torch._VariableFunctionsClass.amin": "torch.amin",
        "torch._VariableFunctionsClass.aminmax": "torch.aminmax",
        "torch._VariableFunctionsClass.angle": "torch.angle",
        "torch._VariableFunctionsClass.any": "torch.any",
        "torch._VariableFunctionsClass.arange": "torch.arange",
        "torch._VariableFunctionsClass.arccos": "torch.arccos",
        "torch._VariableFunctionsClass.arccos_": "torch.arccos_",
        "torch._VariableFunctionsClass.arccosh": "torch.arccosh",
        "torch._VariableFunctionsClass.arccosh_": "torch.arccosh_",
        "torch._VariableFunctionsClass.arcsin": "torch.arcsin",
        "torch._VariableFunctionsClass.arcsin_": "torch.arcsin_",
        "torch._VariableFunctionsClass.arcsinh": "torch.arcsinh",
        "torch._VariableFunctionsClass.arcsinh_": "torch.arcsinh_",
        "torch._VariableFunctionsClass.arctan": "torch.arctan",
        "torch._VariableFunctionsClass.arctan2": "torch.arctan2",
        "torch._VariableFunctionsClass.arctan_": "torch.arctan_",
        "torch._VariableFunctionsClass.arctanh": "torch.arctanh",
        "torch._VariableFunctionsClass.arctanh_": "torch.arctanh_",
        "torch.are_deterministic_algorithms_enabled": "torch.are_deterministic_algorithms_enabled",
        "torch._VariableFunctionsClass.argmax": "torch.argmax",
        "torch._VariableFunctionsClass.argmin": "torch.argmin",
        "torch._VariableFunctionsClass.argsort": "torch.argsort",
        "torch._VariableFunctionsClass.argwhere": "torch.argwhere",
        "torch._VariableFunctionsClass.as_strided": "torch.as_strided",
        "torch._VariableFunctionsClass.as_strided_": "torch.as_strided_",
        "torch._VariableFunctionsClass.as_strided_copy": "torch.as_strided_copy",
        "torch._VariableFunctionsClass.as_strided_scatter": "torch.as_strided_scatter",
        "torch._VariableFunctionsClass.as_tensor": "torch.as_tensor",
        "torch._VariableFunctionsClass.asarray": "torch.asarray",
        "torch._VariableFunctionsClass.asin": "torch.asin",
        "torch._VariableFunctionsClass.asin_": "torch.asin_",
        "torch._VariableFunctionsClass.asinh": "torch.asinh",
        "torch._VariableFunctionsClass.asinh_": "torch.asinh_",
        "torch._VariableFunctionsClass.atan": "torch.atan",
        "torch._VariableFunctionsClass.atan2": "torch.atan2",
        "torch._VariableFunctionsClass.atan_": "torch.atan_",
        "torch._VariableFunctionsClass.atanh": "torch.atanh",
        "torch._VariableFunctionsClass.atanh_": "torch.atanh_",
        "torch.functional.atleast_1d": "torch.atleast_1d",
        "torch.functional.atleast_2d": "torch.atleast_2d",
        "torch.functional.atleast_3d": "torch.atleast_3d",
        "torch.amp.autocast_mode.autocast": "torch.autocast",
        "torch.autocast_decrement_nesting": "torch.autocast_decrement_nesting",
        "torch.autocast_increment_nesting": "torch.autocast_increment_nesting",
        "torch._VariableFunctionsClass.avg_pool1d": "torch.nn.functional.avg_pool1d",
        "torch._VariableFunctionsClass.baddbmm": "torch.baddbmm",
        "torch._VariableFunctionsClass.bartlett_window": "torch.bartlett_window",
        "torch._VariableFunctionsClass.batch_norm": "torch.batch_norm",
        "torch._VariableFunctionsClass.batch_norm_backward_elemt": "torch.batch_norm_backward_elemt",
        "torch._VariableFunctionsClass.batch_norm_backward_reduce": "torch.batch_norm_backward_reduce",
        "torch._VariableFunctionsClass.batch_norm_elemt": "torch.batch_norm_elemt",
        "torch._VariableFunctionsClass.batch_norm_gather_stats": "torch.batch_norm_gather_stats",
        "torch._VariableFunctionsClass.batch_norm_gather_stats_with_counts": "torch.batch_norm_gather_stats_with_counts",
        "torch._VariableFunctionsClass.batch_norm_stats": "torch.batch_norm_stats",
        "torch._VariableFunctionsClass.batch_norm_update_stats": "torch.batch_norm_update_stats",
        "torch._VariableFunctionsClass.bernoulli": "torch.bernoulli",
        "torch._VariableFunctionsClass.bilinear": "torch.nn.functional.bilinear",
        "torch._VariableFunctionsClass.binary_cross_entropy_with_logits": "torch.binary_cross_entropy_with_logits",
        "torch._VariableFunctionsClass.bincount": "torch.bincount",
        "torch._VariableFunctionsClass.binomial": "torch.binomial",
        "torch._VariableFunctionsClass.bitwise_and": "torch.bitwise_and",
        "torch._VariableFunctionsClass.bitwise_left_shift": "torch.bitwise_left_shift",
        "torch._VariableFunctionsClass.bitwise_not": "torch.bitwise_not",
        "torch._VariableFunctionsClass.bitwise_or": "torch.bitwise_or",
        "torch._VariableFunctionsClass.bitwise_right_shift": "torch.bitwise_right_shift",
        "torch._VariableFunctionsClass.bitwise_xor": "torch.bitwise_xor",
        "torch._VariableFunctionsClass.blackman_window": "torch.blackman_window",
        "torch.functional.block_diag": "torch.block_diag",
        "torch._VariableFunctionsClass.bmm": "torch.bmm",
        "torch.functional.broadcast_shapes": "torch.broadcast_shapes",
        "torch.functional.broadcast_tensors": "torch.broadcast_tensors",
        "torch._VariableFunctionsClass.broadcast_to": "torch.broadcast_to",
        "torch._VariableFunctionsClass.bucketize": "torch.bucketize",
        "torch._VariableFunctionsClass.can_cast": "torch.can_cast",
        "torch.functional.cartesian_prod": "torch.cartesian_prod",
        "torch._VariableFunctionsClass.cat": "torch.cat",
        "torch._VariableFunctionsClass.ccol_indices_copy": "torch.ccol_indices_copy",
        "torch.functional.cdist": "torch.cdist",
        "torch._VariableFunctionsClass.ceil": "torch.ceil",
        "torch._VariableFunctionsClass.ceil_": "torch.ceil_",
        "torch._VariableFunctionsClass.celu": "torch.celu",
        "torch._VariableFunctionsClass.celu_": "torch.nn.functional.celu_",
        "torch.functional.chain_matmul": "torch.chain_matmul",
        "torch._VariableFunctionsClass.channel_shuffle": "torch.nn.functional.channel_shuffle",
        "torch._VariableFunctionsClass.cholesky": "torch.cholesky",
        "torch._VariableFunctionsClass.cholesky_inverse": "torch.cholesky_inverse",
        "torch._VariableFunctionsClass.cholesky_solve": "torch.cholesky_solve",
        "torch._VariableFunctionsClass.choose_qparams_optimized": "torch.choose_qparams_optimized",
        "torch._VariableFunctionsClass.chunk": "torch.chunk",
        "torch._VariableFunctionsClass.clamp": "torch.clamp",
        "torch._VariableFunctionsClass.clamp_": "torch.clamp_",
        "torch._VariableFunctionsClass.clamp_max": "torch.clamp_max",
        "torch._VariableFunctionsClass.clamp_max_": "torch.clamp_max_",
        "torch._VariableFunctionsClass.clamp_min": "torch.clamp_min",
        "torch._VariableFunctionsClass.clamp_min_": "torch.clamp_min_",
        "torch._utils.classproperty": "torch.classproperty",
        "torch.clear_autocast_cache": "torch.clear_autocast_cache",
        "torch._VariableFunctionsClass.clip": "torch.clip",
        "torch._VariableFunctionsClass.clip_": "torch.clip_",
        "torch._VariableFunctionsClass.clone": "torch.clone",
        "torch._VariableFunctionsClass.col_indices_copy": "torch.col_indices_copy",
        "torch._VariableFunctionsClass.column_stack": "torch.column_stack",
        "torch._VariableFunctionsClass.combinations": "torch.combinations",
        "torch.compile": "torch.compile",
        "torch.compiled_with_cxx11_abi": "torch.compiled_with_cxx11_abi",
        "torch._VariableFunctionsClass.complex": "torch.complex",
        "torch._VariableFunctionsClass.concat": "torch.concat",
        "torch._VariableFunctionsClass.concatenate": "torch.concatenate",
        "torch.cond": "torch.cond",
        "torch._VariableFunctionsClass.conj": "torch.conj",
        "torch._VariableFunctionsClass.conj_physical": "torch.conj_physical",
        "torch._VariableFunctionsClass.conj_physical_": "torch.conj_physical_",
        "torch._VariableFunctionsClass.constant_pad_nd": "torch.constant_pad_nd",
        "torch._VariableFunctionsClass.conv1d": "torch.nn.functional.conv1d",
        "torch._VariableFunctionsClass.conv2d": "torch.nn.functional.conv2d",
        "torch._VariableFunctionsClass.conv3d": "torch.nn.functional.conv3d",
        "torch._VariableFunctionsClass.conv_tbc": "torch.nn.functional.conv_tbc",
        "torch._VariableFunctionsClass.conv_transpose1d": "torch.nn.functional.conv_transpose1d",
        "torch._VariableFunctionsClass.conv_transpose2d": "torch.nn.functional.conv_transpose2d",
        "torch._VariableFunctionsClass.conv_transpose3d": "torch.nn.functional.conv_transpose3d",
        "torch._VariableFunctionsClass.convolution": "torch.convolution",
        "torch._VariableFunctionsClass.copysign": "torch.copysign",
        "torch._VariableFunctionsClass.corrcoef": "torch.corrcoef",
        "torch._VariableFunctionsClass.cos": "torch.cos",
        "torch._VariableFunctionsClass.cos_": "torch.cos_",
        "torch._VariableFunctionsClass.cosh": "torch.cosh",
        "torch._VariableFunctionsClass.cosh_": "torch.cosh_",
        "torch._VariableFunctionsClass.cosine_embedding_loss": "torch.cosine_embedding_loss",
        "torch._VariableFunctionsClass.cosine_similarity": "torch.nn.functional.cosine_similarity",
        "torch._VariableFunctionsClass.count_nonzero": "torch.count_nonzero",
        "torch._VariableFunctionsClass.cov": "torch.cov",
        "torch._VariableFunctionsClass.cross": "torch.cross",
        "torch._VariableFunctionsClass.crow_indices_copy": "torch.crow_indices_copy",
        "torch._VariableFunctionsClass.ctc_loss": "torch.ctc_loss",
        "torch._VariableFunctionsClass.cudnn_affine_grid_generator": "torch.cudnn_affine_grid_generator",
        "torch._VariableFunctionsClass.cudnn_batch_norm": "torch.cudnn_batch_norm",
        "torch._VariableFunctionsClass.cudnn_convolution": "torch.cudnn_convolution",
        "torch._VariableFunctionsClass.cudnn_convolution_add_relu": "torch.cudnn_convolution_add_relu",
        "torch._VariableFunctionsClass.cudnn_convolution_relu": "torch.cudnn_convolution_relu",
        "torch._VariableFunctionsClass.cudnn_convolution_transpose": "torch.cudnn_convolution_transpose",
        "torch._VariableFunctionsClass.cudnn_grid_sampler": "torch.cudnn_grid_sampler",
        "torch._VariableFunctionsClass.cudnn_is_acceptable": "torch.cudnn_is_acceptable",
        "torch._VariableFunctionsClass.cummax": "torch.cummax",
        "torch._VariableFunctionsClass.cummin": "torch.cummin",
        "torch._VariableFunctionsClass.cumprod": "torch.cumprod",
        "torch._VariableFunctionsClass.cumsum": "torch.cumsum",
        "torch._VariableFunctionsClass.cumulative_trapezoid": "torch.cumulative_trapezoid",
        "torch._VariableFunctionsClass.deg2rad": "torch.deg2rad",
        "torch._VariableFunctionsClass.deg2rad_": "torch.deg2rad_",
        "torch._VariableFunctionsClass.dequantize": "torch.dequantize",
        "torch._VariableFunctionsClass.det": "torch.det",
        "torch._VariableFunctionsClass.detach": "torch.detach",
        "torch._VariableFunctionsClass.detach_": "torch.detach_",
        "torch._VariableFunctionsClass.detach_copy": "torch.detach_copy",
        "torch.device": "torch.device",
        "torch._VariableFunctionsClass.diag": "torch.diag",
        "torch._VariableFunctionsClass.diag_embed": "torch.diag_embed",
        "torch._VariableFunctionsClass.diagflat": "torch.diagflat",
        "torch._VariableFunctionsClass.diagonal": "torch.diagonal",
        "torch._VariableFunctionsClass.diagonal_copy": "torch.diagonal_copy",
        "torch._VariableFunctionsClass.diagonal_scatter": "torch.diagonal_scatter",
        "torch._VariableFunctionsClass.diff": "torch.diff",
        "torch._VariableFunctionsClass.digamma": "torch.digamma",
        "torch._VariableFunctionsClass.dist": "torch.dist",
        "torch._VariableFunctionsClass.div": "torch.div",
        "torch._VariableFunctionsClass.divide": "torch.divide",
        "torch._VariableFunctionsClass.dot": "torch.dot",
        "torch._VariableFunctionsClass.dropout": "torch.dropout",
        "torch._VariableFunctionsClass.dropout_": "torch.dropout_",
        "torch._VariableFunctionsClass.dsmm": "torch.dsmm",
        "torch._VariableFunctionsClass.dsplit": "torch.dsplit",
        "torch._VariableFunctionsClass.dstack": "torch.dstack",
        "torch.dtype": "torch.dtype",
        "torch._linalg_utils.eig": "torch.eig",
        "torch.functional.einsum": "torch.einsum",
        "torch._VariableFunctionsClass.embedding": "torch.embedding",
        "torch._VariableFunctionsClass.embedding_bag": "torch.embedding_bag",
        "torch._VariableFunctionsClass.embedding_renorm_": "torch.embedding_renorm_",
        "torch._VariableFunctionsClass.empty": "torch.empty",
        "torch._VariableFunctionsClass.empty_like": "torch.empty_like",
        "torch._VariableFunctionsClass.empty_permuted": "torch.empty_permuted",
        "torch._VariableFunctionsClass.empty_quantized": "torch.empty_quantized",
        "torch._VariableFunctionsClass.empty_strided": "torch.empty_strided",
        "torch.autograd.grad_mode.enable_grad": "torch.autograd.enable_grad",
        "torch._VariableFunctionsClass.eq": "torch.eq",
        "torch._VariableFunctionsClass.equal": "torch.equal",
        "torch._VariableFunctionsClass.erf": "torch.erf",
        "torch._VariableFunctionsClass.erf_": "torch.erf_",
        "torch._VariableFunctionsClass.erfc": "torch.erfc",
        "torch._VariableFunctionsClass.erfc_": "torch.erfc_",
        "torch._VariableFunctionsClass.erfinv": "torch.erfinv",
        "torch._VariableFunctionsClass.exp": "torch.exp",
        "torch._VariableFunctionsClass.exp2": "torch.exp2",
        "torch._VariableFunctionsClass.exp2_": "torch.exp2_",
        "torch._VariableFunctionsClass.exp_": "torch.exp_",
        "torch._VariableFunctionsClass.expand_copy": "torch.expand_copy",
        "torch._VariableFunctionsClass.expm1": "torch.expm1",
        "torch._VariableFunctionsClass.expm1_": "torch.expm1_",
        "torch._VariableFunctionsClass.eye": "torch.eye",
        "torch._VariableFunctionsClass.fake_quantize_per_channel_affine": "torch.fake_quantize_per_channel_affine",
        "torch._VariableFunctionsClass.fake_quantize_per_tensor_affine": "torch.fake_quantize_per_tensor_affine",
        "torch._VariableFunctionsClass.fbgemm_linear_fp16_weight": "torch.fbgemm_linear_fp16_weight",
        "torch._VariableFunctionsClass.fbgemm_linear_fp16_weight_fp32_activation": "torch.fbgemm_linear_fp16_weight_fp32_activation",
        "torch._VariableFunctionsClass.fbgemm_linear_int8_weight": "torch.fbgemm_linear_int8_weight",
        "torch._VariableFunctionsClass.fbgemm_linear_int8_weight_fp32_activation": "torch.fbgemm_linear_int8_weight_fp32_activation",
        "torch._VariableFunctionsClass.fbgemm_linear_quantize_weight": "torch.fbgemm_linear_quantize_weight",
        "torch._VariableFunctionsClass.fbgemm_pack_gemm_matrix_fp16": "torch.fbgemm_pack_gemm_matrix_fp16",
        "torch._VariableFunctionsClass.fbgemm_pack_quantized_matrix": "torch.fbgemm_pack_quantized_matrix",
        "torch._VariableFunctionsClass.feature_alpha_dropout": "torch.feature_alpha_dropout",
        "torch._VariableFunctionsClass.feature_alpha_dropout_": "torch.feature_alpha_dropout_",
        "torch._VariableFunctionsClass.feature_dropout": "torch.feature_dropout",
        "torch._VariableFunctionsClass.feature_dropout_": "torch.feature_dropout_",
        "torch._VariableFunctionsClass.fill": "torch.fill",
        "torch._VariableFunctionsClass.fill_": "torch.fill_",
        "torch.finfo": "torch.finfo",
        "torch._VariableFunctionsClass.fix": "torch.fix",
        "torch._VariableFunctionsClass.fix_": "torch.fix_",
        "torch._VariableFunctionsClass.flatten": "torch.flatten",
        "torch._VariableFunctionsClass.flip": "torch.flip",
        "torch._VariableFunctionsClass.fliplr": "torch.fliplr",
        "torch._VariableFunctionsClass.flipud": "torch.flipud",
        "torch._VariableFunctionsClass.float_power": "torch.float_power",
        "torch._VariableFunctionsClass.floor": "torch.floor",
        "torch._VariableFunctionsClass.floor_": "torch.floor_",
        "torch._VariableFunctionsClass.floor_divide": "torch.floor_divide",
        "torch._VariableFunctionsClass.fmax": "torch.fmax",
        "torch._VariableFunctionsClass.fmin": "torch.fmin",
        "torch._VariableFunctionsClass.fmod": "torch.fmod",
        "torch.PyCapsule.fork": "torch.fork",
        "torch._VariableFunctionsClass.frac": "torch.frac",
        "torch._VariableFunctionsClass.frac_": "torch.frac_",
        "torch._VariableFunctionsClass.frexp": "torch.frexp",
        "torch._VariableFunctionsClass.frobenius_norm": "torch.frobenius_norm",
        "torch.utils.dlpack.from_dlpack": "torch.from_dlpack",
        "torch._VariableFunctionsClass.from_file": "torch.from_file",
        "torch._VariableFunctionsClass.from_numpy": "torch.from_numpy",
        "torch._VariableFunctionsClass.frombuffer": "torch.frombuffer",
        "torch._VariableFunctionsClass.full": "torch.full",
        "torch._VariableFunctionsClass.full_like": "torch.full_like",
        "torch._VariableFunctionsClass.fused_moving_avg_obs_fake_quant": "torch.fused_moving_avg_obs_fake_quant",
        "torch._VariableFunctionsClass.gather": "torch.gather",
        "torch._VariableFunctionsClass.gcd": "torch.gcd",
        "torch._VariableFunctionsClass.gcd_": "torch.gcd_",
        "torch._VariableFunctionsClass.ge": "torch.ge",
        "torch._VariableFunctionsClass.geqrf": "torch.geqrf",
        "torch._VariableFunctionsClass.ger": "torch.ger",
        "torch.get_autocast_cpu_dtype": "torch.get_autocast_cpu_dtype",
        "torch.get_autocast_dtype": "torch.get_autocast_dtype",
        "torch.get_autocast_gpu_dtype": "torch.get_autocast_gpu_dtype",
        "torch.get_autocast_ipu_dtype": "torch.get_autocast_ipu_dtype",
        "torch.get_autocast_xla_dtype": "torch.get_autocast_xla_dtype",
        "torch.get_default_device": "torch.get_default_device",
        "torch.get_default_dtype": "torch.get_default_dtype",
        "torch.get_deterministic_debug_mode": "torch.get_deterministic_debug_mode",
        "torch._VariableFunctionsClass.get_device": "torch.get_device",
        "torch.get_device_module": "torch.get_device_module",
        "torch._utils_internal.get_file_path": "torch.get_file_path",
        "torch.get_float32_matmul_precision": "torch.get_float32_matmul_precision",
        "torch.get_num_interop_threads": "torch.get_num_interop_threads",
        "torch.get_num_threads": "torch.get_num_threads",
        "torch.random.get_rng_state": "torch.get_rng_state",
        "torch._VariableFunctionsClass.gradient": "torch.gradient",
        "torch._VariableFunctionsClass.greater": "torch.greater",
        "torch._VariableFunctionsClass.greater_equal": "torch.greater_equal",
        "torch._VariableFunctionsClass.grid_sampler": "torch.grid_sampler",
        "torch._VariableFunctionsClass.grid_sampler_2d": "torch.grid_sampler_2d",
        "torch._VariableFunctionsClass.grid_sampler_3d": "torch.grid_sampler_3d",
        "torch._VariableFunctionsClass.group_norm": "torch.group_norm",
        "torch._VariableFunctionsClass.gru": "torch.gru",
        "torch._VariableFunctionsClass.gru_cell": "torch.gru_cell",
        "torch._VariableFunctionsClass.gt": "torch.gt",
        "torch._VariableFunctionsClass.hamming_window": "torch.hamming_window",
        "torch._VariableFunctionsClass.hann_window": "torch.hann_window",
        "torch._VariableFunctionsClass.hardshrink": "torch.nn.functional.hardshrink",
        "torch._VariableFunctionsClass.heaviside": "torch.heaviside",
        "torch._VariableFunctionsClass.hinge_embedding_loss": "torch.hinge_embedding_loss",
        "torch._VariableFunctionsClass.histc": "torch.histc",
        "torch._VariableFunctionsClass.histogram": "torch.histogram",
        "torch._VariableFunctionsClass.histogramdd": "torch.histogramdd",
        "torch._VariableFunctionsClass.hsmm": "torch.hsmm",
        "torch._VariableFunctionsClass.hsplit": "torch.hsplit",
        "torch._VariableFunctionsClass.hspmm": "torch.hspmm",
        "torch._VariableFunctionsClass.hstack": "torch.hstack",
        "torch._VariableFunctionsClass.hypot": "torch.hypot",
        "torch._VariableFunctionsClass.i0": "torch.i0",
        "torch._VariableFunctionsClass.i0_": "torch.i0_",
        "torch._VariableFunctionsClass.igamma": "torch.igamma",
        "torch._VariableFunctionsClass.igammac": "torch.igammac",
        "torch.iinfo": "torch.iinfo",
        "torch._VariableFunctionsClass.imag": "torch.imag",
        "torch.PyCapsule.import_ir_module": "torch.import_ir_module",
        "torch.PyCapsule.import_ir_module_from_buffer": "torch.import_ir_module_from_buffer",
        "torch._VariableFunctionsClass.index_add": "torch.index_add",
        "torch._VariableFunctionsClass.index_copy": "torch.index_copy",
        "torch._VariableFunctionsClass.index_fill": "torch.index_fill",
        "torch._VariableFunctionsClass.index_put": "torch.index_put",
        "torch._VariableFunctionsClass.index_put_": "torch.index_put_",
        "torch._VariableFunctionsClass.index_reduce": "torch.index_reduce",
        "torch._VariableFunctionsClass.index_select": "torch.index_select",
        "torch._VariableFunctionsClass.indices_copy": "torch.indices_copy",
        "torch.autograd.grad_mode.inference_mode": "torch.autograd.inference_mode",
        "torch.PyCapsule.init_num_threads": "torch.init_num_threads",
        "torch.random.initial_seed": "torch.initial_seed",
        "torch._VariableFunctionsClass.inner": "torch.inner",
        "torch._VariableFunctionsClass.instance_norm": "torch.instance_norm",
        "torch._VariableFunctionsClass.int_repr": "torch.int_repr",
        "torch._VariableFunctionsClass.inverse": "torch.inverse",
        "torch.is_anomaly_check_nan_enabled": "torch.is_anomaly_check_nan_enabled",
        "torch.is_anomaly_enabled": "torch.is_anomaly_enabled",
        "torch.is_autocast_cache_enabled": "torch.is_autocast_cache_enabled",
        "torch.is_autocast_cpu_enabled": "torch.is_autocast_cpu_enabled",
        "torch.is_autocast_enabled": "torch.is_autocast_enabled",
        "torch.is_autocast_ipu_enabled": "torch.is_autocast_ipu_enabled",
        "torch.is_autocast_xla_enabled": "torch.is_autocast_xla_enabled",
        "torch._VariableFunctionsClass.is_complex": "torch.is_complex",
        "torch._VariableFunctionsClass.is_conj": "torch.is_conj",
        "torch.is_deterministic_algorithms_warn_only_enabled": "torch.is_deterministic_algorithms_warn_only_enabled",
        "torch._VariableFunctionsClass.is_distributed": "torch.is_distributed",
        "torch._VariableFunctionsClass.is_floating_point": "torch.is_floating_point",
        "torch.is_grad_enabled": "torch.is_grad_enabled",
        "torch._VariableFunctionsClass.is_inference": "torch.is_inference",
        "torch.is_inference_mode_enabled": "torch.is_inference_mode_enabled",
        "torch._VariableFunctionsClass.is_neg": "torch.is_neg",
        "torch._VariableFunctionsClass.is_nonzero": "torch.is_nonzero",
        "torch._VariableFunctionsClass.is_same_size": "torch.is_same_size",
        "torch._VariableFunctionsClass.is_signed": "torch.is_signed",
        "torch.is_storage": "torch.is_storage",
        "torch.is_tensor": "torch.is_tensor",
        "torch._VariableFunctionsClass.is_vulkan_available": "torch.is_vulkan_available",
        "torch.is_warn_always_enabled": "torch.is_warn_always_enabled",
        "torch._VariableFunctionsClass.isclose": "torch.isclose",
        "torch._VariableFunctionsClass.isfinite": "torch.isfinite",
        "torch._VariableFunctionsClass.isin": "torch.isin",
        "torch._VariableFunctionsClass.isinf": "torch.isinf",
        "torch._VariableFunctionsClass.isnan": "torch.isnan",
        "torch._VariableFunctionsClass.isneginf": "torch.isneginf",
        "torch._VariableFunctionsClass.isposinf": "torch.isposinf",
        "torch._VariableFunctionsClass.isreal": "torch.isreal",
        "torch._VariableFunctionsClass.istft": "torch.istft",
        "torch._VariableFunctionsClass.kaiser_window": "torch.kaiser_window",
        "torch._VariableFunctionsClass.kl_div": "torch.kl_div",
        "torch._VariableFunctionsClass.kron": "torch.kron",
        "torch._VariableFunctionsClass.kthvalue": "torch.kthvalue",
        "torch._VariableFunctionsClass.layer_norm": "torch.layer_norm",
        "torch.layout": "torch.layout",
        "torch._VariableFunctionsClass.lcm": "torch.lcm",
        "torch._VariableFunctionsClass.lcm_": "torch.lcm_",
        "torch._VariableFunctionsClass.ldexp": "torch.ldexp",
        "torch._VariableFunctionsClass.ldexp_": "torch.ldexp_",
        "torch._VariableFunctionsClass.le": "torch.le",
        "torch._VariableFunctionsClass.lerp": "torch.lerp",
        "torch._VariableFunctionsClass.less": "torch.less",
        "torch._VariableFunctionsClass.less_equal": "torch.less_equal",
        "torch._VariableFunctionsClass.lgamma": "torch.lgamma",
        "torch._VariableFunctionsClass.linspace": "torch.linspace",
        "torch.serialization.load": "torch.load",
        "torch._lobpcg.lobpcg": "torch.lobpcg",
        "torch._VariableFunctionsClass.log": "torch.log",
        "torch._VariableFunctionsClass.log10": "torch.log10",
        "torch._VariableFunctionsClass.log10_": "torch.log10_",
        "torch._VariableFunctionsClass.log1p": "torch.log1p",
        "torch._VariableFunctionsClass.log1p_": "torch.log1p_",
        "torch._VariableFunctionsClass.log2": "torch.log2",
        "torch._VariableFunctionsClass.log2_": "torch.log2_",
        "torch._VariableFunctionsClass.log_": "torch.log_",
        "torch._VariableFunctionsClass.log_softmax": "torch.log_softmax",
        "torch._VariableFunctionsClass.logaddexp": "torch.logaddexp",
        "torch._VariableFunctionsClass.logaddexp2": "torch.logaddexp2",
        "torch._VariableFunctionsClass.logcumsumexp": "torch.logcumsumexp",
        "torch._VariableFunctionsClass.logdet": "torch.logdet",
        "torch._VariableFunctionsClass.logical_and": "torch.logical_and",
        "torch._VariableFunctionsClass.logical_not": "torch.logical_not",
        "torch._VariableFunctionsClass.logical_or": "torch.logical_or",
        "torch._VariableFunctionsClass.logical_xor": "torch.logical_xor",
        "torch._VariableFunctionsClass.logit": "torch.logit",
        "torch._VariableFunctionsClass.logit_": "torch.logit_",
        "torch._VariableFunctionsClass.logspace": "torch.logspace",
        "torch._VariableFunctionsClass.logsumexp": "torch.logsumexp",
        "torch._VariableFunctionsClass.lstm": "torch.lstm",
        "torch._VariableFunctionsClass.lstm_cell": "torch.lstm_cell",
        "torch._linalg_utils.lstsq": "torch.lstsq",
        "torch._VariableFunctionsClass.lt": "torch.lt",
        "torch.functional.boolean_dispatch.<locals>.fn": "torch.unique_consecutive",
        "torch._VariableFunctionsClass.lu_solve": "torch.lu_solve",
        "torch._VariableFunctionsClass.lu_unpack": "torch.lu_unpack",
        "torch.random.manual_seed": "torch.manual_seed",
        "torch._VariableFunctionsClass.margin_ranking_loss": "torch.margin_ranking_loss",
        "torch._VariableFunctionsClass.masked_fill": "torch.masked_fill",
        "torch._VariableFunctionsClass.masked_scatter": "torch.masked_scatter",
        "torch._VariableFunctionsClass.masked_select": "torch.masked_select",
        "torch._VariableFunctionsClass.matmul": "torch.matmul",
        "torch._VariableFunctionsClass.matrix_exp": "torch.matrix_exp",
        "torch._VariableFunctionsClass.matrix_power": "torch.matrix_power",
        "torch._linalg_utils.matrix_rank": "torch.matrix_rank",
        "torch._VariableFunctionsClass.max": "torch.max",
        "torch._VariableFunctionsClass.max_pool1d": "torch.max_pool1d",
        "torch._VariableFunctionsClass.max_pool1d_with_indices": "torch.max_pool1d_with_indices",
        "torch._VariableFunctionsClass.max_pool2d": "torch.max_pool2d",
        "torch._VariableFunctionsClass.max_pool3d": "torch.max_pool3d",
        "torch._VariableFunctionsClass.maximum": "torch.maximum",
        "torch._VariableFunctionsClass.mean": "torch.mean",
        "torch._VariableFunctionsClass.median": "torch.median",
        "torch.memory_format": "torch.memory_format",
        "torch.PyCapsule.merge_type_from_type_comment": "torch.merge_type_from_type_comment",
        "torch.functional.meshgrid": "torch.meshgrid",
        "torch._VariableFunctionsClass.min": "torch.min",
        "torch._VariableFunctionsClass.minimum": "torch.minimum",
        "torch._VariableFunctionsClass.miopen_batch_norm": "torch.miopen_batch_norm",
        "torch._VariableFunctionsClass.miopen_convolution": "torch.miopen_convolution",
        "torch._VariableFunctionsClass.miopen_convolution_add_relu": "torch.miopen_convolution_add_relu",
        "torch._VariableFunctionsClass.miopen_convolution_relu": "torch.miopen_convolution_relu",
        "torch._VariableFunctionsClass.miopen_convolution_transpose": "torch.miopen_convolution_transpose",
        "torch._VariableFunctionsClass.miopen_depthwise_convolution": "torch.miopen_depthwise_convolution",
        "torch._VariableFunctionsClass.miopen_rnn": "torch.miopen_rnn",
        "torch._VariableFunctionsClass.mkldnn_adaptive_avg_pool2d": "torch.mkldnn_adaptive_avg_pool2d",
        "torch._VariableFunctionsClass.mkldnn_convolution": "torch.mkldnn_convolution",
        "torch._VariableFunctionsClass.mkldnn_linear_backward_weights": "torch.mkldnn_linear_backward_weights",
        "torch._VariableFunctionsClass.mkldnn_max_pool2d": "torch.mkldnn_max_pool2d",
        "torch._VariableFunctionsClass.mkldnn_max_pool3d": "torch.mkldnn_max_pool3d",
        "torch._VariableFunctionsClass.mkldnn_rnn_layer": "torch.mkldnn_rnn_layer",
        "torch._VariableFunctionsClass.mm": "torch.mm",
        "torch._VariableFunctionsClass.mode": "torch.mode",
        "torch._VariableFunctionsClass.moveaxis": "torch.moveaxis",
        "torch._VariableFunctionsClass.movedim": "torch.movedim",
        "torch._VariableFunctionsClass.msort": "torch.msort",
        "torch._VariableFunctionsClass.mul": "torch.mul",
        "torch._VariableFunctionsClass.multinomial": "torch.multinomial",
        "torch._VariableFunctionsClass.multiply": "torch.multiply",
        "torch._VariableFunctionsClass.mv": "torch.mv",
        "torch._VariableFunctionsClass.mvlgamma": "torch.mvlgamma",
        "torch._VariableFunctionsClass.nan_to_num": "torch.nan_to_num",
        "torch._VariableFunctionsClass.nan_to_num_": "torch.nan_to_num_",
        "torch._VariableFunctionsClass.nanmean": "torch.nanmean",
        "torch._VariableFunctionsClass.nanmedian": "torch.nanmedian",
        "torch._VariableFunctionsClass.nanquantile": "torch.nanquantile",
        "torch._VariableFunctionsClass.nansum": "torch.nansum",
        "torch._VariableFunctionsClass.narrow": "torch.narrow",
        "torch._VariableFunctionsClass.narrow_copy": "torch.narrow_copy",
        "torch._VariableFunctionsClass.native_batch_norm": "torch.native_batch_norm",
        "torch._VariableFunctionsClass.native_channel_shuffle": "torch.nn.functional.native_channel_shuffle",
        "torch._VariableFunctionsClass.native_dropout": "torch.native_dropout",
        "torch._VariableFunctionsClass.native_group_norm": "torch.native_group_norm",
        "torch._VariableFunctionsClass.native_layer_norm": "torch.native_layer_norm",
        "torch._VariableFunctionsClass.native_norm": "torch.native_norm",
        "torch._VariableFunctionsClass.ne": "torch.ne",
        "torch._VariableFunctionsClass.neg": "torch.neg",
        "torch._VariableFunctionsClass.neg_": "torch.neg_",
        "torch._VariableFunctionsClass.negative": "torch.negative",
        "torch._VariableFunctionsClass.negative_": "torch.negative_",
        "torch._VariableFunctionsClass.nextafter": "torch.nextafter",
        "torch.autograd.grad_mode.no_grad": "torch.autograd.no_grad",
        "torch._VariableFunctionsClass.nonzero": "torch.nonzero",
        "torch._VariableFunctionsClass.nonzero_static": "torch.nonzero_static",
        "torch.functional.norm": "torch.norm",
        "torch._VariableFunctionsClass.norm_except_dim": "torch.norm_except_dim",
        "torch._VariableFunctionsClass.normal": "torch.normal",
        "torch._VariableFunctionsClass.not_equal": "torch.not_equal",
        "torch._VariableFunctionsClass.nuclear_norm": "torch.nuclear_norm",
        "torch._VariableFunctionsClass.numel": "torch.numel",
        "torch._VariableFunctionsClass.ones": "torch.ones",
        "torch._VariableFunctionsClass.ones_like": "torch.ones_like",
        "torch._ops.<module 'torch.ops.__qualname__' from 'torch.ops'>": "torch.ops",
        "torch._VariableFunctionsClass.orgqr": "torch.orgqr",
        "torch._VariableFunctionsClass.ormqr": "torch.ormqr",
        "torch._VariableFunctionsClass.outer": "torch.outer",
        "torch._VariableFunctionsClass.pairwise_distance": "torch.nn.functional.pairwise_distance",
        "torch.PyCapsule.parse_ir": "torch.parse_ir",
        "torch.PyCapsule.parse_schema": "torch.parse_schema",
        "torch.PyCapsule.parse_type_comment": "torch.parse_type_comment",
        "torch._lowrank.pca_lowrank": "torch.pca_lowrank",
        "torch._VariableFunctionsClass.pdist": "torch.nn.functional.pdist",
        "torch._VariableFunctionsClass.permute": "torch.permute",
        "torch._VariableFunctionsClass.permute_copy": "torch.permute_copy",
        "torch._VariableFunctionsClass.pinverse": "torch.pinverse",
        "torch._VariableFunctionsClass.pixel_shuffle": "torch.nn.functional.pixel_shuffle",
        "torch._VariableFunctionsClass.pixel_unshuffle": "torch.nn.functional.pixel_unshuffle",
        "torch._VariableFunctionsClass.poisson": "torch.poisson",
        "torch._VariableFunctionsClass.poisson_nll_loss": "torch.poisson_nll_loss",
        "torch._VariableFunctionsClass.polar": "torch.polar",
        "torch._VariableFunctionsClass.polygamma": "torch.polygamma",
        "torch._VariableFunctionsClass.positive": "torch.positive",
        "torch._VariableFunctionsClass.pow": "torch.pow",
        "torch._VariableFunctionsClass.prelu": "torch.nn.functional.prelu",
        "torch._utils_internal.prepare_multiprocessing_environment": "torch.prepare_multiprocessing_environment",
        "torch._VariableFunctionsClass.prod": "torch.prod",
        "torch._VariableFunctionsClass.promote_types": "torch.promote_types",
        "torch._VariableFunctionsClass.put": "torch.put",
        "torch._VariableFunctionsClass.q_per_channel_axis": "torch.q_per_channel_axis",
        "torch._VariableFunctionsClass.q_per_channel_scales": "torch.q_per_channel_scales",
        "torch._VariableFunctionsClass.q_per_channel_zero_points": "torch.q_per_channel_zero_points",
        "torch._VariableFunctionsClass.q_scale": "torch.q_scale",
        "torch._VariableFunctionsClass.q_zero_point": "torch.q_zero_point",
        "torch._VariableFunctionsClass.qr": "torch.qr",
        "torch.qscheme": "torch.qscheme",
        "torch._VariableFunctionsClass.quantile": "torch.quantile",
        "torch._VariableFunctionsClass.quantize_per_channel": "torch.quantize_per_channel",
        "torch._VariableFunctionsClass.quantize_per_tensor": "torch.quantize_per_tensor",
        "torch._VariableFunctionsClass.quantize_per_tensor_dynamic": "torch.quantize_per_tensor_dynamic",
        "torch._VariableFunctionsClass.quantized_batch_norm": "torch.quantized_batch_norm",
        "torch._ops.aten.PyCapsule.quantized_gru": "torch.quantized_gru",
        "torch._VariableFunctionsClass.quantized_gru_cell": "torch.quantized_gru_cell",
        "torch._ops.aten.PyCapsule.quantized_lstm": "torch.quantized_lstm",
        "torch._VariableFunctionsClass.quantized_lstm_cell": "torch.quantized_lstm_cell",
        "torch._VariableFunctionsClass.quantized_max_pool1d": "torch.quantized_max_pool1d",
        "torch._VariableFunctionsClass.quantized_max_pool2d": "torch.quantized_max_pool2d",
        "torch._VariableFunctionsClass.quantized_max_pool3d": "torch.quantized_max_pool3d",
        "torch._VariableFunctionsClass.quantized_rnn_relu_cell": "torch.quantized_rnn_relu_cell",
        "torch._VariableFunctionsClass.quantized_rnn_tanh_cell": "torch.quantized_rnn_tanh_cell",
        "torch._VariableFunctionsClass.rad2deg": "torch.rad2deg",
        "torch._VariableFunctionsClass.rad2deg_": "torch.rad2deg_",
        "torch._VariableFunctionsClass.rand": "torch.rand",
        "torch._VariableFunctionsClass.rand_like": "torch.rand_like",
        "torch._VariableFunctionsClass.randint": "torch.randint",
        "torch._VariableFunctionsClass.randint_like": "torch.randint_like",
        "torch._VariableFunctionsClass.randn": "torch.randn",
        "torch._VariableFunctionsClass.randn_like": "torch.randn_like",
        "torch._VariableFunctionsClass.randperm": "torch.randperm",
        "torch._VariableFunctionsClass.range": "torch.range",
        "torch._VariableFunctionsClass.ravel": "torch.ravel",
        "torch.PyCapsule.read_vitals": "torch.read_vitals",
        "torch._VariableFunctionsClass.real": "torch.real",
        "torch._VariableFunctionsClass.reciprocal": "torch.reciprocal",
        "torch._VariableFunctionsClass.reciprocal_": "torch.reciprocal_",
        "torch._VariableFunctionsClass.relu": "torch.relu",
        "torch._VariableFunctionsClass.relu_": "torch.nn.functional.relu_",
        "torch._VariableFunctionsClass.remainder": "torch.remainder",
        "torch._VariableFunctionsClass.renorm": "torch.renorm",
        "torch._VariableFunctionsClass.repeat_interleave": "torch.repeat_interleave",
        "torch._VariableFunctionsClass.reshape": "torch.reshape",
        "torch._VariableFunctionsClass.resize_as_": "torch.resize_as_",
        "torch._VariableFunctionsClass.resize_as_sparse_": "torch.resize_as_sparse_",
        "torch._VariableFunctionsClass.resolve_conj": "torch.resolve_conj",
        "torch._VariableFunctionsClass.resolve_neg": "torch.resolve_neg",
        "torch._VariableFunctionsClass.result_type": "torch.result_type",
        "torch._VariableFunctionsClass.rms_norm": "torch.rms_norm",
        "torch._VariableFunctionsClass.rnn_relu": "torch.rnn_relu",
        "torch._VariableFunctionsClass.rnn_relu_cell": "torch.rnn_relu_cell",
        "torch._VariableFunctionsClass.rnn_tanh": "torch.rnn_tanh",
        "torch._VariableFunctionsClass.rnn_tanh_cell": "torch.rnn_tanh_cell",
        "torch._VariableFunctionsClass.roll": "torch.roll",
        "torch._VariableFunctionsClass.rot90": "torch.rot90",
        "torch._VariableFunctionsClass.round": "torch.round",
        "torch._VariableFunctionsClass.round_": "torch.round_",
        "torch._VariableFunctionsClass.row_indices_copy": "torch.row_indices_copy",
        "torch._VariableFunctionsClass.row_stack": "torch.row_stack",
        "torch._VariableFunctionsClass.rrelu": "torch.rrelu",
        "torch._VariableFunctionsClass.rrelu_": "torch.nn.functional.rrelu_",
        "torch._VariableFunctionsClass.rsqrt": "torch.rsqrt",
        "torch._VariableFunctionsClass.rsqrt_": "torch.rsqrt_",
        "torch._VariableFunctionsClass.rsub": "torch.rsub",
        "torch._VariableFunctionsClass.saddmm": "torch.saddmm",
        "torch.serialization.save": "torch.save",
        "torch._VariableFunctionsClass.scalar_tensor": "torch.scalar_tensor",
        "torch._VariableFunctionsClass.scatter": "torch.scatter",
        "torch._VariableFunctionsClass.scatter_add": "torch.scatter_add",
        "torch._VariableFunctionsClass.scatter_reduce": "torch.scatter_reduce",
        "torch._VariableFunctionsClass.searchsorted": "torch.searchsorted",
        "torch.random.seed": "torch.seed",
        "torch._VariableFunctionsClass.segment_reduce": "torch.segment_reduce",
        "torch._VariableFunctionsClass.select": "torch.select",
        "torch._VariableFunctionsClass.select_copy": "torch.select_copy",
        "torch._VariableFunctionsClass.select_scatter": "torch.select_scatter",
        "torch._VariableFunctionsClass.selu": "torch.selu",
        "torch._VariableFunctionsClass.selu_": "torch.nn.functional.selu_",
        "torch.set_anomaly_enabled": "torch.set_anomaly_enabled",
        "torch.set_autocast_cache_enabled": "torch.set_autocast_cache_enabled",
        "torch.set_autocast_cpu_dtype": "torch.set_autocast_cpu_dtype",
        "torch.set_autocast_cpu_enabled": "torch.set_autocast_cpu_enabled",
        "torch.set_autocast_dtype": "torch.set_autocast_dtype",
        "torch.set_autocast_enabled": "torch.set_autocast_enabled",
        "torch.set_autocast_gpu_dtype": "torch.set_autocast_gpu_dtype",
        "torch.set_autocast_ipu_dtype": "torch.set_autocast_ipu_dtype",
        "torch.set_autocast_ipu_enabled": "torch.set_autocast_ipu_enabled",
        "torch.set_autocast_xla_dtype": "torch.set_autocast_xla_dtype",
        "torch.set_autocast_xla_enabled": "torch.set_autocast_xla_enabled",
        "torch.set_default_device": "torch.set_default_device",
        "torch.set_default_dtype": "torch.set_default_dtype",
        "torch.set_default_tensor_type": "torch.set_default_tensor_type",
        "torch.set_deterministic_debug_mode": "torch.set_deterministic_debug_mode",
        "torch.set_float32_matmul_precision": "torch.set_float32_matmul_precision",
        "torch.set_flush_denormal": "torch.set_flush_denormal",
        "torch.autograd.grad_mode.set_grad_enabled": "torch.autograd.set_grad_enabled",
        "torch.set_num_interop_threads": "torch.set_num_interop_threads",
        "torch.set_num_threads": "torch.set_num_threads",
        "torch._tensor_str.set_printoptions": "torch.set_printoptions",
        "torch.random.set_rng_state": "torch.set_rng_state",
        "torch.PyCapsule.set_vital": "torch.set_vital",
        "torch.set_warn_always": "torch.set_warn_always",
        "torch._VariableFunctionsClass.sgn": "torch.sgn",
        "torch._VariableFunctionsClass.sigmoid": "torch.sigmoid",
        "torch._VariableFunctionsClass.sigmoid_": "torch.sigmoid_",
        "torch._VariableFunctionsClass.sign": "torch.sign",
        "torch._VariableFunctionsClass.signbit": "torch.signbit",
        "torch._VariableFunctionsClass.sin": "torch.sin",
        "torch._VariableFunctionsClass.sin_": "torch.sin_",
        "torch._VariableFunctionsClass.sinc": "torch.sinc",
        "torch._VariableFunctionsClass.sinc_": "torch.sinc_",
        "torch._VariableFunctionsClass.sinh": "torch.sinh",
        "torch._VariableFunctionsClass.sinh_": "torch.sinh_",
        "torch._VariableFunctionsClass.slice_copy": "torch.slice_copy",
        "torch._VariableFunctionsClass.slice_inverse": "torch.slice_inverse",
        "torch._VariableFunctionsClass.slice_scatter": "torch.slice_scatter",
        "torch._VariableFunctionsClass.slogdet": "torch.slogdet",
        "torch._VariableFunctionsClass.smm": "torch.smm",
        "torch._VariableFunctionsClass.softmax": "torch.softmax",
        "torch._linalg_utils.solve": "torch.solve",
        "torch._VariableFunctionsClass.sort": "torch.sort",
        "torch._VariableFunctionsClass.sparse_bsc_tensor": "torch.sparse_bsc_tensor",
        "torch._VariableFunctionsClass.sparse_bsr_tensor": "torch.sparse_bsr_tensor",
        "torch._VariableFunctionsClass.sparse_compressed_tensor": "torch.sparse_compressed_tensor",
        "torch._VariableFunctionsClass.sparse_coo_tensor": "torch.sparse_coo_tensor",
        "torch._VariableFunctionsClass.sparse_csc_tensor": "torch.sparse_csc_tensor",
        "torch._VariableFunctionsClass.sparse_csr_tensor": "torch.sparse_csr_tensor",
        "torch.functional.split": "torch.split",
        "torch._VariableFunctionsClass.split_copy": "torch.split_copy",
        "torch._VariableFunctionsClass.split_with_sizes": "torch.split_with_sizes",
        "torch._VariableFunctionsClass.split_with_sizes_copy": "torch.split_with_sizes_copy",
        "torch._VariableFunctionsClass.spmm": "torch.spmm",
        "torch._VariableFunctionsClass.sqrt": "torch.sqrt",
        "torch._VariableFunctionsClass.sqrt_": "torch.sqrt_",
        "torch._VariableFunctionsClass.square": "torch.square",
        "torch._VariableFunctionsClass.square_": "torch.square_",
        "torch._VariableFunctionsClass.squeeze": "torch.squeeze",
        "torch._VariableFunctionsClass.squeeze_copy": "torch.squeeze_copy",
        "torch._VariableFunctionsClass.sspaddmm": "torch.sspaddmm",
        "torch._VariableFunctionsClass.stack": "torch.stack",
        "torch._VariableFunctionsClass.std": "torch.std",
        "torch._VariableFunctionsClass.std_mean": "torch.std_mean",
        "torch.functional.stft": "torch.stft",
        "torch._VariableFunctionsClass.sub": "torch.sub",
        "torch._VariableFunctionsClass.subtract": "torch.subtract",
        "torch._VariableFunctionsClass.sum": "torch.sum",
        "torch._VariableFunctionsClass.svd": "torch.svd",
        "torch._lowrank.svd_lowrank": "torch.svd_lowrank",
        "torch._VariableFunctionsClass.swapaxes": "torch.swapaxes",
        "torch._VariableFunctionsClass.swapdims": "torch.swapdims",
        "torch._VariableFunctionsClass.sym_constrain_range": "torch.sym_constrain_range",
        "torch._VariableFunctionsClass.sym_constrain_range_for_size": "torch.sym_constrain_range_for_size",
        "torch.sym_float": "torch.sym_float",
        "torch.sym_int": "torch.sym_int",
        "torch.sym_ite": "torch.sym_ite",
        "torch.sym_max": "torch.sym_max",
        "torch.sym_min": "torch.sym_min",
        "torch.sym_not": "torch.sym_not",
        "torch._sym_sqrt": "torch.sym_sqrt",
        "torch._linalg_utils._symeig": "torch.symeig",
        "torch._VariableFunctionsClass.t": "torch.t",
        "torch._VariableFunctionsClass.t_copy": "torch.t_copy",
        "torch._VariableFunctionsClass.take": "torch.take",
        "torch._VariableFunctionsClass.take_along_dim": "torch.take_along_dim",
        "torch._VariableFunctionsClass.tan": "torch.tan",
        "torch._VariableFunctionsClass.tan_": "torch.tan_",
        "torch._VariableFunctionsClass.tanh": "torch.tanh",
        "torch._VariableFunctionsClass.tanh_": "torch.tanh_",
        "torch._VariableFunctionsClass.tensor": "torch.tensor",
        "torch._VariableFunctionsClass.tensor_split": "torch.tensor_split",
        "torch.functional.tensordot": "torch.tensordot",
        "torch._VariableFunctionsClass.threshold": "torch.threshold",
        "torch._VariableFunctionsClass.threshold_": "torch.nn.functional.threshold_",
        "torch._VariableFunctionsClass.tile": "torch.tile",
        "torch._C._to_dlpack": "torch.to_dlpack",
        "torch._VariableFunctionsClass.topk": "torch.topk",
        "torch._VariableFunctionsClass.trace": "torch.trace",
        "torch._VariableFunctionsClass.transpose": "torch.transpose",
        "torch._VariableFunctionsClass.transpose_copy": "torch.transpose_copy",
        "torch._VariableFunctionsClass.trapezoid": "torch.trapezoid",
        "torch._VariableFunctionsClass.trapz": "torch.trapz",
        "torch._VariableFunctionsClass.triangular_solve": "torch.triangular_solve",
        "torch._VariableFunctionsClass.tril": "torch.tril",
        "torch._VariableFunctionsClass.tril_indices": "torch.tril_indices",
        "torch._VariableFunctionsClass.triplet_margin_loss": "torch.triplet_margin_loss",
        "torch._VariableFunctionsClass.triu": "torch.triu",
        "torch._VariableFunctionsClass.triu_indices": "torch.triu_indices",
        "torch._VariableFunctionsClass.true_divide": "torch.true_divide",
        "torch._VariableFunctionsClass.trunc": "torch.trunc",
        "torch._VariableFunctionsClass.trunc_": "torch.trunc_",
        "torch.typename": "torch.typename",
        "torch._VariableFunctionsClass.unbind": "torch.unbind",
        "torch._VariableFunctionsClass.unbind_copy": "torch.unbind_copy",
        "torch._VariableFunctionsClass.unflatten": "torch.unflatten",
        "torch._VariableFunctionsClass.unfold_copy": "torch.unfold_copy",
        "torch.PyCapsule.unify_type_list": "torch.unify_type_list",
        "torch.functional.unravel_index": "torch.unravel_index",
        "torch._VariableFunctionsClass.unsafe_chunk": "torch.unsafe_chunk",
        "torch._VariableFunctionsClass.unsafe_split": "torch.unsafe_split",
        "torch._VariableFunctionsClass.unsafe_split_with_sizes": "torch.unsafe_split_with_sizes",
        "torch._VariableFunctionsClass.unsqueeze": "torch.unsqueeze",
        "torch._VariableFunctionsClass.unsqueeze_copy": "torch.unsqueeze_copy",
        "torch.use_deterministic_algorithms": "torch.use_deterministic_algorithms",
        "torch._VariableFunctionsClass.values_copy": "torch.values_copy",
        "torch._VariableFunctionsClass.vander": "torch.vander",
        "torch._VariableFunctionsClass.var": "torch.var",
        "torch._VariableFunctionsClass.var_mean": "torch.var_mean",
        "torch._VariableFunctionsClass.vdot": "torch.vdot",
        "torch._VariableFunctionsClass.view_as_complex": "torch.view_as_complex",
        "torch._VariableFunctionsClass.view_as_complex_copy": "torch.view_as_complex_copy",
        "torch._VariableFunctionsClass.view_as_real": "torch.view_as_real",
        "torch._VariableFunctionsClass.view_as_real_copy": "torch.view_as_real_copy",
        "torch._VariableFunctionsClass.view_copy": "torch.view_copy",
        "torch.PyCapsule.vitals_enabled": "torch.vitals_enabled",
        "torch.func.vmap": "torch.vmap",
        "torch._VariableFunctionsClass.vsplit": "torch.vsplit",
        "torch._VariableFunctionsClass.vstack": "torch.vstack",
        "torch.PyCapsule.wait": "torch.wait",
        "torch._VariableFunctionsClass.where": "torch.where",
        "torch._VariableFunctionsClass.xlogy": "torch.xlogy",
        "torch._VariableFunctionsClass.xlogy_": "torch.xlogy_",
        "torch._VariableFunctionsClass.zero_": "torch.zero_",
        "torch._VariableFunctionsClass.zeros": "torch.zeros",
        "torch._VariableFunctionsClass.zeros_like": "torch.zeros_like",
        "torch.nn.modules.pooling.AdaptiveAvgPool1d": "torch.nn.AdaptiveAvgPool1d",
        "torch.nn.modules.pooling.AdaptiveAvgPool2d": "torch.nn.AdaptiveAvgPool2d",
        "torch.nn.modules.pooling.AdaptiveAvgPool3d": "torch.nn.AdaptiveAvgPool3d",
        "torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss": "torch.nn.AdaptiveLogSoftmaxWithLoss",
        "torch.nn.modules.pooling.AdaptiveMaxPool1d": "torch.nn.AdaptiveMaxPool1d",
        "torch.nn.modules.pooling.AdaptiveMaxPool2d": "torch.nn.AdaptiveMaxPool2d",
        "torch.nn.modules.pooling.AdaptiveMaxPool3d": "torch.nn.AdaptiveMaxPool3d",
        "torch.nn.modules.dropout.AlphaDropout": "torch.nn.AlphaDropout",
        "torch.nn.modules.pooling.AvgPool1d": "torch.nn.AvgPool1d",
        "torch.nn.modules.pooling.AvgPool2d": "torch.nn.AvgPool2d",
        "torch.nn.modules.pooling.AvgPool3d": "torch.nn.AvgPool3d",
        "torch.nn.modules.loss.BCELoss": "torch.nn.BCELoss",
        "torch.nn.modules.loss.BCEWithLogitsLoss": "torch.nn.BCEWithLogitsLoss",
        "torch.nn.modules.batchnorm.BatchNorm1d": "torch.nn.BatchNorm1d",
        "torch.nn.modules.batchnorm.BatchNorm2d": "torch.nn.BatchNorm2d",
        "torch.nn.modules.batchnorm.BatchNorm3d": "torch.nn.BatchNorm3d",
        "torch.nn.modules.linear.Bilinear": "torch.nn.Bilinear",
        "torch.nn.modules.activation.CELU": "torch.nn.CELU",
        "torch.nn.modules.loss.CTCLoss": "torch.nn.CTCLoss",
        "torch.nn.modules.channelshuffle.ChannelShuffle": "torch.nn.ChannelShuffle",
        "torch.nn.modules.padding.CircularPad1d": "torch.nn.CircularPad1d",
        "torch.nn.modules.padding.CircularPad2d": "torch.nn.CircularPad2d",
        "torch.nn.modules.padding.CircularPad3d": "torch.nn.CircularPad3d",
        "torch.nn.modules.padding.ConstantPad1d": "torch.nn.ConstantPad1d",
        "torch.nn.modules.padding.ConstantPad2d": "torch.nn.ConstantPad2d",
        "torch.nn.modules.padding.ConstantPad3d": "torch.nn.ConstantPad3d",
        "torch.nn.modules.container.Container": "torch.nn.Container",
        "torch.nn.modules.conv.Conv1d": "torch.nn.Conv1d",
        "torch.nn.modules.conv.Conv2d": "torch.nn.Conv2d",
        "torch.nn.modules.conv.Conv3d": "torch.nn.Conv3d",
        "torch.nn.modules.conv.ConvTranspose1d": "torch.nn.ConvTranspose1d",
        "torch.nn.modules.conv.ConvTranspose2d": "torch.nn.ConvTranspose2d",
        "torch.nn.modules.conv.ConvTranspose3d": "torch.nn.ConvTranspose3d",
        "torch.nn.modules.loss.CosineEmbeddingLoss": "torch.nn.CosineEmbeddingLoss",
        "torch.nn.modules.distance.CosineSimilarity": "torch.nn.CosineSimilarity",
        "torch.nn.modules.loss.CrossEntropyLoss": "torch.nn.CrossEntropyLoss",
        "torch.nn.modules.normalization.CrossMapLRN2d": "torch.nn.CrossMapLRN2d",
        "torch.nn.parallel.data_parallel.DataParallel": "torch.nn.DataParallel",
        "torch.nn.modules.dropout.Dropout": "torch.nn.Dropout",
        "torch.nn.modules.dropout.Dropout1d": "torch.nn.Dropout1d",
        "torch.nn.modules.dropout.Dropout2d": "torch.nn.Dropout2d",
        "torch.nn.modules.dropout.Dropout3d": "torch.nn.Dropout3d",
        "torch.nn.modules.activation.ELU": "torch.nn.ELU",
        "torch.nn.modules.sparse.Embedding": "torch.nn.Embedding",
        "torch.nn.modules.sparse.EmbeddingBag": "torch.nn.EmbeddingBag",
        "torch.nn.modules.dropout.FeatureAlphaDropout": "torch.nn.FeatureAlphaDropout",
        "torch.nn.modules.flatten.Flatten": "torch.nn.Flatten",
        "torch.nn.modules.fold.Fold": "torch.nn.Fold",
        "torch.nn.modules.pooling.FractionalMaxPool2d": "torch.nn.FractionalMaxPool2d",
        "torch.nn.modules.pooling.FractionalMaxPool3d": "torch.nn.FractionalMaxPool3d",
        "torch.nn.modules.activation.GELU": "torch.nn.GELU",
        "torch.nn.modules.activation.GLU": "torch.nn.GLU",
        "torch.nn.modules.rnn.GRU": "torch.nn.GRU",
        "torch.nn.modules.rnn.GRUCell": "torch.nn.GRUCell",
        "torch.nn.modules.loss.GaussianNLLLoss": "torch.nn.GaussianNLLLoss",
        "torch.nn.modules.normalization.GroupNorm": "torch.nn.GroupNorm",
        "torch.nn.modules.activation.Hardshrink": "torch.nn.Hardshrink",
        "torch.nn.modules.activation.Hardsigmoid": "torch.nn.Hardsigmoid",
        "torch.nn.modules.activation.Hardswish": "torch.nn.Hardswish",
        "torch.nn.modules.activation.Hardtanh": "torch.nn.Hardtanh",
        "torch.nn.modules.loss.HingeEmbeddingLoss": "torch.nn.HingeEmbeddingLoss",
        "torch.nn.modules.loss.HuberLoss": "torch.nn.HuberLoss",
        "torch.nn.modules.linear.Identity": "torch.nn.Identity",
        "torch.nn.modules.instancenorm.InstanceNorm1d": "torch.nn.InstanceNorm1d",
        "torch.nn.modules.instancenorm.InstanceNorm2d": "torch.nn.InstanceNorm2d",
        "torch.nn.modules.instancenorm.InstanceNorm3d": "torch.nn.InstanceNorm3d",
        "torch.nn.modules.loss.KLDivLoss": "torch.nn.KLDivLoss",
        "torch.nn.modules.loss.L1Loss": "torch.nn.L1Loss",
        "torch.nn.modules.pooling.LPPool1d": "torch.nn.LPPool1d",
        "torch.nn.modules.pooling.LPPool2d": "torch.nn.LPPool2d",
        "torch.nn.modules.pooling.LPPool3d": "torch.nn.LPPool3d",
        "torch.nn.modules.rnn.LSTM": "torch.nn.LSTM",
        "torch.nn.modules.rnn.LSTMCell": "torch.nn.LSTMCell",
        "torch.nn.modules.normalization.LayerNorm": "torch.nn.LayerNorm",
        "torch.nn.modules.batchnorm.LazyBatchNorm1d": "torch.nn.LazyBatchNorm1d",
        "torch.nn.modules.batchnorm.LazyBatchNorm2d": "torch.nn.LazyBatchNorm2d",
        "torch.nn.modules.batchnorm.LazyBatchNorm3d": "torch.nn.LazyBatchNorm3d",
        "torch.nn.modules.conv.LazyConv1d": "torch.nn.LazyConv1d",
        "torch.nn.modules.conv.LazyConv2d": "torch.nn.LazyConv2d",
        "torch.nn.modules.conv.LazyConv3d": "torch.nn.LazyConv3d",
        "torch.nn.modules.conv.LazyConvTranspose1d": "torch.nn.LazyConvTranspose1d",
        "torch.nn.modules.conv.LazyConvTranspose2d": "torch.nn.LazyConvTranspose2d",
        "torch.nn.modules.conv.LazyConvTranspose3d": "torch.nn.LazyConvTranspose3d",
        "torch.nn.modules.instancenorm.LazyInstanceNorm1d": "torch.nn.LazyInstanceNorm1d",
        "torch.nn.modules.instancenorm.LazyInstanceNorm2d": "torch.nn.LazyInstanceNorm2d",
        "torch.nn.modules.instancenorm.LazyInstanceNorm3d": "torch.nn.LazyInstanceNorm3d",
        "torch.nn.modules.linear.LazyLinear": "torch.nn.LazyLinear",
        "torch.nn.modules.activation.LeakyReLU": "torch.nn.LeakyReLU",
        "torch.nn.modules.linear.Linear": "torch.nn.Linear",
        "torch.nn.modules.normalization.LocalResponseNorm": "torch.nn.LocalResponseNorm",
        "torch.nn.modules.activation.LogSigmoid": "torch.nn.LogSigmoid",
        "torch.nn.modules.activation.LogSoftmax": "torch.nn.LogSoftmax",
        "torch.nn.modules.loss.MSELoss": "torch.nn.MSELoss",
        "torch.nn.modules.loss.MarginRankingLoss": "torch.nn.MarginRankingLoss",
        "torch.nn.modules.pooling.MaxPool1d": "torch.nn.MaxPool1d",
        "torch.nn.modules.pooling.MaxPool2d": "torch.nn.MaxPool2d",
        "torch.nn.modules.pooling.MaxPool3d": "torch.nn.MaxPool3d",
        "torch.nn.modules.pooling.MaxUnpool1d": "torch.nn.MaxUnpool1d",
        "torch.nn.modules.pooling.MaxUnpool2d": "torch.nn.MaxUnpool2d",
        "torch.nn.modules.pooling.MaxUnpool3d": "torch.nn.MaxUnpool3d",
        "torch.nn.modules.activation.Mish": "torch.nn.Mish",
        "torch.nn.modules.module.Module": "torch.nn.Module",
        "torch.nn.modules.container.ModuleDict": "torch.nn.ModuleDict",
        "torch.nn.modules.container.ModuleList": "torch.nn.ModuleList",
        "torch.nn.modules.loss.MultiLabelMarginLoss": "torch.nn.MultiLabelMarginLoss",
        "torch.nn.modules.loss.MultiLabelSoftMarginLoss": "torch.nn.MultiLabelSoftMarginLoss",
        "torch.nn.modules.loss.MultiMarginLoss": "torch.nn.MultiMarginLoss",
        "torch.nn.modules.activation.MultiheadAttention": "torch.nn.MultiheadAttention",
        "torch.nn.modules.loss.NLLLoss": "torch.nn.NLLLoss",
        "torch.nn.modules.loss.NLLLoss2d": "torch.nn.NLLLoss2d",
        "torch.nn.modules.activation.PReLU": "torch.nn.PReLU",
        "torch.nn.modules.distance.PairwiseDistance": "torch.nn.PairwiseDistance",
        "torch.nn.parameter.Parameter": "torch.nn.Parameter",
        "torch.nn.modules.container.ParameterDict": "torch.nn.ParameterDict",
        "torch.nn.modules.container.ParameterList": "torch.nn.ParameterList",
        "torch.nn.modules.pixelshuffle.PixelShuffle": "torch.nn.PixelShuffle",
        "torch.nn.modules.pixelshuffle.PixelUnshuffle": "torch.nn.PixelUnshuffle",
        "torch.nn.modules.loss.PoissonNLLLoss": "torch.nn.PoissonNLLLoss",
        "torch.nn.modules.normalization.RMSNorm": "torch.nn.RMSNorm",
        "torch.nn.modules.rnn.RNN": "torch.nn.RNN",
        "torch.nn.modules.rnn.RNNBase": "torch.nn.RNNBase",
        "torch.nn.modules.rnn.RNNCell": "torch.nn.RNNCell",
        "torch.nn.modules.rnn.RNNCellBase": "torch.nn.RNNCellBase",
        "torch.nn.modules.activation.RReLU": "torch.nn.RReLU",
        "torch.nn.modules.activation.ReLU": "torch.nn.ReLU",
        "torch.nn.modules.activation.ReLU6": "torch.nn.ReLU6",
        "torch.nn.modules.padding.ReflectionPad1d": "torch.nn.ReflectionPad1d",
        "torch.nn.modules.padding.ReflectionPad2d": "torch.nn.ReflectionPad2d",
        "torch.nn.modules.padding.ReflectionPad3d": "torch.nn.ReflectionPad3d",
        "torch.nn.modules.padding.ReplicationPad1d": "torch.nn.ReplicationPad1d",
        "torch.nn.modules.padding.ReplicationPad2d": "torch.nn.ReplicationPad2d",
        "torch.nn.modules.padding.ReplicationPad3d": "torch.nn.ReplicationPad3d",
        "torch.nn.modules.activation.SELU": "torch.nn.SELU",
        "torch.nn.modules.container.Sequential": "torch.nn.Sequential",
        "torch.nn.modules.activation.SiLU": "torch.nn.SiLU",
        "torch.nn.modules.activation.Sigmoid": "torch.nn.Sigmoid",
        "torch.nn.modules.loss.SmoothL1Loss": "torch.nn.SmoothL1Loss",
        "torch.nn.modules.loss.SoftMarginLoss": "torch.nn.SoftMarginLoss",
        "torch.nn.modules.activation.Softmax": "torch.nn.Softmax",
        "torch.nn.modules.activation.Softmax2d": "torch.nn.Softmax2d",
        "torch.nn.modules.activation.Softmin": "torch.nn.Softmin",
        "torch.nn.modules.activation.Softplus": "torch.nn.Softplus",
        "torch.nn.modules.activation.Softshrink": "torch.nn.Softshrink",
        "torch.nn.modules.activation.Softsign": "torch.nn.Softsign",
        "torch.nn.modules.batchnorm.SyncBatchNorm": "torch.nn.SyncBatchNorm",
        "torch.nn.modules.activation.Tanh": "torch.nn.Tanh",
        "torch.nn.modules.activation.Tanhshrink": "torch.nn.Tanhshrink",
        "torch.nn.modules.activation.Threshold": "torch.nn.Threshold",
        "torch.nn.modules.transformer.Transformer": "torch.nn.Transformer",
        "torch.nn.modules.transformer.TransformerDecoder": "torch.nn.TransformerDecoder",
        "torch.nn.modules.transformer.TransformerDecoderLayer": "torch.nn.TransformerDecoderLayer",
        "torch.nn.modules.transformer.TransformerEncoder": "torch.nn.TransformerEncoder",
        "torch.nn.modules.transformer.TransformerEncoderLayer": "torch.nn.TransformerEncoderLayer",
        "torch.nn.modules.loss.TripletMarginLoss": "torch.nn.TripletMarginLoss",
        "torch.nn.modules.loss.TripletMarginWithDistanceLoss": "torch.nn.TripletMarginWithDistanceLoss",
        "torch.nn.modules.flatten.Unflatten": "torch.nn.Unflatten",
        "torch.nn.modules.fold.Unfold": "torch.nn.Unfold",
        "torch.nn.parameter.UninitializedBuffer": "torch.nn.UninitializedBuffer",
        "torch.nn.parameter.UninitializedParameter": "torch.nn.UninitializedParameter",
        "torch.nn.modules.upsampling.Upsample": "torch.nn.Upsample",
        "torch.nn.modules.upsampling.UpsamplingBilinear2d": "torch.nn.UpsamplingBilinear2d",
        "torch.nn.modules.upsampling.UpsamplingNearest2d": "torch.nn.UpsamplingNearest2d",
        "torch.nn.modules.padding.ZeroPad1d": "torch.nn.ZeroPad1d",
        "torch.nn.modules.padding.ZeroPad2d": "torch.nn.ZeroPad2d",
        "torch.nn.modules.padding.ZeroPad3d": "torch.nn.ZeroPad3d",
        "torch.nn.factory_kwargs": "torch.nn.factory_kwargs",
        "torch.nn.functional.adaptive_avg_pool2d": "torch.nn.functional.adaptive_avg_pool2d",
        "torch.nn.functional.adaptive_avg_pool3d": "torch.nn.functional.adaptive_avg_pool3d",
        "torch.nn.functional.boolean_dispatch.<locals>.fn": "torch.nn.functional.max_pool3d",
        "torch.nn.functional.adaptive_max_pool1d_with_indices": "torch.nn.functional.adaptive_max_pool1d_with_indices",
        "torch.nn.functional.adaptive_max_pool2d_with_indices": "torch.nn.functional.adaptive_max_pool2d_with_indices",
        "torch.nn.functional.adaptive_max_pool3d_with_indices": "torch.nn.functional.adaptive_max_pool3d_with_indices",
        "torch.nn.functional.affine_grid": "torch.nn.functional.affine_grid",
        "torch.nn.functional.alpha_dropout": "torch.nn.functional.alpha_dropout",
        "torch.nn.functional.assert_int_or_pair": "torch.nn.functional.assert_int_or_pair",
        "torch._C._nn.avg_pool2d": "torch.nn.functional.avg_pool2d",
        "torch._C._nn.avg_pool3d": "torch.nn.functional.avg_pool3d",
        "torch.nn.functional.batch_norm": "torch.nn.functional.batch_norm",
        "torch.nn.functional.binary_cross_entropy": "torch.nn.functional.binary_cross_entropy",
        "torch.nn.functional.binary_cross_entropy_with_logits": "torch.nn.functional.binary_cross_entropy_with_logits",
        "torch._jit_internal.boolean_dispatch": "torch.nn.functional.boolean_dispatch",
        "torch.nn.functional.celu": "torch.nn.functional.celu",
        "torch.nn.functional.cosine_embedding_loss": "torch.nn.functional.cosine_embedding_loss",
        "torch.nn.functional.cross_entropy": "torch.nn.functional.cross_entropy",
        "torch.nn.functional.ctc_loss": "torch.nn.functional.ctc_loss",
        "torch.nn.functional.dropout": "torch.nn.functional.dropout",
        "torch.nn.functional.dropout1d": "torch.nn.functional.dropout1d",
        "torch.nn.functional.dropout2d": "torch.nn.functional.dropout2d",
        "torch.nn.functional.dropout3d": "torch.nn.functional.dropout3d",
        "torch.nn.functional.elu": "torch.nn.functional.elu",
        "torch._C._nn.elu_": "torch.nn.functional.elu_",
        "torch.nn.functional.embedding": "torch.nn.functional.embedding",
        "torch.nn.functional.embedding_bag": "torch.nn.functional.embedding_bag",
        "torch.nn.functional.feature_alpha_dropout": "torch.nn.functional.feature_alpha_dropout",
        "torch.nn.functional.fold": "torch.nn.functional.fold",
        "torch.nn.functional.fractional_max_pool2d_with_indices": "torch.nn.functional.fractional_max_pool2d_with_indices",
        "torch.nn.functional.fractional_max_pool3d_with_indices": "torch.nn.functional.fractional_max_pool3d_with_indices",
        "torch.nn.functional.gaussian_nll_loss": "torch.nn.functional.gaussian_nll_loss",
        "torch._C._nn.gelu": "torch.nn.functional.gelu",
        "torch.nn.functional.glu": "torch.nn.functional.glu",
        "torch.nn.functional.grid_sample": "torch.nn.functional.grid_sample",
        "torch.nn.functional.group_norm": "torch.nn.functional.group_norm",
        "torch.nn.functional.gumbel_softmax": "torch.nn.functional.gumbel_softmax",
        "torch.overrides.handle_torch_function": "torch.autograd.handle_torch_function",
        "torch.nn.functional.hardsigmoid": "torch.nn.functional.hardsigmoid",
        "torch.nn.functional.hardswish": "torch.nn.functional.hardswish",
        "torch.nn.functional.hardtanh": "torch.nn.functional.hardtanh",
        "torch._C._nn.hardtanh_": "torch.nn.functional.hardtanh_",
        "torch._C._has_torch_function": "torch.autograd.has_torch_function",
        "torch._C._has_torch_function_unary": "torch.nn.functional.has_torch_function_unary",
        "torch._C._has_torch_function_variadic": "torch.nn.functional.has_torch_function_variadic",
        "torch.nn.functional.hinge_embedding_loss": "torch.nn.functional.hinge_embedding_loss",
        "torch.nn.functional.huber_loss": "torch.nn.functional.huber_loss",
        "torch.nn.functional.instance_norm": "torch.nn.functional.instance_norm",
        "torch.nn.functional.interpolate": "torch.nn.functional.interpolate",
        "torch.nn.functional.kl_div": "torch.nn.functional.kl_div",
        "torch.nn.functional.l1_loss": "torch.nn.functional.l1_loss",
        "torch.nn.functional.layer_norm": "torch.nn.functional.layer_norm",
        "torch.nn.functional.leaky_relu": "torch.nn.functional.leaky_relu",
        "torch._C._nn.leaky_relu_": "torch.nn.functional.leaky_relu_",
        "torch._C._nn.linear": "torch.nn.functional.linear",
        "torch.nn.functional.local_response_norm": "torch.nn.functional.local_response_norm",
        "torch.nn.functional.log_softmax": "torch.nn.functional.log_softmax",
        "torch._C._nn.log_sigmoid": "torch.nn.functional.logsigmoid",
        "torch.nn.functional.lp_pool1d": "torch.nn.functional.lp_pool1d",
        "torch.nn.functional.lp_pool2d": "torch.nn.functional.lp_pool2d",
        "torch.nn.functional.lp_pool3d": "torch.nn.functional.lp_pool3d",
        "torch.nn.functional.margin_ranking_loss": "torch.nn.functional.margin_ranking_loss",
        "torch.nn.functional.max_pool1d_with_indices": "torch.nn.functional.max_pool1d_with_indices",
        "torch.nn.functional.max_pool2d_with_indices": "torch.nn.functional.max_pool2d_with_indices",
        "torch.nn.functional.max_pool3d_with_indices": "torch.nn.functional.max_pool3d_with_indices",
        "torch.nn.functional.max_unpool1d": "torch.nn.functional.max_unpool1d",
        "torch.nn.functional.max_unpool2d": "torch.nn.functional.max_unpool2d",
        "torch.nn.functional.max_unpool3d": "torch.nn.functional.max_unpool3d",
        "torch.nn.functional.mish": "torch.nn.functional.mish",
        "torch.nn.functional.mse_loss": "torch.nn.functional.mse_loss",
        "torch.nn.functional.multi_head_attention_forward": "torch.nn.functional.multi_head_attention_forward",
        "torch.nn.functional.multi_margin_loss": "torch.nn.functional.multi_margin_loss",
        "torch.nn.functional.multilabel_margin_loss": "torch.nn.functional.multilabel_margin_loss",
        "torch.nn.functional.multilabel_soft_margin_loss": "torch.nn.functional.multilabel_soft_margin_loss",
        "torch.nn.functional.nll_loss": "torch.nn.functional.nll_loss",
        "torch.nn.functional.normalize": "torch.nn.functional.normalize",
        "torch._C._nn.one_hot": "torch.nn.functional.one_hot",
        "torch.nn.functional.pad": "torch.nn.functional.pad",
        "torch.nn.functional.poisson_nll_loss": "torch.nn.functional.poisson_nll_loss",
        "torch.nn.functional.relu": "torch.nn.functional.relu",
        "torch.nn.functional.relu6": "torch.nn.functional.relu6",
        "torch.nn.functional.rms_norm": "torch.nn.functional.rms_norm",
        "torch.nn.functional.rrelu": "torch.nn.functional.rrelu",
        "torch._C._nn.scaled_dot_product_attention": "torch.nn.functional.scaled_dot_product_attention",
        "torch.nn.functional.selu": "torch.nn.functional.selu",
        "torch.nn.functional.sigmoid": "torch.nn.functional.sigmoid",
        "torch.nn.functional.silu": "torch.nn.functional.silu",
        "torch.nn.functional.smooth_l1_loss": "torch.nn.functional.smooth_l1_loss",
        "torch.nn.functional.soft_margin_loss": "torch.nn.functional.soft_margin_loss",
        "torch.nn.functional.softmax": "torch.nn.functional.softmax",
        "torch.nn.functional.softmin": "torch.nn.functional.softmin",
        "torch._C._nn.softplus": "torch.nn.functional.softplus",
        "torch._C._nn.softshrink": "torch.nn.functional.softshrink",
        "torch.nn.functional.softsign": "torch.nn.functional.softsign",
        "torch.nn.functional.tanh": "torch.nn.functional.tanh",
        "torch.nn.functional.tanhshrink": "torch.nn.functional.tanhshrink",
        "torch.nn.functional._threshold": "torch.nn.functional.threshold",
        "torch.nn.functional.triplet_margin_loss": "torch.nn.functional.triplet_margin_loss",
        "torch.nn.functional.triplet_margin_with_distance_loss": "torch.nn.functional.triplet_margin_with_distance_loss",
        "torch.nn.functional.unfold": "torch.nn.functional.unfold",
        "torch.nn.functional.upsample": "torch.nn.functional.upsample",
        "torch.nn.functional.upsample_bilinear": "torch.nn.functional.upsample_bilinear",
        "torch.nn.functional.upsample_nearest": "torch.nn.functional.upsample_nearest",
        "torch.optim.asgd.ASGD": "torch.optim.ASGD",
        "torch.optim.adadelta.Adadelta": "torch.optim.Adadelta",
        "torch.optim.adagrad.Adagrad": "torch.optim.Adagrad",
        "torch.optim.adam.Adam": "torch.optim.Adam",
        "torch.optim.adamw.AdamW": "torch.optim.AdamW",
        "torch.optim.adamax.Adamax": "torch.optim.Adamax",
        "torch.optim.lbfgs.LBFGS": "torch.optim.LBFGS",
        "torch.optim.nadam.NAdam": "torch.optim.NAdam",
        "torch.optim.optimizer.Optimizer": "torch.optim.Optimizer",
        "torch.optim.radam.RAdam": "torch.optim.RAdam",
        "torch.optim.rmsprop.RMSprop": "torch.optim.RMSprop",
        "torch.optim.rprop.Rprop": "torch.optim.Rprop",
        "torch.optim.sgd.SGD": "torch.optim.SGD",
        "torch.optim.sparse_adam.SparseAdam": "torch.optim.SparseAdam",
        "torch.utils.throughput_benchmark.ThroughputBenchmark": "torch.utils.ThroughputBenchmark",
        "torch.utils.deterministic.torch.utils.deterministic": "torch.utils.deterministic",
        "torch.utils.backend_registration.generate_methods_for_privateuse1_backend": "torch.utils.generate_methods_for_privateuse1_backend",
        "torch.utils.cpp_backtrace.get_cpp_backtrace": "torch.utils.get_cpp_backtrace",
        "torch.utils.backend_registration.rename_privateuse1_backend": "torch.utils.rename_privateuse1_backend",
        "torch.utils.set_module": "torch.jit.set_module",
        "torch.utils.swap_tensors": "torch.utils.swap_tensors",
        "torch.utils.data.sampler.BatchSampler": "torch.utils.data.BatchSampler",
        "torch.utils.data.dataset.ChainDataset": "torch.utils.data.ChainDataset",
        "torch.utils.data.dataset.ConcatDataset": "torch.utils.data.ConcatDataset",
        "torch.utils.data.datapipes.datapipe.DFIterDataPipe": "torch.utils.data.DFIterDataPipe",
        "torch.utils.data.datapipes.datapipe.DataChunk": "torch.utils.data.DataChunk",
        "torch.utils.data.dataloader.DataLoader": "torch.utils.data.DataLoader",
        "torch.utils.data.dataset.Dataset": "torch.utils.data.Dataset",
        "torch.utils.data.distributed.DistributedSampler": "torch.utils.data.DistributedSampler",
        "torch.utils.data.datapipes.datapipe.IterDataPipe": "torch.utils.data.IterDataPipe",
        "torch.utils.data.dataset.IterableDataset": "torch.utils.data.IterableDataset",
        "torch.utils.data.datapipes.datapipe.MapDataPipe": "torch.utils.data.MapDataPipe",
        "torch.utils.data.sampler.RandomSampler": "torch.utils.data.RandomSampler",
        "torch.utils.data.sampler.Sampler": "torch.utils.data.Sampler",
        "torch.utils.data.sampler.SequentialSampler": "torch.utils.data.SequentialSampler",
        "torch.utils.data.dataset.StackDataset": "torch.utils.data.StackDataset",
        "torch.utils.data.dataset.Subset": "torch.utils.data.Subset",
        "torch.utils.data.sampler.SubsetRandomSampler": "torch.utils.data.SubsetRandomSampler",
        "torch.utils.data.dataset.TensorDataset": "torch.utils.data.TensorDataset",
        "torch.utils.data.sampler.WeightedRandomSampler": "torch.utils.data.WeightedRandomSampler",
        "torch.utils.data.datapipes._decorator.argument_validation": "torch.utils.data.argument_validation",
        "torch.utils.data._utils.collate.default_collate": "torch.utils.data.default_collate",
        "torch.utils.data._utils.collate.default_convert": "torch.utils.data.default_convert",
        "torch.utils.data.datapipes._decorator.functional_datapipe": "torch.utils.data.functional_datapipe",
        "torch.utils.data._utils.worker.get_worker_info": "torch.utils.data.get_worker_info",
        "torch.utils.data.datapipes._decorator.guaranteed_datapipes_determinism": "torch.utils.data.guaranteed_datapipes_determinism",
        "torch.utils.data.datapipes._decorator.non_deterministic": "torch.utils.data.non_deterministic",
        "torch.utils.data.dataset.random_split": "torch.utils.data.random_split",
        "torch.utils.data.datapipes._decorator.runtime_validation": "torch.utils.data.runtime_validation",
        "torch.utils.data.datapipes._decorator.runtime_validation_disabled": "torch.utils.data.runtime_validation_disabled",
        "torch.jit._script.Attribute": "torch.jit.Attribute",
        "torch.jit.Future": "torch.jit.Future",
        "torch.jit._trace.ONNXTracedModule": "torch.jit.ONNXTracedModule",
        "torch.jit._script.RecursiveScriptClass": "torch.jit.RecursiveScriptClass",
        "torch.jit._script.RecursiveScriptModule": "torch.jit.RecursiveScriptModule",
        "torch.jit._script.ScriptModule": "torch.jit.ScriptModule",
        "torch.jit._script.ScriptWarning": "torch.jit.ScriptWarning",
        "torch.jit._trace.TopLevelTracedModule": "torch.jit.TopLevelTracedModule",
        "torch.jit._trace.TracedModule": "torch.jit.TracedModule",
        "torch.jit._trace.TracerWarning": "torch.jit.TracerWarning",
        "torch.jit._trace.TracingCheckError": "torch.jit.TracingCheckError",
        "torch.jit.annotate": "torch.jit.annotate",
        "torch.jit.enable_onednn_fusion": "torch.jit.enable_onednn_fusion",
        "torch._jit_internal.export": "torch.jit.export",
        "torch.jit.export_opnames": "torch.jit.export_opnames",
        "torch.jit._async.fork": "torch.jit.fork",
        "torch.jit._freeze.freeze": "torch.jit.freeze",
        "torch.jit._fuser.fuser": "torch.jit.fuser",
        "torch._jit_internal.ignore": "torch.jit.ignore",
        "torch.jit._script.interface": "torch.jit.interface",
        "torch._jit_internal.is_scripting": "torch.jit.is_scripting",
        "torch.jit._trace.is_tracing": "torch.jit.is_tracing",
        "torch.jit.isinstance": "torch.jit.isinstance",
        "torch.jit._serialization.jit_module_from_flatbuffer": "torch.jit.jit_module_from_flatbuffer",
        "torch._C.PyCapsule._last_executed_optimized_graph": "torch.jit.last_executed_optimized_graph",
        "torch.jit._serialization.load": "torch.jit.load",
        "torch.jit.onednn_fusion_enabled": "torch.jit.onednn_fusion_enabled",
        "torch.jit._freeze.optimize_for_inference": "torch.jit.optimize_for_inference",
        "torch.jit._fuser.optimized_execution": "torch.jit.optimized_execution",
        "torch.jit._freeze.run_frozen_optimizations": "torch.jit.run_frozen_optimizations",
        "torch.jit._serialization.save": "torch.jit.save",
        "torch.jit._serialization.save_jit_module_to_flatbuffer": "torch.jit.save_jit_module_to_flatbuffer",
        "torch.jit._script.script": "torch.jit.script",
        "torch.jit.script_if_tracing": "torch.jit.script_if_tracing",
        "torch.jit._script.script_method": "torch.jit.script_method",
        "torch.jit._fuser.set_fusion_strategy": "torch.jit.set_fusion_strategy",
        "torch.jit.strict_fusion": "torch.jit.strict_fusion",
        "torch.jit._trace.trace": "torch.jit.trace",
        "torch.jit._trace.trace_module": "torch.jit.trace_module",
        "torch._jit_internal.unused": "torch.jit.unused",
        "torch.jit._async.wait": "torch.jit.wait",
        "torch._C._autograd.DeviceType": "torch.autograd.DeviceType",
        "torch.autograd.function.Function": "torch.autograd.Function",
        "torch.autograd.function.NestedIOFunction": "torch.autograd.NestedIOFunction",
        "torch._C._profiler.ProfilerActivity": "torch.autograd.ProfilerActivity",
        "torch._C._profiler.ProfilerConfig": "torch.autograd.ProfilerConfig",
        "torch._C._autograd.ProfilerEvent": "torch.autograd.ProfilerEvent",
        "torch._C._profiler.ProfilerState": "torch.autograd.ProfilerState",
        "torch._C._autograd.SavedTensor": "torch.autograd.SavedTensor",
        "torch.autograd.variable.Variable": "torch.autograd.Variable",
        "torch.autograd.backward": "torch.autograd.backward",
        "torch.autograd.anomaly_mode.detect_anomaly": "torch.autograd.detect_anomaly",
        "torch.autograd.grad": "torch.autograd.grad",
        "torch.autograd.gradcheck.gradcheck": "torch.autograd.gradcheck",
        "torch.autograd.gradcheck.gradgradcheck": "torch.autograd.gradgradcheck",
        "torch._C._is_multithreading_enabled": "torch.autograd.is_multithreading_enabled",
        "torch.overrides.is_tensor_like": "torch.autograd.is_tensor_like",
        "torch._C._is_view_replay_enabled": "torch.autograd.is_view_replay_enabled",
        "torch._C._autograd.PyCapsule.kineto_available": "torch.autograd.kineto_available",
        "torch.autograd.anomaly_mode.set_detect_anomaly": "torch.autograd.set_detect_anomaly",
        "torch.autograd.grad_mode.set_multithreading_enabled": "torch.autograd.set_multithreading_enabled",
        "torch.autograd.variable": "torch.autograd.variable",
        "torch._C._LinAlgError": "torch.linalg.LinAlgError",
        "torch._C._linalg.linalg_cholesky": "torch.linalg.cholesky",
        "torch._C._linalg.linalg_cholesky_ex": "torch.linalg.cholesky_ex",
        "torch._C._linalg.linalg_cond": "torch.linalg.cond",
        "torch._C._linalg.linalg_cross": "torch.linalg.cross",
        "torch._C._linalg.linalg_det": "torch.linalg.det",
        "torch._C._linalg.linalg_diagonal": "torch.linalg.diagonal",
        "torch._C._linalg.linalg_eig": "torch.linalg.eig",
        "torch._C._linalg.linalg_eigh": "torch.linalg.eigh",
        "torch._C._linalg.linalg_eigvals": "torch.linalg.eigvals",
        "torch._C._linalg.linalg_eigvalsh": "torch.linalg.eigvalsh",
        "torch._C._linalg.linalg_householder_product": "torch.linalg.householder_product",
        "torch._C._linalg.linalg_inv": "torch.linalg.inv",
        "torch._C._linalg.linalg_inv_ex": "torch.linalg.inv_ex",
        "torch._C._linalg.linalg_ldl_factor": "torch.linalg.ldl_factor",
        "torch._C._linalg.linalg_ldl_factor_ex": "torch.linalg.ldl_factor_ex",
        "torch._C._linalg.linalg_ldl_solve": "torch.linalg.ldl_solve",
        "torch._C._linalg.linalg_lstsq": "torch.linalg.lstsq",
        "torch._C._linalg.linalg_lu": "torch.linalg.lu",
        "torch._C._linalg.linalg_lu_factor": "torch.linalg.lu_factor",
        "torch._C._linalg.linalg_lu_factor_ex": "torch.linalg.lu_factor_ex",
        "torch._C._linalg.linalg_lu_solve": "torch.linalg.lu_solve",
        "torch._C._linalg.linalg_matmul": "torch.linalg.matmul",
        "torch._C._linalg.linalg_matrix_exp": "torch.linalg.matrix_exp",
        "torch._C._linalg.linalg_matrix_norm": "torch.linalg.matrix_norm",
        "torch._C._linalg.linalg_matrix_power": "torch.linalg.matrix_power",
        "torch._C._linalg.linalg_matrix_rank": "torch.linalg.matrix_rank",
        "torch._C._linalg.linalg_multi_dot": "torch.linalg.multi_dot",
        "torch._C._linalg.linalg_norm": "torch.linalg.norm",
        "torch._C._linalg.linalg_pinv": "torch.linalg.pinv",
        "torch._C._linalg.linalg_qr": "torch.linalg.qr",
        "torch._C._linalg.linalg_slogdet": "torch.linalg.slogdet",
        "torch._C._linalg.linalg_solve": "torch.linalg.solve",
        "torch._C._linalg.linalg_solve_ex": "torch.linalg.solve_ex",
        "torch._C._linalg.linalg_solve_triangular": "torch.linalg.solve_triangular",
        "torch._C._linalg.linalg_svd": "torch.linalg.svd",
        "torch._C._linalg.linalg_svdvals": "torch.linalg.svdvals",
        "torch._C._linalg.linalg_tensorinv": "torch.linalg.tensorinv",
        "torch._C._linalg.linalg_tensorsolve": "torch.linalg.tensorsolve",
        "torch._C._linalg.linalg_vander": "torch.linalg.vander",
        "torch._C._linalg.linalg_vecdot": "torch.linalg.vecdot",
        "torch._C._linalg.linalg_vector_norm": "torch.linalg.vector_norm",
        "torch._C._fft.fft_fft": "torch.fft.fft",
        "torch._C._fft.fft_fft2": "torch.fft.fft2",
        "torch._C._fft.fft_fftfreq": "torch.fft.fftfreq",
        "torch._C._fft.fft_fftn": "torch.fft.fftn",
        "torch._C._fft.fft_fftshift": "torch.fft.fftshift",
        "torch._C._fft.fft_hfft": "torch.fft.hfft",
        "torch._C._fft.fft_hfft2": "torch.fft.hfft2",
        "torch._C._fft.fft_hfftn": "torch.fft.hfftn",
        "torch._C._fft.fft_ifft": "torch.fft.ifft",
        "torch._C._fft.fft_ifft2": "torch.fft.ifft2",
        "torch._C._fft.fft_ifftn": "torch.fft.ifftn",
        "torch._C._fft.fft_ifftshift": "torch.fft.ifftshift",
        "torch._C._fft.fft_ihfft": "torch.fft.ihfft",
        "torch._C._fft.fft_ihfft2": "torch.fft.ihfft2",
        "torch._C._fft.fft_ihfftn": "torch.fft.ihfftn",
        "torch._C._fft.fft_irfft": "torch.fft.irfft",
        "torch._C._fft.fft_irfft2": "torch.fft.irfft2",
        "torch._C._fft.fft_irfftn": "torch.fft.irfftn",
        "torch._C._fft.fft_rfft": "torch.fft.rfft",
        "torch._C._fft.fft_rfft2": "torch.fft.rfft2",
        "torch._C._fft.fft_rfftfreq": "torch.fft.rfftfreq",
        "torch._C._fft.fft_rfftn": "torch.fft.rfftn"
    },
    "torchvision": {
        "torchvision.disable_beta_transforms_warning": "torchvision.disable_beta_transforms_warning",
        "torchvision.get_image_backend": "torchvision.get_image_backend",
        "torchvision.get_video_backend": "torchvision.get_video_backend",
        "torchvision.set_image_backend": "torchvision.set_image_backend",
        "torchvision.set_video_backend": "torchvision.set_video_backend",
        "torchvision.transforms.autoaugment.AugMix": "torchvision.transforms.AugMix",
        "torchvision.transforms.autoaugment.AutoAugment": "torchvision.transforms.AutoAugment",
        "torchvision.transforms.autoaugment.AutoAugmentPolicy": "torchvision.transforms.AutoAugmentPolicy",
        "torchvision.transforms.transforms.CenterCrop": "torchvision.transforms.CenterCrop",
        "torchvision.transforms.transforms.ColorJitter": "torchvision.transforms.ColorJitter",
        "torchvision.transforms.transforms.Compose": "torchvision.transforms.Compose",
        "torchvision.transforms.transforms.ConvertImageDtype": "torchvision.transforms.ConvertImageDtype",
        "torchvision.transforms.transforms.ElasticTransform": "torchvision.transforms.ElasticTransform",
        "torchvision.transforms.transforms.FiveCrop": "torchvision.transforms.FiveCrop",
        "torchvision.transforms.transforms.GaussianBlur": "torchvision.transforms.GaussianBlur",
        "torchvision.transforms.transforms.Grayscale": "torchvision.transforms.Grayscale",
        "torchvision.transforms.functional.InterpolationMode": "torchvision.transforms.InterpolationMode",
        "torchvision.transforms.transforms.Lambda": "torchvision.transforms.Lambda",
        "torchvision.transforms.transforms.LinearTransformation": "torchvision.transforms.LinearTransformation",
        "torchvision.transforms.transforms.Normalize": "torchvision.transforms.Normalize",
        "torchvision.transforms.transforms.PILToTensor": "torchvision.transforms.PILToTensor",
        "torchvision.transforms.transforms.Pad": "torchvision.transforms.Pad",
        "torchvision.transforms.autoaugment.RandAugment": "torchvision.transforms.RandAugment",
        "torchvision.transforms.transforms.RandomAdjustSharpness": "torchvision.transforms.RandomAdjustSharpness",
        "torchvision.transforms.transforms.RandomAffine": "torchvision.transforms.RandomAffine",
        "torchvision.transforms.transforms.RandomApply": "torchvision.transforms.RandomApply",
        "torchvision.transforms.transforms.RandomAutocontrast": "torchvision.transforms.RandomAutocontrast",
        "torchvision.transforms.transforms.RandomChoice": "torchvision.transforms.RandomChoice",
        "torchvision.transforms.transforms.RandomCrop": "torchvision.transforms.RandomCrop",
        "torchvision.transforms.transforms.RandomEqualize": "torchvision.transforms.RandomEqualize",
        "torchvision.transforms.transforms.RandomErasing": "torchvision.transforms.RandomErasing",
        "torchvision.transforms.transforms.RandomGrayscale": "torchvision.transforms.RandomGrayscale",
        "torchvision.transforms.transforms.RandomHorizontalFlip": "torchvision.transforms.RandomHorizontalFlip",
        "torchvision.transforms.transforms.RandomInvert": "torchvision.transforms.RandomInvert",
        "torchvision.transforms.transforms.RandomOrder": "torchvision.transforms.RandomOrder",
        "torchvision.transforms.transforms.RandomPerspective": "torchvision.transforms.RandomPerspective",
        "torchvision.transforms.transforms.RandomPosterize": "torchvision.transforms.RandomPosterize",
        "torchvision.transforms.transforms.RandomResizedCrop": "torchvision.transforms.RandomResizedCrop",
        "torchvision.transforms.transforms.RandomRotation": "torchvision.transforms.RandomRotation",
        "torchvision.transforms.transforms.RandomSolarize": "torchvision.transforms.RandomSolarize",
        "torchvision.transforms.transforms.RandomVerticalFlip": "torchvision.transforms.RandomVerticalFlip",
        "torchvision.transforms.transforms.Resize": "torchvision.transforms.Resize",
        "torchvision.transforms.transforms.TenCrop": "torchvision.transforms.TenCrop",
        "torchvision.transforms.transforms.ToPILImage": "torchvision.transforms.ToPILImage",
        "torchvision.transforms.transforms.ToTensor": "torchvision.transforms.ToTensor",
        "torchvision.transforms.autoaugment.TrivialAugmentWide": "torchvision.transforms.TrivialAugmentWide",
        "torchvision.datasets.cifar.CIFAR10": "torchvision.datasets.CIFAR10",
        "torchvision.datasets.cifar.CIFAR100": "torchvision.datasets.CIFAR100",
        "torchvision.datasets.clevr.CLEVRClassification": "torchvision.datasets.CLEVRClassification",
        "torchvision.datasets._stereo_matching.CREStereo": "torchvision.datasets.CREStereo",
        "torchvision.datasets.caltech.Caltech101": "torchvision.datasets.Caltech101",
        "torchvision.datasets.caltech.Caltech256": "torchvision.datasets.Caltech256",
        "torchvision.datasets._stereo_matching.CarlaStereo": "torchvision.datasets.CarlaStereo",
        "torchvision.datasets.celeba.CelebA": "torchvision.datasets.CelebA",
        "torchvision.datasets.cityscapes.Cityscapes": "torchvision.datasets.Cityscapes",
        "torchvision.datasets.coco.CocoCaptions": "torchvision.datasets.CocoCaptions",
        "torchvision.datasets.coco.CocoDetection": "torchvision.datasets.CocoDetection",
        "torchvision.datasets.country211.Country211": "torchvision.datasets.Country211",
        "torchvision.datasets.dtd.DTD": "torchvision.datasets.DTD",
        "torchvision.datasets.folder.DatasetFolder": "torchvision.datasets.DatasetFolder",
        "torchvision.datasets.mnist.EMNIST": "torchvision.datasets.EMNIST",
        "torchvision.datasets._stereo_matching.ETH3DStereo": "torchvision.datasets.ETH3DStereo",
        "torchvision.datasets.eurosat.EuroSAT": "torchvision.datasets.EuroSAT",
        "torchvision.datasets.fer2013.FER2013": "torchvision.datasets.FER2013",
        "torchvision.datasets.fgvc_aircraft.FGVCAircraft": "torchvision.datasets.FGVCAircraft",
        "torchvision.datasets.fakedata.FakeData": "torchvision.datasets.FakeData",
        "torchvision.datasets._stereo_matching.FallingThingsStereo": "torchvision.datasets.FallingThingsStereo",
        "torchvision.datasets.mnist.FashionMNIST": "torchvision.datasets.FashionMNIST",
        "torchvision.datasets.flickr.Flickr30k": "torchvision.datasets.Flickr30k",
        "torchvision.datasets.flickr.Flickr8k": "torchvision.datasets.Flickr8k",
        "torchvision.datasets.flowers102.Flowers102": "torchvision.datasets.Flowers102",
        "torchvision.datasets._optical_flow.FlyingChairs": "torchvision.datasets.FlyingChairs",
        "torchvision.datasets._optical_flow.FlyingThings3D": "torchvision.datasets.FlyingThings3D",
        "torchvision.datasets.food101.Food101": "torchvision.datasets.Food101",
        "torchvision.datasets.gtsrb.GTSRB": "torchvision.datasets.GTSRB",
        "torchvision.datasets._optical_flow.HD1K": "torchvision.datasets.HD1K",
        "torchvision.datasets.hmdb51.HMDB51": "torchvision.datasets.HMDB51",
        "torchvision.datasets.inaturalist.INaturalist": "torchvision.datasets.INaturalist",
        "torchvision.datasets.folder.ImageFolder": "torchvision.datasets.ImageFolder",
        "torchvision.datasets.imagenet.ImageNet": "torchvision.datasets.ImageNet",
        "torchvision.datasets.imagenette.Imagenette": "torchvision.datasets.Imagenette",
        "torchvision.datasets._stereo_matching.InStereo2k": "torchvision.datasets.InStereo2k",
        "torchvision.datasets.mnist.KMNIST": "torchvision.datasets.KMNIST",
        "torchvision.datasets.kinetics.Kinetics": "torchvision.datasets.Kinetics",
        "torchvision.datasets.kitti.Kitti": "torchvision.datasets.Kitti",
        "torchvision.datasets._stereo_matching.Kitti2012Stereo": "torchvision.datasets.Kitti2012Stereo",
        "torchvision.datasets._stereo_matching.Kitti2015Stereo": "torchvision.datasets.Kitti2015Stereo",
        "torchvision.datasets._optical_flow.KittiFlow": "torchvision.datasets.KittiFlow",
        "torchvision.datasets.lfw.LFWPairs": "torchvision.datasets.LFWPairs",
        "torchvision.datasets.lfw.LFWPeople": "torchvision.datasets.LFWPeople",
        "torchvision.datasets.lsun.LSUN": "torchvision.datasets.LSUN",
        "torchvision.datasets.lsun.LSUNClass": "torchvision.datasets.LSUNClass",
        "torchvision.datasets.mnist.MNIST": "torchvision.datasets.MNIST",
        "torchvision.datasets._stereo_matching.Middlebury2014Stereo": "torchvision.datasets.Middlebury2014Stereo",
        "torchvision.datasets.moving_mnist.MovingMNIST": "torchvision.datasets.MovingMNIST",
        "torchvision.datasets.omniglot.Omniglot": "torchvision.datasets.Omniglot",
        "torchvision.datasets.oxford_iiit_pet.OxfordIIITPet": "torchvision.datasets.OxfordIIITPet",
        "torchvision.datasets.pcam.PCAM": "torchvision.datasets.PCAM",
        "torchvision.datasets.phototour.PhotoTour": "torchvision.datasets.PhotoTour",
        "torchvision.datasets.places365.Places365": "torchvision.datasets.Places365",
        "torchvision.datasets.mnist.QMNIST": "torchvision.datasets.QMNIST",
        "torchvision.datasets.rendered_sst2.RenderedSST2": "torchvision.datasets.RenderedSST2",
        "torchvision.datasets.sbd.SBDataset": "torchvision.datasets.SBDataset",
        "torchvision.datasets.sbu.SBU": "torchvision.datasets.SBU",
        "torchvision.datasets.semeion.SEMEION": "torchvision.datasets.SEMEION",
        "torchvision.datasets.stl10.STL10": "torchvision.datasets.STL10",
        "torchvision.datasets.sun397.SUN397": "torchvision.datasets.SUN397",
        "torchvision.datasets.svhn.SVHN": "torchvision.datasets.SVHN",
        "torchvision.datasets._stereo_matching.SceneFlowStereo": "torchvision.datasets.SceneFlowStereo",
        "torchvision.datasets._optical_flow.Sintel": "torchvision.datasets.Sintel",
        "torchvision.datasets._stereo_matching.SintelStereo": "torchvision.datasets.SintelStereo",
        "torchvision.datasets.stanford_cars.StanfordCars": "torchvision.datasets.StanfordCars",
        "torchvision.datasets.ucf101.UCF101": "torchvision.datasets.UCF101",
        "torchvision.datasets.usps.USPS": "torchvision.datasets.USPS",
        "torchvision.datasets.voc.VOCDetection": "torchvision.datasets.VOCDetection",
        "torchvision.datasets.voc.VOCSegmentation": "torchvision.datasets.VOCSegmentation",
        "torchvision.datasets.vision.VisionDataset": "torchvision.datasets.VisionDataset",
        "torchvision.datasets.widerface.WIDERFace": "torchvision.datasets.WIDERFace",
        "torchvision.models.alexnet.AlexNet": "torchvision.models.AlexNet",
        "torchvision.models.alexnet.AlexNet_Weights": "torchvision.models.AlexNet_Weights",
        "torchvision.models.convnext.ConvNeXt": "torchvision.models.ConvNeXt",
        "torchvision.models.convnext.ConvNeXt_Base_Weights": "torchvision.models.ConvNeXt_Base_Weights",
        "torchvision.models.convnext.ConvNeXt_Large_Weights": "torchvision.models.ConvNeXt_Large_Weights",
        "torchvision.models.convnext.ConvNeXt_Small_Weights": "torchvision.models.ConvNeXt_Small_Weights",
        "torchvision.models.convnext.ConvNeXt_Tiny_Weights": "torchvision.models.ConvNeXt_Tiny_Weights",
        "torchvision.models.densenet.DenseNet": "torchvision.models.DenseNet",
        "torchvision.models.densenet.DenseNet121_Weights": "torchvision.models.DenseNet121_Weights",
        "torchvision.models.densenet.DenseNet161_Weights": "torchvision.models.DenseNet161_Weights",
        "torchvision.models.densenet.DenseNet169_Weights": "torchvision.models.DenseNet169_Weights",
        "torchvision.models.densenet.DenseNet201_Weights": "torchvision.models.DenseNet201_Weights",
        "torchvision.models.efficientnet.EfficientNet": "torchvision.models.EfficientNet",
        "torchvision.models.efficientnet.EfficientNet_B0_Weights": "torchvision.models.EfficientNet_B0_Weights",
        "torchvision.models.efficientnet.EfficientNet_B1_Weights": "torchvision.models.EfficientNet_B1_Weights",
        "torchvision.models.efficientnet.EfficientNet_B2_Weights": "torchvision.models.EfficientNet_B2_Weights",
        "torchvision.models.efficientnet.EfficientNet_B3_Weights": "torchvision.models.EfficientNet_B3_Weights",
        "torchvision.models.efficientnet.EfficientNet_B4_Weights": "torchvision.models.EfficientNet_B4_Weights",
        "torchvision.models.efficientnet.EfficientNet_B5_Weights": "torchvision.models.EfficientNet_B5_Weights",
        "torchvision.models.efficientnet.EfficientNet_B6_Weights": "torchvision.models.EfficientNet_B6_Weights",
        "torchvision.models.efficientnet.EfficientNet_B7_Weights": "torchvision.models.EfficientNet_B7_Weights",
        "torchvision.models.efficientnet.EfficientNet_V2_L_Weights": "torchvision.models.EfficientNet_V2_L_Weights",
        "torchvision.models.efficientnet.EfficientNet_V2_M_Weights": "torchvision.models.EfficientNet_V2_M_Weights",
        "torchvision.models.efficientnet.EfficientNet_V2_S_Weights": "torchvision.models.EfficientNet_V2_S_Weights",
        "torchvision.models.googlenet.GoogLeNet": "torchvision.models.GoogLeNet",
        "torchvision.models.googlenet.GoogLeNetOutputs": "torchvision.models.GoogLeNetOutputs",
        "torchvision.models.googlenet.GoogLeNet_Weights": "torchvision.models.GoogLeNet_Weights",
        "torchvision.models.inception.Inception3": "torchvision.models.Inception3",
        "torchvision.models.inception.InceptionOutputs": "torchvision.models.InceptionOutputs",
        "torchvision.models.inception.Inception_V3_Weights": "torchvision.models.Inception_V3_Weights",
        "torchvision.models.mnasnet.MNASNet": "torchvision.models.MNASNet",
        "torchvision.models.mnasnet.MNASNet0_5_Weights": "torchvision.models.MNASNet0_5_Weights",
        "torchvision.models.mnasnet.MNASNet0_75_Weights": "torchvision.models.MNASNet0_75_Weights",
        "torchvision.models.mnasnet.MNASNet1_0_Weights": "torchvision.models.MNASNet1_0_Weights",
        "torchvision.models.mnasnet.MNASNet1_3_Weights": "torchvision.models.MNASNet1_3_Weights",
        "torchvision.models.maxvit.MaxVit": "torchvision.models.MaxVit",
        "torchvision.models.maxvit.MaxVit_T_Weights": "torchvision.models.MaxVit_T_Weights",
        "torchvision.models.mobilenetv2.MobileNetV2": "torchvision.models.MobileNetV2",
        "torchvision.models.mobilenetv3.MobileNetV3": "torchvision.models.MobileNetV3",
        "torchvision.models.mobilenetv2.MobileNet_V2_Weights": "torchvision.models.MobileNet_V2_Weights",
        "torchvision.models.mobilenetv3.MobileNet_V3_Large_Weights": "torchvision.models.MobileNet_V3_Large_Weights",
        "torchvision.models.mobilenetv3.MobileNet_V3_Small_Weights": "torchvision.models.MobileNet_V3_Small_Weights",
        "torchvision.models.regnet.RegNet": "torchvision.models.RegNet",
        "torchvision.models.regnet.RegNet_X_16GF_Weights": "torchvision.models.RegNet_X_16GF_Weights",
        "torchvision.models.regnet.RegNet_X_1_6GF_Weights": "torchvision.models.RegNet_X_1_6GF_Weights",
        "torchvision.models.regnet.RegNet_X_32GF_Weights": "torchvision.models.RegNet_X_32GF_Weights",
        "torchvision.models.regnet.RegNet_X_3_2GF_Weights": "torchvision.models.RegNet_X_3_2GF_Weights",
        "torchvision.models.regnet.RegNet_X_400MF_Weights": "torchvision.models.RegNet_X_400MF_Weights",
        "torchvision.models.regnet.RegNet_X_800MF_Weights": "torchvision.models.RegNet_X_800MF_Weights",
        "torchvision.models.regnet.RegNet_X_8GF_Weights": "torchvision.models.RegNet_X_8GF_Weights",
        "torchvision.models.regnet.RegNet_Y_128GF_Weights": "torchvision.models.RegNet_Y_128GF_Weights",
        "torchvision.models.regnet.RegNet_Y_16GF_Weights": "torchvision.models.RegNet_Y_16GF_Weights",
        "torchvision.models.regnet.RegNet_Y_1_6GF_Weights": "torchvision.models.RegNet_Y_1_6GF_Weights",
        "torchvision.models.regnet.RegNet_Y_32GF_Weights": "torchvision.models.RegNet_Y_32GF_Weights",
        "torchvision.models.regnet.RegNet_Y_3_2GF_Weights": "torchvision.models.RegNet_Y_3_2GF_Weights",
        "torchvision.models.regnet.RegNet_Y_400MF_Weights": "torchvision.models.RegNet_Y_400MF_Weights",
        "torchvision.models.regnet.RegNet_Y_800MF_Weights": "torchvision.models.RegNet_Y_800MF_Weights",
        "torchvision.models.regnet.RegNet_Y_8GF_Weights": "torchvision.models.RegNet_Y_8GF_Weights",
        "torchvision.models.resnet.ResNeXt101_32X8D_Weights": "torchvision.models.ResNeXt101_32X8D_Weights",
        "torchvision.models.resnet.ResNeXt101_64X4D_Weights": "torchvision.models.ResNeXt101_64X4D_Weights",
        "torchvision.models.resnet.ResNeXt50_32X4D_Weights": "torchvision.models.ResNeXt50_32X4D_Weights",
        "torchvision.models.resnet.ResNet": "torchvision.models.ResNet",
        "torchvision.models.resnet.ResNet101_Weights": "torchvision.models.ResNet101_Weights",
        "torchvision.models.resnet.ResNet152_Weights": "torchvision.models.ResNet152_Weights",
        "torchvision.models.resnet.ResNet18_Weights": "torchvision.models.ResNet18_Weights",
        "torchvision.models.resnet.ResNet34_Weights": "torchvision.models.ResNet34_Weights",
        "torchvision.models.resnet.ResNet50_Weights": "torchvision.models.ResNet50_Weights",
        "torchvision.models.shufflenetv2.ShuffleNetV2": "torchvision.models.ShuffleNetV2",
        "torchvision.models.shufflenetv2.ShuffleNet_V2_X0_5_Weights": "torchvision.models.ShuffleNet_V2_X0_5_Weights",
        "torchvision.models.shufflenetv2.ShuffleNet_V2_X1_0_Weights": "torchvision.models.ShuffleNet_V2_X1_0_Weights",
        "torchvision.models.shufflenetv2.ShuffleNet_V2_X1_5_Weights": "torchvision.models.ShuffleNet_V2_X1_5_Weights",
        "torchvision.models.shufflenetv2.ShuffleNet_V2_X2_0_Weights": "torchvision.models.ShuffleNet_V2_X2_0_Weights",
        "torchvision.models.squeezenet.SqueezeNet": "torchvision.models.SqueezeNet",
        "torchvision.models.squeezenet.SqueezeNet1_0_Weights": "torchvision.models.SqueezeNet1_0_Weights",
        "torchvision.models.squeezenet.SqueezeNet1_1_Weights": "torchvision.models.SqueezeNet1_1_Weights",
        "torchvision.models.swin_transformer.SwinTransformer": "torchvision.models.SwinTransformer",
        "torchvision.models.swin_transformer.Swin_B_Weights": "torchvision.models.Swin_B_Weights",
        "torchvision.models.swin_transformer.Swin_S_Weights": "torchvision.models.Swin_S_Weights",
        "torchvision.models.swin_transformer.Swin_T_Weights": "torchvision.models.Swin_T_Weights",
        "torchvision.models.swin_transformer.Swin_V2_B_Weights": "torchvision.models.Swin_V2_B_Weights",
        "torchvision.models.swin_transformer.Swin_V2_S_Weights": "torchvision.models.Swin_V2_S_Weights",
        "torchvision.models.swin_transformer.Swin_V2_T_Weights": "torchvision.models.Swin_V2_T_Weights",
        "torchvision.models.vgg.VGG": "torchvision.models.VGG",
        "torchvision.models.vgg.VGG11_BN_Weights": "torchvision.models.VGG11_BN_Weights",
        "torchvision.models.vgg.VGG11_Weights": "torchvision.models.VGG11_Weights",
        "torchvision.models.vgg.VGG13_BN_Weights": "torchvision.models.VGG13_BN_Weights",
        "torchvision.models.vgg.VGG13_Weights": "torchvision.models.VGG13_Weights",
        "torchvision.models.vgg.VGG16_BN_Weights": "torchvision.models.VGG16_BN_Weights",
        "torchvision.models.vgg.VGG16_Weights": "torchvision.models.VGG16_Weights",
        "torchvision.models.vgg.VGG19_BN_Weights": "torchvision.models.VGG19_BN_Weights",
        "torchvision.models.vgg.VGG19_Weights": "torchvision.models.VGG19_Weights",
        "torchvision.models.vision_transformer.ViT_B_16_Weights": "torchvision.models.ViT_B_16_Weights",
        "torchvision.models.vision_transformer.ViT_B_32_Weights": "torchvision.models.ViT_B_32_Weights",
        "torchvision.models.vision_transformer.ViT_H_14_Weights": "torchvision.models.ViT_H_14_Weights",
        "torchvision.models.vision_transformer.ViT_L_16_Weights": "torchvision.models.ViT_L_16_Weights",
        "torchvision.models.vision_transformer.ViT_L_32_Weights": "torchvision.models.ViT_L_32_Weights",
        "torchvision.models.vision_transformer.VisionTransformer": "torchvision.models.VisionTransformer",
        "torchvision.models._api.Weights": "torchvision.models.Weights",
        "torchvision.models._api.WeightsEnum": "torchvision.models.WeightsEnum",
        "torchvision.models.resnet.Wide_ResNet101_2_Weights": "torchvision.models.Wide_ResNet101_2_Weights",
        "torchvision.models.resnet.Wide_ResNet50_2_Weights": "torchvision.models.Wide_ResNet50_2_Weights",
        "torchvision.models.alexnet.alexnet": "torchvision.models.alexnet",
        "torchvision.models.convnext.convnext_base": "torchvision.models.convnext_base",
        "torchvision.models.convnext.convnext_large": "torchvision.models.convnext_large",
        "torchvision.models.convnext.convnext_small": "torchvision.models.convnext_small",
        "torchvision.models.convnext.convnext_tiny": "torchvision.models.convnext_tiny",
        "torchvision.models.densenet.densenet121": "torchvision.models.densenet121",
        "torchvision.models.densenet.densenet161": "torchvision.models.densenet161",
        "torchvision.models.densenet.densenet169": "torchvision.models.densenet169",
        "torchvision.models.densenet.densenet201": "torchvision.models.densenet201",
        "torchvision.models.efficientnet.efficientnet_b0": "torchvision.models.efficientnet_b0",
        "torchvision.models.efficientnet.efficientnet_b1": "torchvision.models.efficientnet_b1",
        "torchvision.models.efficientnet.efficientnet_b2": "torchvision.models.efficientnet_b2",
        "torchvision.models.efficientnet.efficientnet_b3": "torchvision.models.efficientnet_b3",
        "torchvision.models.efficientnet.efficientnet_b4": "torchvision.models.efficientnet_b4",
        "torchvision.models.efficientnet.efficientnet_b5": "torchvision.models.efficientnet_b5",
        "torchvision.models.efficientnet.efficientnet_b6": "torchvision.models.efficientnet_b6",
        "torchvision.models.efficientnet.efficientnet_b7": "torchvision.models.efficientnet_b7",
        "torchvision.models.efficientnet.efficientnet_v2_l": "torchvision.models.efficientnet_v2_l",
        "torchvision.models.efficientnet.efficientnet_v2_m": "torchvision.models.efficientnet_v2_m",
        "torchvision.models.efficientnet.efficientnet_v2_s": "torchvision.models.efficientnet_v2_s",
        "torchvision.models._api.get_model": "torchvision.models.get_model",
        "torchvision.models._api.get_model_builder": "torchvision.models.get_model_builder",
        "torchvision.models._api.get_model_weights": "torchvision.models.get_model_weights",
        "torchvision.models._api.get_weight": "torchvision.models.get_weight",
        "torchvision.models.googlenet.googlenet": "torchvision.models.googlenet",
        "torchvision.models.inception.inception_v3": "torchvision.models.inception_v3",
        "torchvision.models._api.list_models": "torchvision.models.list_models",
        "torchvision.models.maxvit.maxvit_t": "torchvision.models.maxvit_t",
        "torchvision.models.mnasnet.mnasnet0_5": "torchvision.models.mnasnet0_5",
        "torchvision.models.mnasnet.mnasnet0_75": "torchvision.models.mnasnet0_75",
        "torchvision.models.mnasnet.mnasnet1_0": "torchvision.models.mnasnet1_0",
        "torchvision.models.mnasnet.mnasnet1_3": "torchvision.models.mnasnet1_3",
        "torchvision.models.mobilenetv2.mobilenet_v2": "torchvision.models.mobilenet_v2",
        "torchvision.models.mobilenetv3.mobilenet_v3_large": "torchvision.models.mobilenet_v3_large",
        "torchvision.models.mobilenetv3.mobilenet_v3_small": "torchvision.models.mobilenet_v3_small",
        "torchvision.models.regnet.regnet_x_16gf": "torchvision.models.regnet_x_16gf",
        "torchvision.models.regnet.regnet_x_1_6gf": "torchvision.models.regnet_x_1_6gf",
        "torchvision.models.regnet.regnet_x_32gf": "torchvision.models.regnet_x_32gf",
        "torchvision.models.regnet.regnet_x_3_2gf": "torchvision.models.regnet_x_3_2gf",
        "torchvision.models.regnet.regnet_x_400mf": "torchvision.models.regnet_x_400mf",
        "torchvision.models.regnet.regnet_x_800mf": "torchvision.models.regnet_x_800mf",
        "torchvision.models.regnet.regnet_x_8gf": "torchvision.models.regnet_x_8gf",
        "torchvision.models.regnet.regnet_y_128gf": "torchvision.models.regnet_y_128gf",
        "torchvision.models.regnet.regnet_y_16gf": "torchvision.models.regnet_y_16gf",
        "torchvision.models.regnet.regnet_y_1_6gf": "torchvision.models.regnet_y_1_6gf",
        "torchvision.models.regnet.regnet_y_32gf": "torchvision.models.regnet_y_32gf",
        "torchvision.models.regnet.regnet_y_3_2gf": "torchvision.models.regnet_y_3_2gf",
        "torchvision.models.regnet.regnet_y_400mf": "torchvision.models.regnet_y_400mf",
        "torchvision.models.regnet.regnet_y_800mf": "torchvision.models.regnet_y_800mf",
        "torchvision.models.regnet.regnet_y_8gf": "torchvision.models.regnet_y_8gf",
        "torchvision.models.resnet.resnet101": "torchvision.models.resnet101",
        "torchvision.models.resnet.resnet152": "torchvision.models.resnet152",
        "torchvision.models.resnet.resnet18": "torchvision.models.resnet18",
        "torchvision.models.resnet.resnet34": "torchvision.models.resnet34",
        "torchvision.models.resnet.resnet50": "torchvision.models.resnet50",
        "torchvision.models.resnet.resnext101_32x8d": "torchvision.models.resnext101_32x8d",
        "torchvision.models.resnet.resnext101_64x4d": "torchvision.models.resnext101_64x4d",
        "torchvision.models.resnet.resnext50_32x4d": "torchvision.models.resnext50_32x4d",
        "torchvision.models.shufflenetv2.shufflenet_v2_x0_5": "torchvision.models.shufflenet_v2_x0_5",
        "torchvision.models.shufflenetv2.shufflenet_v2_x1_0": "torchvision.models.shufflenet_v2_x1_0",
        "torchvision.models.shufflenetv2.shufflenet_v2_x1_5": "torchvision.models.shufflenet_v2_x1_5",
        "torchvision.models.shufflenetv2.shufflenet_v2_x2_0": "torchvision.models.shufflenet_v2_x2_0",
        "torchvision.models.squeezenet.squeezenet1_0": "torchvision.models.squeezenet1_0",
        "torchvision.models.squeezenet.squeezenet1_1": "torchvision.models.squeezenet1_1",
        "torchvision.models.swin_transformer.swin_b": "torchvision.models.swin_b",
        "torchvision.models.swin_transformer.swin_s": "torchvision.models.swin_s",
        "torchvision.models.swin_transformer.swin_t": "torchvision.models.swin_t",
        "torchvision.models.swin_transformer.swin_v2_b": "torchvision.models.swin_v2_b",
        "torchvision.models.swin_transformer.swin_v2_s": "torchvision.models.swin_v2_s",
        "torchvision.models.swin_transformer.swin_v2_t": "torchvision.models.swin_v2_t",
        "torchvision.models.vgg.vgg11": "torchvision.models.vgg11",
        "torchvision.models.vgg.vgg11_bn": "torchvision.models.vgg11_bn",
        "torchvision.models.vgg.vgg13": "torchvision.models.vgg13",
        "torchvision.models.vgg.vgg13_bn": "torchvision.models.vgg13_bn",
        "torchvision.models.vgg.vgg16": "torchvision.models.vgg16",
        "torchvision.models.vgg.vgg16_bn": "torchvision.models.vgg16_bn",
        "torchvision.models.vgg.vgg19": "torchvision.models.vgg19",
        "torchvision.models.vgg.vgg19_bn": "torchvision.models.vgg19_bn",
        "torchvision.models.vision_transformer.vit_b_16": "torchvision.models.vit_b_16",
        "torchvision.models.vision_transformer.vit_b_32": "torchvision.models.vit_b_32",
        "torchvision.models.vision_transformer.vit_h_14": "torchvision.models.vit_h_14",
        "torchvision.models.vision_transformer.vit_l_16": "torchvision.models.vit_l_16",
        "torchvision.models.vision_transformer.vit_l_32": "torchvision.models.vit_l_32",
        "torchvision.models.resnet.wide_resnet101_2": "torchvision.models.wide_resnet101_2",
        "torchvision.models.resnet.wide_resnet50_2": "torchvision.models.wide_resnet50_2"
    }
}