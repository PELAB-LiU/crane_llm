# Executed Cells:
## Cell 1:

import numpy as np
import pandas as pd
import os, datetime, sys, random, time

import matplotlib.pyplot as plt
import matplotlib.gridspec as gridspec

plt.style.use('fivethirtyeight')
%matplotlib inline

from scipy import stats, special
import shap

import warnings
warnings.filterwarnings('ignore')

train_data=pd.read_csv("data/cs-training_synthetic.csv",encoding="utf-8")
test_data=pd.read_csv("data/cs-test_synthetic.csv",encoding="utf-8")

print(train_data.head())
print(test_data.head())

## Cell 2:


dev_train=train_data.drop("Unnamed: 0",axis=1)

print(test_data.info())
dev_test=test_data.drop("Unnamed: 0",axis=1)

# Current relevent runtime information:
{'__method__plt_show': {'type': "<class 'function'>"},
 '__method__plt_subplots': {'type': "<class 'function'>"},
 'dev_train': {'execution_cell_source': {'cellno': 3, 'lineno': 2},
               'has_nan': True,
               'per_column': {'DebtRatio': {'num_unique': 149653,
                                            'type': 'continuous',
                                            'value_range': (8.74, 329663.87)},
                              'MonthlyIncome': {'num_unique': 120249,
                                                'type': 'continuous',
                                                'value_range': (17.82,
                                                                3008705.6)},
                              'NumberOfDependents': {'num_unique': 2001,
                                                     'type': 'continuous',
                                                     'value_range': (0.0,
                                                                     20.0)},
                              'NumberOfOpenCreditLinesAndLoans': {'num_unique': 59,
                                                                  'type': 'continuous',
                                                                  'value_range': (0,
                                                                                  58)},
                              'NumberOfTime30-59DaysPastDueNotWorse': {'num_unique': 99,
                                                                       'type': 'continuous',
                                                                       'value_range': (0,
                                                                                       98)},
                              'NumberOfTime60-89DaysPastDueNotWorse': {'num_unique': 99,
                                                                       'type': 'continuous',
                                                                       'value_range': (0,
                                                                                       98)},
                              'NumberOfTimes90DaysLate': {'num_unique': 99,
                                                          'type': 'continuous',
                                                          'value_range': (0,
                                                                          98)},
                              'NumberRealEstateLoansOrLines': {'num_unique': 55,
                                                               'type': 'continuous',
                                                               'value_range': (0,
                                                                               54)},
                              'RevolvingUtilizationOfUnsecuredLines': {'num_unique': 147851,
                                                                       'type': 'continuous',
                                                                       'value_range': (0.56,
                                                                                       50707.69)},
                              'SeriousDlqin2yrs': {'num_unique': 2,
                                                   'type': 'binary',
                                                   'value_range': (0, 1)},
                              'age': {'num_unique': 110,
                                      'type': 'continuous',
                                      'value_range': (0, 109)}},
               'shape': (150000, 11),
               'type': 'pandas.core.frame.DataFrame'},
 'plt': {'type': "<class 'module'>"}}
# Target Cell:

import seaborn as sns

fig,axes=plt.subplots(1,2,figsize=(12,6))

dev_train['SeriousDlqin2yrs'].value_counts().plot.pie(explode=[0,0.1],autopct="%1.1f%%",ax=axes[0])
axes[0].set_title("SeriousDlqin2yrs")
sns.countplot("SeriousDlqin2yrs",data=dev_train,ax=axes[1])
axes[1].set_title("SeriousDlqin2yrs")
plt.show()